#!/usr/bin/env python

# Simple subunit testrunner for python

# NOTE: This is deprecated - Using the standard subunit runner is
# preferred - e.g. "python -m subunit.run YOURMODULE".
#
# This wrapper will be removed once all tests can be run
# without it. At the moment there are various tests which still
# get e.g. credentials passed via command-line options to this
# script.

# Copyright (C) Jelmer Vernooij <jelmer@samba.org> 2007-2011
#   
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#   
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#   
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import sys

# make sure the script dies immediately when hitting control-C,
# rather than raising KeyboardInterrupt. As we do all database
# operations using transactions, this is safe.
import signal
signal.signal(signal.SIGINT, signal.SIG_DFL)

# Find right directory when running from source tree
sys.path.insert(0, "bin/python")

import optparse
import samba
samba.ensure_external_module("testtools", "testtools")
samba.ensure_external_module("subunit", "subunit/python")
from subunit.run import SubunitTestRunner
import samba.getopt as options
import samba.tests


usage = 'subunitrun [options] <tests>'
description = '''
This runs a Samba python test suite. The tests are typically located in
python/samba/tests/*.py

To run the tests from one of those modules, specify the test as
samba.tests.MODULE. For example, to run the tests in common.py:

   subunitrun samba.tests.common

To list the tests in that module, use:

   subunitrun -l samba.tests.common

NOTE: This script is deprecated in favor of "python -m subunit.run". Don't use
it unless it can be avoided.
'''

def format_description(formatter):
    '''hack to prevent textwrap of the description'''
    return description

parser = optparse.OptionParser(usage=usage, description=description)
parser.format_description = format_description
credopts = options.CredentialsOptions(parser)
sambaopts = options.SambaOptions(parser)
parser.add_option_group(credopts)
parser.add_option_group(sambaopts)
try:
    from subunit.run import TestProgram
except ImportError:
    from unittest import TestProgram
else:
    parser.add_option('-l', '--list', dest='listtests', default=False,
                      help='List tests rather than running them.',
                      action="store_true")

opts, args = parser.parse_args()

if getattr(opts, "listtests", False):
    args.insert(0, "--list")
else:
    lp = sambaopts.get_loadparm()
    samba.tests.cmdline_credentials = credopts.get_credentials(lp)

runner = SubunitTestRunner()
program = TestProgram(module=None, argv=[sys.argv[0]] + args, testRunner=runner)
