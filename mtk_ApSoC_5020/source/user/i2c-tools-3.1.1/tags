!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BIGENDIAN	eeprom/decode-dimms	/^use constant BIGENDIAN		=> "big-endian";$/;"	c
BUNCH	tools/i2cbusses.c	113;"	d	file:
BYTES_PER_PAGE	eepromer/eeprom.c	25;"	d	file:
CC	Makefile	/^CC	= \/opt\/buildroot-gcc463_arm\/usr\/bin\/arm-buildroot-linux-uclibcgnueabi-gcc$/;"	m
CHECK_I2C_FUNC	eepromer/24cXX.c	64;"	d	file:
DEFAULT_EEPROM_ADDR	eepromer/eeprom.c	23;"	d	file:
DEFAULT_I2C_BUS	eepromer/eeprom.c	22;"	d	file:
DEFAULT_NUM_PAGES	eepromer/eeprom.c	24;"	d	file:
DESTDIR	Makefile	/^DESTDIR	=$/;"	m
DISTUTILS	py-smbus/Module.mk	/^DISTUTILS := \\$/;"	m
EEPROM_DIR	eeprom/Module.mk	/^EEPROM_DIR	:= eeprom$/;"	m
EEPROM_MANPAGES	eeprom/Module.mk	/^EEPROM_MANPAGES	:= decode-dimms.1 decode-vaio.1$/;"	m
EEPROM_SIZE	eepromer/eepromer.c	13;"	d	file:
EEPROM_TARGETS	eeprom/Module.mk	/^EEPROM_TARGETS	:= decode-dimms decode-vaio ddcmon decode-edid$/;"	m
EEPROM_TYPE_16BIT_ADDR	eepromer/24cXX.h	22;"	d
EEPROM_TYPE_8BIT_ADDR	eepromer/24cXX.h	21;"	d
EEPROM_TYPE_UNKNOWN	eepromer/24cXX.h	20;"	d
ENV_DEV	eepromer/eeprog.c	29;"	d	file:
ENV_I2C_ADDR	eepromer/eeprog.c	30;"	d	file:
ERASE	eepromer/eepromer.c	16;"	d	file:
EXTRA	Makefile	/^EXTRA	:=$/;"	m
Extension	py-smbus/setup.py	/^from distutils.core import setup, Extension$/;"	i
FORCE	eepromer/eepromer.c	21;"	d	file:
HEAD_SIZE	eepromer/eepromer.c	19;"	d	file:
I2C_FUNCS	include/linux/i2c-dev.h	131;"	d
I2C_FUNC_10BIT_ADDR	include/linux/i2c-dev.h	53;"	d
I2C_FUNC_I2C	include/linux/i2c-dev.h	52;"	d
I2C_FUNC_PROTOCOL_MANGLING	include/linux/i2c-dev.h	54;"	d
I2C_FUNC_SMBUS_BLOCK_DATA	include/linux/i2c-dev.h	76;"	d
I2C_FUNC_SMBUS_BLOCK_PROC_CALL	include/linux/i2c-dev.h	56;"	d
I2C_FUNC_SMBUS_BYTE	include/linux/i2c-dev.h	70;"	d
I2C_FUNC_SMBUS_BYTE_DATA	include/linux/i2c-dev.h	72;"	d
I2C_FUNC_SMBUS_HWPEC_CALC	include/linux/i2c-dev.h	82;"	d
I2C_FUNC_SMBUS_I2C_BLOCK	include/linux/i2c-dev.h	78;"	d
I2C_FUNC_SMBUS_PEC	include/linux/i2c-dev.h	55;"	d
I2C_FUNC_SMBUS_PROC_CALL	include/linux/i2c-dev.h	64;"	d
I2C_FUNC_SMBUS_QUICK	include/linux/i2c-dev.h	57;"	d
I2C_FUNC_SMBUS_READ_BLOCK_DATA	include/linux/i2c-dev.h	65;"	d
I2C_FUNC_SMBUS_READ_BYTE	include/linux/i2c-dev.h	58;"	d
I2C_FUNC_SMBUS_READ_BYTE_DATA	include/linux/i2c-dev.h	60;"	d
I2C_FUNC_SMBUS_READ_I2C_BLOCK	include/linux/i2c-dev.h	67;"	d
I2C_FUNC_SMBUS_READ_WORD_DATA	include/linux/i2c-dev.h	62;"	d
I2C_FUNC_SMBUS_WORD_DATA	include/linux/i2c-dev.h	74;"	d
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA	include/linux/i2c-dev.h	66;"	d
I2C_FUNC_SMBUS_WRITE_BYTE	include/linux/i2c-dev.h	59;"	d
I2C_FUNC_SMBUS_WRITE_BYTE_DATA	include/linux/i2c-dev.h	61;"	d
I2C_FUNC_SMBUS_WRITE_I2C_BLOCK	include/linux/i2c-dev.h	68;"	d
I2C_FUNC_SMBUS_WRITE_WORD_DATA	include/linux/i2c-dev.h	63;"	d
I2C_M_IGNORE_NAK	include/linux/i2c-dev.h	44;"	d
I2C_M_NOSTART	include/linux/i2c-dev.h	42;"	d
I2C_M_NO_RD_ACK	include/linux/i2c-dev.h	45;"	d
I2C_M_RD	include/linux/i2c-dev.h	41;"	d
I2C_M_REV_DIR_ADDR	include/linux/i2c-dev.h	43;"	d
I2C_M_TEN	include/linux/i2c-dev.h	40;"	d
I2C_PEC	include/linux/i2c-dev.h	135;"	d
I2C_RDRW_IOCTL_MAX_MSGS	include/linux/i2c-dev.h	153;"	d
I2C_RDWR	include/linux/i2c-dev.h	133;"	d
I2C_RETRIES	include/linux/i2c-dev.h	119;"	d
I2C_SLAVE	include/linux/i2c-dev.h	126;"	d
I2C_SLAVE_FORCE	include/linux/i2c-dev.h	127;"	d
I2C_SMBUS	include/linux/i2c-dev.h	136;"	d
I2C_SMBUS_BLOCK_DATA	include/linux/i2c-dev.h	107;"	d
I2C_SMBUS_BLOCK_MAX	include/linux/i2c-dev.h	87;"	d
I2C_SMBUS_BLOCK_PROC_CALL	include/linux/i2c-dev.h	109;"	d
I2C_SMBUS_BYTE	include/linux/i2c-dev.h	103;"	d
I2C_SMBUS_BYTE_DATA	include/linux/i2c-dev.h	104;"	d
I2C_SMBUS_I2C_BLOCK_BROKEN	include/linux/i2c-dev.h	108;"	d
I2C_SMBUS_I2C_BLOCK_BROKEN	py-smbus/smbusmodule.c	32;"	d	file:
I2C_SMBUS_I2C_BLOCK_DATA	include/linux/i2c-dev.h	110;"	d
I2C_SMBUS_I2C_BLOCK_DATA	py-smbus/smbusmodule.c	31;"	d	file:
I2C_SMBUS_I2C_BLOCK_DATA	py-smbus/smbusmodule.c	33;"	d	file:
I2C_SMBUS_I2C_BLOCK_MAX	include/linux/i2c-dev.h	88;"	d
I2C_SMBUS_PROC_CALL	include/linux/i2c-dev.h	106;"	d
I2C_SMBUS_QUICK	include/linux/i2c-dev.h	102;"	d
I2C_SMBUS_READ	include/linux/i2c-dev.h	97;"	d
I2C_SMBUS_WORD_DATA	include/linux/i2c-dev.h	105;"	d
I2C_SMBUS_WRITE	include/linux/i2c-dev.h	98;"	d
I2C_TENBIT	include/linux/i2c-dev.h	129;"	d
I2C_TIMEOUT	include/linux/i2c-dev.h	121;"	d
INCLUDE_DIR	include/Module.mk	/^INCLUDE_DIR	:= include$/;"	m
INCLUDE_TARGETS	include/Module.mk	/^INCLUDE_TARGETS	:= linux\/i2c-dev.h$/;"	m
INSTALL	Makefile	/^INSTALL		:= install$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA	:= $(INSTALL) -m 644$/;"	m
INSTALL_DIR	Makefile	/^INSTALL_DIR	:= $(INSTALL) -m 755 -d$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM	:= $(INSTALL) -m 755$/;"	m
KERNELVERSION	Makefile	/^KERNELVERSION	:= $(shell uname -r)$/;"	m
LITTLEENDIAN	eeprom/decode-dimms	/^use constant LITTLEENDIAN	=> "little-endian";$/;"	c
MAXPATH	py-smbus/smbusmodule.c	98;"	d	file:
MAX_BLK_SIZE	eepromer/eepromer.c	12;"	d	file:
MAX_BYTES	eepromer/eeprom.c	26;"	d	file:
MISSING_FUNC_FMT	tools/i2cbusses.h	42;"	d
MODE_AUTO	tools/i2cdetect.c	33;"	d	file:
MODE_FUNC	tools/i2cdetect.c	36;"	d	file:
MODE_QUICK	tools/i2cdetect.c	34;"	d	file:
MODE_READ	tools/i2cdetect.c	35;"	d	file:
ONLYROOT	eeprom/decode-vaio	/^use constant ONLYROOT	=> "Readable only by root";$/;"	c
OUTER_LOOP	stub/i2c-stub-from-dump	/^ OUTER_LOOP:$/;"	l
PHEADER	eepromer/eepromer.c	17;"	d	file:
POK	eepromer/eepromer.c	645;"	d	file:
PROCFS	eeprom/decode-edid	/^use constant PROCFS => 1;$/;"	c
PYTHON	py-smbus/Module.mk	/^PYTHON ?= python$/;"	m
PY_SMBUS_DIR	py-smbus/Module.mk	/^PY_SMBUS_DIR := py-smbus$/;"	m
PyMODINIT_FUNC	py-smbus/smbusmodule.c	684;"	d	file:
READ	eepromer/eepromer.c	14;"	d	file:
RM	Makefile	/^RM		:= rm -f$/;"	m
SMBus	py-smbus/smbusmodule.c	/^} SMBus;$/;"	t	typeref:struct:__anon1	file:
SMBus_SET_ADDR	py-smbus/smbusmodule.c	166;"	d	file:
SMBus_block_process_call	py-smbus/smbusmodule.c	/^SMBus_block_process_call(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_buf_to_list	py-smbus/smbusmodule.c	/^SMBus_buf_to_list(__u8 const *buf, int len)$/;"	f	file:
SMBus_close	py-smbus/smbusmodule.c	/^SMBus_close(SMBus *self)$/;"	f	file:
SMBus_dealloc	py-smbus/smbusmodule.c	/^SMBus_dealloc(SMBus *self)$/;"	f	file:
SMBus_get_pec	py-smbus/smbusmodule.c	/^SMBus_get_pec(SMBus *self, void *closure)$/;"	f	file:
SMBus_getset	py-smbus/smbusmodule.c	/^static PyGetSetDef SMBus_getset[] = {$/;"	v	file:
SMBus_init	py-smbus/smbusmodule.c	/^SMBus_init(SMBus *self, PyObject *args, PyObject *kwds)$/;"	f	file:
SMBus_list_to_data	py-smbus/smbusmodule.c	/^SMBus_list_to_data(PyObject *list, union i2c_smbus_data *data)$/;"	f	file:
SMBus_methods	py-smbus/smbusmodule.c	/^static PyMethodDef SMBus_methods[] = {$/;"	v	file:
SMBus_module_methods	py-smbus/smbusmodule.c	/^static PyMethodDef SMBus_module_methods[] = {$/;"	v	file:
SMBus_new	py-smbus/smbusmodule.c	/^SMBus_new(PyTypeObject *type, PyObject *args, PyObject *kwds)$/;"	f	file:
SMBus_open	py-smbus/smbusmodule.c	/^SMBus_open(SMBus *self, PyObject *args, PyObject *kwds)$/;"	f	file:
SMBus_process_call	py-smbus/smbusmodule.c	/^SMBus_process_call(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_read_block_data	py-smbus/smbusmodule.c	/^SMBus_read_block_data(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_read_byte	py-smbus/smbusmodule.c	/^SMBus_read_byte(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_read_byte_data	py-smbus/smbusmodule.c	/^SMBus_read_byte_data(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_read_i2c_block_data	py-smbus/smbusmodule.c	/^SMBus_read_i2c_block_data(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_read_word_data	py-smbus/smbusmodule.c	/^SMBus_read_word_data(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_set_addr	py-smbus/smbusmodule.c	/^SMBus_set_addr(SMBus *self, int addr)$/;"	f	file:
SMBus_set_pec	py-smbus/smbusmodule.c	/^SMBus_set_pec(SMBus *self, PyObject *val, void *closure)$/;"	f	file:
SMBus_type	py-smbus/smbusmodule.c	/^static PyTypeObject SMBus_type = {$/;"	v	file:
SMBus_write_block_data	py-smbus/smbusmodule.c	/^SMBus_write_block_data(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_write_byte	py-smbus/smbusmodule.c	/^SMBus_write_byte(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_write_byte_data	py-smbus/smbusmodule.c	/^SMBus_write_byte_data(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_write_i2c_block_data	py-smbus/smbusmodule.c	/^SMBus_write_i2c_block_data(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_write_quick	py-smbus/smbusmodule.c	/^SMBus_write_quick(SMBus *self, PyObject *args)$/;"	f	file:
SMBus_write_word_data	py-smbus/smbusmodule.c	/^SMBus_write_word_data(SMBus *self, PyObject *args)$/;"	f	file:
SRCDIRS	Makefile	/^SRCDIRS	:= include eeprom stub tools $(EXTRA)$/;"	m
START_ADDR	eepromer/eepromer.c	20;"	d	file:
STUB_DIR	stub/Module.mk	/^STUB_DIR	:= stub$/;"	m
SYSFS	eeprom/decode-edid	/^use constant SYSFS  => 2;$/;"	c
TOOLS_CFLAGS	tools/Module.mk	/^TOOLS_CFLAGS	:= -Wstrict-prototypes -Wshadow -Wpointer-arith -Wcast-qual \\$/;"	m
TOOLS_DIR	tools/Module.mk	/^TOOLS_DIR	:= tools$/;"	m
TOOLS_TARGETS	tools/Module.mk	/^TOOLS_TARGETS	:= i2cdetect i2cdump i2cset i2cget$/;"	m
VER	eepromer/eepromer.c	18;"	d	file:
VERSION	eeprom/decode-vaio	/^use constant VERSION	=> "1.6";$/;"	c
VERSION	eepromer/eeprog.c	27;"	d	file:
VERSION	version.h	1;"	d
WARNINC	eepromer/eepromer.c	28;"	d	file:
WRITE	eepromer/eepromer.c	15;"	d	file:
_24CXX_H_	eepromer/24cXX.h	17;"	d
_BSD_SOURCE	tools/i2cbusses.c	26;"	d	file:
_I2CBUSSES_H	tools/i2cbusses.h	23;"	d
_LINUX_I2C_DEV_H	include/linux/i2c-dev.h	24;"	d
_UTIL_H	tools/util.h	22;"	d
adap_type	tools/i2cbusses.c	/^struct adap_type {$/;"	s	file:
adap_types	tools/i2cbusses.c	/^static struct adap_type adap_types[5] = {$/;"	v	typeref:struct:adap_type	file:
add_standard_timing	eeprom/ddcmon	/^sub add_standard_timing$/;"	s
add_timing	eeprom/ddcmon	/^sub add_timing$/;"	s
addr	eepromer/24cXX.h	/^	int addr;	\/\/ i2c address$/;"	m	struct:eeprom
addr	include/linux/i2c-dev.h	/^	__u16 addr;	\/* slave address			*\/$/;"	m	struct:i2c_msg
addr	py-smbus/smbusmodule.c	/^	int addr;	\/* current client SMBus address *\/$/;"	m	struct:__anon1	file:
adt	tools/i2cbusses.c	/^enum adt { adt_dummy, adt_isa, adt_i2c, adt_smbus, adt_unknown };$/;"	g	file:
adt_dummy	tools/i2cbusses.c	/^enum adt { adt_dummy, adt_isa, adt_i2c, adt_smbus, adt_unknown };$/;"	e	enum:adt	file:
adt_i2c	tools/i2cbusses.c	/^enum adt { adt_dummy, adt_isa, adt_i2c, adt_smbus, adt_unknown };$/;"	e	enum:adt	file:
adt_isa	tools/i2cbusses.c	/^enum adt { adt_dummy, adt_isa, adt_i2c, adt_smbus, adt_unknown };$/;"	e	enum:adt	file:
adt_smbus	tools/i2cbusses.c	/^enum adt { adt_dummy, adt_isa, adt_i2c, adt_smbus, adt_unknown };$/;"	e	enum:adt	file:
adt_unknown	tools/i2cbusses.c	/^enum adt { adt_dummy, adt_isa, adt_i2c, adt_smbus, adt_unknown };$/;"	e	enum:adt	file:
algo	tools/i2cbusses.c	/^	const char* algo;$/;"	m	struct:adap_type	file:
algo	tools/i2cbusses.h	/^	const char *algo;$/;"	m	struct:i2c_adap
all_func	tools/i2cdetect.c	/^static const struct func all_func[] = {$/;"	v	typeref:struct:func	file:
author	py-smbus/setup.py	/^	author="Mark M. Hoffman",$/;"	v
author_email	py-smbus/setup.py	/^	author_email="mhoffman@lightlink.com",$/;"	v
bar	eepromer/eepromer.c	/^void bar(void){$/;"	f
bindir	Makefile	/^bindir	= $(prefix)\/bin$/;"	m
block	include/linux/i2c-dev.h	/^	__u8 block[I2C_SMBUS_BLOCK_MAX + 2]; \/* block[0] is used for length *\/$/;"	m	union:i2c_smbus_data
block_read	eepromer/eepromer.c	/^int block_read(int file,int dev_addr,int eeprom_addr,unsigned char *buf){$/;"	f
block_write	eepromer/eepromer.c	/^int block_write(int file,int dev_addr,int eeprom_addr,unsigned char *buf,int lenght){$/;"	f
buf	include/linux/i2c-dev.h	/^	char *buf;		\/* pointer to msg data			*\/$/;"	m	struct:i2c_msg
bus_detect	eeprom/decode-edid	/^sub bus_detect$/;"	s
byte	include/linux/i2c-dev.h	/^	__u8 byte;$/;"	m	union:i2c_smbus_data
cas_latencies	eeprom/decode-dimms	/^sub cas_latencies(@)$/;"	s
check_chip_addr	stub/i2c-stub-from-dump	/^sub check_chip_addr {$/;"	s
check_crc	eeprom/decode-dimms	/^sub check_crc($)$/;"	s
check_funcs	tools/i2cdump.c	/^static int check_funcs(int file, int size, int pec)$/;"	f	file:
check_funcs	tools/i2cget.c	/^static int check_funcs(int file, int size, int daddress, int pec)$/;"	f	file:
check_funcs	tools/i2cset.c	/^static int check_funcs(int file, int size, int pec)$/;"	f	file:
checksum	eeprom/decode-dimms	/^sub checksum($)$/;"	s
command	include/linux/i2c-dev.h	/^	__u8 command;$/;"	m	struct:i2c_smbus_ioctl_data
confirm	tools/i2cget.c	/^static int confirm(const char *filename, int address, int size, int daddress,$/;"	f	file:
confirm	tools/i2cset.c	/^static int confirm(const char *filename, int address, int size, int daddress,$/;"	f	file:
confirm_action	eepromer/eeprog.c	/^int confirm_action()$/;"	f
content_read	eepromer/eepromer.c	/^int content_read(int file, int addr){$/;"	f
content_write	eepromer/eepromer.c	/^int content_write(int file, int addr){$/;"	f
data	eepromer/eepromer.c	/^			char    data[56];$/;"	m	struct:mini_inode	file:
data	include/linux/i2c-dev.h	/^	union i2c_smbus_data *data;$/;"	m	struct:i2c_smbus_ioctl_data	typeref:union:i2c_smbus_ioctl_data::i2c_smbus_data
data_len	eepromer/eepromer.c	/^			int		data_len;$/;"	m	struct:mini_inode	file:
ddr2_module_types	eeprom/decode-dimms	/^sub ddr2_module_types($)$/;"	s
ddr2_refresh_rate	eeprom/decode-dimms	/^sub ddr2_refresh_rate($)$/;"	s
ddr2_sdram_atime	eeprom/decode-dimms	/^sub ddr2_sdram_atime($)$/;"	s
ddr2_sdram_ctime	eeprom/decode-dimms	/^sub ddr2_sdram_ctime($)$/;"	s
ddr2_sdram_rtime	eeprom/decode-dimms	/^sub ddr2_sdram_rtime($$$)$/;"	s
decode_ddr2_sdram	eeprom/decode-dimms	/^sub decode_ddr2_sdram($)$/;"	s
decode_ddr3_mfg_data	eeprom/decode-dimms	/^sub decode_ddr3_mfg_data($)$/;"	s
decode_ddr3_sdram	eeprom/decode-dimms	/^sub decode_ddr3_sdram($)$/;"	s
decode_ddr_sdram	eeprom/decode-dimms	/^sub decode_ddr_sdram($)$/;"	s
decode_direct_rambus	eeprom/decode-dimms	/^sub decode_direct_rambus($)$/;"	s
decode_hexa	eeprom/decode-vaio	/^sub decode_hexa$/;"	s
decode_intel_spec_freq	eeprom/decode-dimms	/^sub decode_intel_spec_freq($)$/;"	s
decode_manufacturing_information	eeprom/decode-dimms	/^sub decode_manufacturing_information($)$/;"	s
decode_rambus	eeprom/decode-dimms	/^sub decode_rambus($)$/;"	s
decode_sdr_sdram	eeprom/decode-dimms	/^sub decode_sdr_sdram($)$/;"	s
decode_string	eeprom/decode-vaio	/^sub decode_string$/;"	s
decode_uuid	eeprom/decode-vaio	/^sub decode_uuid$/;"	s
description	py-smbus/setup.py	/^	description="Python bindings for Linux SMBus access through i2c-dev",$/;"	v
dev	eepromer/24cXX.h	/^	char *dev; 	\/\/ device file i.e. \/dev\/i2c-N$/;"	m	struct:eeprom
die_if	eepromer/eeprog.c	79;"	d	file:
do_die_if	eepromer/eeprog.c	/^void do_die_if(int b, char* msg, int line)$/;"	f
do_usage_if	eepromer/eeprog.c	/^void do_usage_if(int b, int line)$/;"	f
edid_decode	eeprom/decode-edid	/^sub edid_decode$/;"	s
edid_valid_procfs	eeprom/decode-edid	/^sub edid_valid_procfs$/;"	s
edid_valid_sysfs	eeprom/decode-edid	/^sub edid_valid_sysfs$/;"	s
eeprom	eepromer/24cXX.h	/^struct eeprom$/;"	s
eeprom_close	eepromer/24cXX.c	/^int eeprom_close(struct eeprom *e)$/;"	f
eeprom_open	eepromer/24cXX.c	/^int eeprom_open(char *dev_fqn, int addr, int type, struct eeprom* e)$/;"	f
eeprom_read	eepromer/eeprom.c	/^int eeprom_read(int fd,$/;"	f
eeprom_read_byte	eepromer/24cXX.c	/^int eeprom_read_byte(struct eeprom* e, __u16 mem_addr)$/;"	f
eeprom_read_current_byte	eepromer/24cXX.c	/^int eeprom_read_current_byte(struct eeprom* e)$/;"	f
eeprom_write	eepromer/eeprom.c	/^int eeprom_write(int fd,$/;"	f
eeprom_write_byte	eepromer/24cXX.c	/^int eeprom_write_byte(struct eeprom *e, __u16 mem_addr, __u8 data)$/;"	f
erase	eepromer/eepromer.c	/^void erase(int file, int addr,int eeprom_size){$/;"	f
ext_modules	py-smbus/setup.py	/^	ext_modules=[Extension("smbus", ["smbusmodule.c"])])$/;"	v
extract_byte	eeprom/ddcmon	/^sub extract_byte$/;"	s
extract_color_mode	eeprom/ddcmon	/^sub extract_color_mode$/;"	s
extract_detailed_timings	eeprom/ddcmon	/^sub extract_detailed_timings$/;"	s
extract_display_input	eeprom/ddcmon	/^sub extract_display_input$/;"	s
extract_dpms	eeprom/ddcmon	/^sub extract_dpms$/;"	s
extract_dword	eeprom/ddcmon	/^sub extract_dword$/;"	s
extract_manufacturer	eeprom/ddcmon	/^sub extract_manufacturer$/;"	s
extract_sesquiword	eeprom/ddcmon	/^sub extract_sesquiword$/;"	s
extract_string	eeprom/ddcmon	/^sub extract_string$/;"	s
extract_word	eeprom/ddcmon	/^sub extract_word$/;"	s
fd	eepromer/24cXX.h	/^	int fd;		\/\/ file descriptor$/;"	m	struct:eeprom
fd	py-smbus/smbusmodule.c	/^	int fd;		\/* open file descriptor: \/dev\/i2c-?, or -1 *\/$/;"	m	struct:__anon1	file:
flags	include/linux/i2c-dev.h	/^	unsigned short flags;$/;"	m	struct:i2c_msg
free_adapters	tools/i2cbusses.c	/^void free_adapters(struct i2c_adap *adapters)$/;"	f
func	tools/i2cdetect.c	/^struct func$/;"	s	file:
funcs	tools/i2cbusses.c	/^	const char *funcs;$/;"	m	struct:adap_type	file:
funcs	tools/i2cbusses.h	/^	const char *funcs;$/;"	m	struct:i2c_adap
g_quiet	eepromer/eeprog.c	/^int g_quiet;$/;"	v
gather_i2c_busses	tools/i2cbusses.c	/^struct i2c_adap *gather_i2c_busses(void)$/;"	f
get_dimm_list	eeprom/decode-dimms	/^sub get_dimm_list$/;"	s
get_edid_procfs	eeprom/ddcmon	/^sub get_edid_procfs$/;"	s
get_edid_sysfs	eeprom/ddcmon	/^sub get_edid_sysfs$/;"	s
get_i2c_stub_bus_number	stub/i2c-stub-from-dump	/^sub get_i2c_stub_bus_number$/;"	s
good_signature	eeprom/ddcmon	/^sub good_signature$/;"	s
help	eepromer/eepromer.c	/^void help(void)                                                                 $/;"	f
help	tools/i2cdetect.c	/^static void help(void)$/;"	f	file:
help	tools/i2cdump.c	/^static void help(void)$/;"	f	file:
help	tools/i2cget.c	/^static void help(void)$/;"	f	file:
help	tools/i2cset.c	/^static void help(void)$/;"	f	file:
html_encode	eeprom/decode-dimms	/^sub html_encode($)$/;"	s
i2c_adap	tools/i2cbusses.h	/^struct i2c_adap {$/;"	s
i2c_get_funcs	tools/i2cbusses.c	/^static enum adt i2c_get_funcs(int i2cbus)$/;"	f	file:
i2c_msg	include/linux/i2c-dev.h	/^struct i2c_msg {$/;"	s
i2c_rdwr_ioctl_data	include/linux/i2c-dev.h	/^struct i2c_rdwr_ioctl_data {$/;"	s
i2c_smbus_access	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_access(int file, char read_write, __u8 command,$/;"	f
i2c_smbus_block_process_call	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_block_process_call(int file, __u8 command,$/;"	f
i2c_smbus_data	include/linux/i2c-dev.h	/^union i2c_smbus_data {$/;"	u
i2c_smbus_ioctl_data	include/linux/i2c-dev.h	/^struct i2c_smbus_ioctl_data {$/;"	s
i2c_smbus_process_call	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_process_call(int file, __u8 command, __u16 value)$/;"	f
i2c_smbus_read_block_data	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_read_block_data(int file, __u8 command,$/;"	f
i2c_smbus_read_byte	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_read_byte(int file)$/;"	f
i2c_smbus_read_byte_data	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_read_byte_data(int file, __u8 command)$/;"	f
i2c_smbus_read_i2c_block_data	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_read_i2c_block_data(int file, __u8 command,$/;"	f
i2c_smbus_read_word_data	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_read_word_data(int file, __u8 command)$/;"	f
i2c_smbus_write_block_data	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_write_block_data(int file, __u8 command,$/;"	f
i2c_smbus_write_byte	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_write_byte(int file, __u8 value)$/;"	f
i2c_smbus_write_byte_data	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_write_byte_data(int file, __u8 command,$/;"	f
i2c_smbus_write_i2c_block_data	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_write_i2c_block_data(int file, __u8 command,$/;"	f
i2c_smbus_write_quick	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_write_quick(int file, __u8 value)$/;"	f
i2c_smbus_write_word_data	include/linux/i2c-dev.h	/^static inline __s32 i2c_smbus_write_word_data(int file, __u8 command,$/;"	f
i2c_write_1b	eepromer/24cXX.c	/^static int i2c_write_1b(struct eeprom *e, __u8 buf)$/;"	f	file:
i2c_write_2b	eepromer/24cXX.c	/^static int i2c_write_2b(struct eeprom *e, __u8 buf[2])$/;"	f	file:
i2c_write_3b	eepromer/24cXX.c	/^static int i2c_write_3b(struct eeprom *e, __u8 buf[3])$/;"	f	file:
incdir	Makefile	/^incdir	= $(prefix)\/include$/;"	m
init	eepromer/eepromer.c	/^int init(char *device,int addr) { $/;"	f
initialize_kernel_version	stub/i2c-stub-from-dump	/^sub initialize_kernel_version$/;"	s
initsmbus	py-smbus/smbusmodule.c	/^initsmbus(void) $/;"	f
inode_read	eepromer/eepromer.c	/^int inode_read(int file,int dev_addr,void *p_inode ){$/;"	f
inode_write	eepromer/eepromer.c	/^int  inode_write(int file,int dev_addr,int lenght){$/;"	f
kernel_version_at_least	stub/i2c-stub-from-dump	/^sub kernel_version_at_least$/;"	s
len	include/linux/i2c-dev.h	/^	short len;		\/* msg length				*\/$/;"	m	struct:i2c_msg
license	py-smbus/setup.py	/^	license="GPLv2",$/;"	v
load_kernel_drivers	stub/i2c-stub-from-dump	/^sub load_kernel_drivers$/;"	s
lookup_i2c_bus	tools/i2cbusses.c	/^int lookup_i2c_bus(const char *i2cbus_arg)$/;"	f
lookup_i2c_bus_by_name	tools/i2cbusses.c	/^static int lookup_i2c_bus_by_name(const char *bus_name)$/;"	f	file:
m_ind	eepromer/eepromer.c	/^	} m_ind,*p_ind;$/;"	v	typeref:struct:mini_inode	file:
made_address	eepromer/eepromer.c	/^void made_address(int addr,unsigned char *buf){$/;"	f
main	eepromer/eeprog.c	/^int main(int argc, char** argv)$/;"	f
main	eepromer/eeprom.c	/^int main(int argc, char **argv){$/;"	f
main	eepromer/eepromer.c	/^int main(int argc, char *argv[]){$/;"	f
main	tools/i2cdetect.c	/^int main(int argc, char *argv[])$/;"	f
main	tools/i2cdump.c	/^int main(int argc, char *argv[])$/;"	f
main	tools/i2cget.c	/^int main(int argc, char *argv[])$/;"	f
main	tools/i2cset.c	/^int main(int argc, char *argv[])$/;"	f
maintainer	py-smbus/setup.py	/^	maintainer="Mark M. Hoffman",$/;"	v
maintainer_email	py-smbus/setup.py	/^	maintainer_email="linux-i2c@vger.kernel.org",$/;"	v
man8dir	Makefile	/^man8dir	= $(mandir)\/man8$/;"	m
mandir	Makefile	/^mandir	= $(prefix)\/share\/man$/;"	m
manufacture_date	eeprom/decode-dimms	/^sub manufacture_date($$)$/;"	s
manufacturer	eeprom/decode-dimms	/^sub manufacturer(@)$/;"	s
manufacturer_data	eeprom/decode-dimms	/^sub manufacturer_data(@)$/;"	s
manufacturer_ddr3	eeprom/decode-dimms	/^sub manufacturer_ddr3($$)$/;"	s
mini_inode	eepromer/eepromer.c	/^static	struct  mini_inode {$/;"	s	file:
more_adapters	tools/i2cbusses.c	/^static struct i2c_adap *more_adapters(struct i2c_adap *adapters, int n)$/;"	f	file:
msgs	include/linux/i2c-dev.h	/^	struct i2c_msg *msgs;	\/* pointers to i2c_msgs *\/$/;"	m	struct:i2c_rdwr_ioctl_data	typeref:struct:i2c_rdwr_ioctl_data::i2c_msg
name	tools/i2cbusses.h	/^	char *name;$/;"	m	struct:i2c_adap
name	tools/i2cdetect.c	/^	const char* name;$/;"	m	struct:func	file:
nmsgs	include/linux/i2c-dev.h	/^	__u32 nmsgs;			\/* number of i2c_msgs *\/$/;"	m	struct:i2c_rdwr_ioctl_data
nr	tools/i2cbusses.h	/^	int nr;$/;"	m	struct:i2c_adap
open_i2c_dev	tools/i2cbusses.c	/^int open_i2c_dev(int i2cbus, char *filename, size_t size, int quiet)$/;"	f
p_ind	eepromer/eepromer.c	/^	} m_ind,*p_ind;$/;"	v	typeref:struct:mini_inode	file:
parity	eeprom/decode-dimms	/^sub parity($)$/;"	s
parse_arg	eepromer/eeprog.c	/^void parse_arg(char *arg, int* paddr, int *psize)$/;"	f
parse_i2c_address	tools/i2cbusses.c	/^int parse_i2c_address(const char *address_arg)$/;"	f
part_number	eeprom/decode-dimms	/^sub part_number(@)$/;"	s
pec	py-smbus/smbusmodule.c	/^	int pec;	\/* !0 => Packet Error Codes enabled *\/$/;"	m	struct:__anon1	file:
pheader	eepromer/eepromer.c	/^void pheader(int file,int dev_addr){$/;"	f
prefix	Makefile	/^prefix	= \/usr\/local$/;"	m
print_edid	eeprom/ddcmon	/^sub print_edid$/;"	s
print_functionality	tools/i2cdetect.c	/^static void print_functionality(unsigned long funcs)$/;"	f	file:
print_i2c_busses	tools/i2cdetect.c	/^static void print_i2c_busses(void)$/;"	f	file:
print_info	eepromer/eeprog.c	89;"	d	file:
print_item	eeprom/decode-vaio	/^sub print_item$/;"	s
print_line	eeprom/ddcmon	/^sub print_line$/;"	s
print_timings	eeprom/ddcmon	/^sub print_timings$/;"	s
printc	eeprom/decode-dimms	/^sub printc($) # print comment$/;"	s
printh	eeprom/decode-dimms	/^sub printh($$) # print header w\/ given text$/;"	s
printl	eeprom/decode-dimms	/^sub printl($$) # print a line w\/ label and value$/;"	s
printl2	eeprom/decode-dimms	/^sub printl2($$) # print a line w\/ label and value (outside a table)$/;"	s
printl_cond	eeprom/decode-dimms	/^sub printl_cond($$$) # same as printl but conditional$/;"	s
printl_mfg_assembly_serial	eeprom/decode-dimms	/^sub printl_mfg_assembly_serial(@)$/;"	s
printl_mfg_location_code	eeprom/decode-dimms	/^sub printl_mfg_location_code($)$/;"	s
prints	eeprom/decode-dimms	/^sub prints($) # print separator w\/ given text$/;"	s
process_dump	stub/i2c-stub-from-dump	/^sub process_dump$/;"	s
rawread	eeprom/ddcmon	/^sub rawread$/;"	s
rawread	eeprom/decode-edid	/^sub rawread$/;"	s
read_eeprom_bytes	eeprom/decode-vaio	/^sub read_eeprom_bytes$/;"	s
read_from_eeprom	eepromer/eeprog.c	/^int read_from_eeprom(struct eeprom *e, int addr, int size, int hex)$/;"	f
read_hexdump	eeprom/decode-dimms	/^sub read_hexdump($)$/;"	s
read_write	include/linux/i2c-dev.h	/^	__u8 read_write;$/;"	m	struct:i2c_smbus_ioctl_data
readspd	eeprom/decode-dimms	/^sub readspd($$$)$/;"	s
real_printl	eeprom/decode-dimms	/^sub real_printl($$) # print a line w\/ label and values$/;"	s
real_prints	eeprom/decode-dimms	/^sub real_prints($) # print separator w\/ given text$/;"	s
rtrim	tools/i2cbusses.c	/^static int rtrim(char *s)$/;"	f	file:
same_values	eeprom/decode-dimms	/^sub same_values(@)$/;"	s
sbindir	Makefile	/^sbindir	= $(prefix)\/sbin$/;"	m
scan_i2c_bus	tools/i2cdetect.c	/^static int scan_i2c_bus(int file, int mode, int first, int last)$/;"	f	file:
sdram_module_configuration_type	eeprom/decode-dimms	/^sub sdram_module_configuration_type($)$/;"	s
sdram_voltage_interface_level	eeprom/decode-dimms	/^sub sdram_voltage_interface_level($)$/;"	s
set_slave_addr	tools/i2cbusses.c	/^int set_slave_addr(int file, int address, int force)$/;"	f
setup	py-smbus/setup.py	/^from distutils.core import setup, Extension$/;"	i
size	include/linux/i2c-dev.h	/^	__u32 size;$/;"	m	struct:i2c_smbus_ioctl_data
sort_timings	eeprom/ddcmon	/^sub sort_timings$/;"	s
spd_sizes	eeprom/decode-dimms	/^sub spd_sizes($)$/;"	s
spd_written	eeprom/decode-dimms	/^sub spd_written(@)$/;"	s
stav	eepromer/eepromer.c	/^static int stav=0;$/;"	v	file:
sysfs_device_attribute	eeprom/decode-dimms	/^sub sysfs_device_attribute$/;"	s
timestamp	eepromer/eepromer.c	/^			time_t  timestamp;$/;"	m	struct:mini_inode	file:
tns	eeprom/decode-dimms	/^sub tns($) # print a time in ns$/;"	s
tns3	eeprom/decode-dimms	/^sub tns3($) # print a time in ns, with 3 decimal digits$/;"	s
type	eepromer/24cXX.h	/^	int type; 	\/\/ eeprom type$/;"	m	struct:eeprom
url	py-smbus/setup.py	/^	url="http:\/\/lm-sensors.org\/",$/;"	v
usage_if	eepromer/eeprog.c	34;"	d	file:
user_ack	tools/util.c	/^int user_ack(int def)$/;"	f
vaio_decode	eeprom/decode-vaio	/^sub vaio_decode$/;"	s
value	tools/i2cdetect.c	/^	long value;$/;"	m	struct:func	file:
value_or_undefined	eeprom/decode-dimms	/^sub value_or_undefined$/;"	s
verify_checksum	eeprom/ddcmon	/^sub verify_checksum$/;"	s
version	py-smbus/setup.py	/^	version="1.1",$/;"	v
warn	eepromer/eepromer.c	/^void warn(void)$/;"	f
word	include/linux/i2c-dev.h	/^	__u16 word;$/;"	m	union:i2c_smbus_data
write_to_eeprom	eepromer/eeprog.c	/^int write_to_eeprom(struct eeprom *e, int addr)$/;"	f
