# Makefile.in generated by automake 1.9.6 from Makefile.am.
# lib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# ./lib/Makefile.inc

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/curl
pkglibdir = $(libdir)/curl
pkgincludedir = $(includedir)/curl
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-pc-none
host_triplet = mipsel-unknown-linux-uclibc
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.inc $(srcdir)/curl_config.h.in
subdir = lib
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
	$(top_srcdir)/m4/curl-confopts.m4 \
	$(top_srcdir)/m4/curl-functions.m4 \
	$(top_srcdir)/m4/curl-override.m4 \
	$(top_srcdir)/m4/curl-reentrant.m4 \
	$(top_srcdir)/m4/curl-system.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = curl_config.h $(top_builddir)/src/curl_config.h \
	$(top_builddir)/include/curl/curlbuild.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libcurl_la_LIBADD =
am__objects_1 = file.lo timeval.lo base64.lo hostip.lo progress.lo \
	formdata.lo cookie.lo http.lo sendf.lo ftp.lo url.lo dict.lo \
	if2ip.lo speedcheck.lo ldap.lo ssluse.lo version.lo getenv.lo \
	escape.lo mprintf.lo telnet.lo netrc.lo getinfo.lo transfer.lo \
	strequal.lo easy.lo security.lo krb4.lo krb5.lo memdebug.lo \
	http_chunks.lo strtok.lo connect.lo llist.lo hash.lo multi.lo \
	content_encoding.lo share.lo http_digest.lo md5.lo \
	curl_rand.lo http_negotiate.lo http_ntlm.lo inet_pton.lo \
	strtoofft.lo strerror.lo hostares.lo hostasyn.lo hostip4.lo \
	hostip6.lo hostsyn.lo hostthre.lo inet_ntop.lo parsedate.lo \
	select.lo gtls.lo sslgen.lo tftp.lo splay.lo strdup.lo \
	socks.lo ssh.lo nss.lo qssl.lo rawstr.lo curl_addrinfo.lo \
	socks_gssapi.lo socks_sspi.lo curl_sspi.lo slist.lo \
	nonblock.lo curl_memrchr.lo
am__objects_2 =
am_libcurl_la_OBJECTS = $(am__objects_1) $(am__objects_2)
libcurl_la_OBJECTS = $(am_libcurl_la_OBJECTS)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libcurl_la_SOURCES)
DIST_SOURCES = $(libcurl_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} "$(ROOTDIR)/user/curl/missing" --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} "$(ROOTDIR)/user/curl/missing" --run tar
AR := $(AR)
AS := $(AS) 
AUTOCONF = ${SHELL} "$(ROOTDIR)/user/curl/missing" --run autoconf
AUTOHEADER = ${SHELL} "$(ROOTDIR)/user/curl/missing" --run autoheader
AUTOMAKE = ${SHELL} "$(ROOTDIR)/user/curl/missing" --run automake-1.9
AWK = gawk
CC := $(CC) 
CCDEPMODE = depmode=gcc3
CFLAGS := $(CFLAGS) -O2 -fomit-frame-pointer -pipe -Dlinux -D__linux__ -Dunix -DEMBED -isystem $(ROOTDIR)/lib/include -isystem $(ROOTDIR)/uClibc++/include -isystem $(ROOTDIR) -isystem $(ROOTDIR)/linux-2.6.21.x/drivers/char -g0 -Wno-system-headers
CPP := $(CPP)
CPPFLAGS := $(CPPFLAGS)
CROSSCOMPILING_FALSE = #
CROSSCOMPILING_TRUE = 
CURLDEBUG_FALSE = 
CURLDEBUG_TRUE = #
CURL_CA_BUNDLE = "/etc/pki/tls/certs/ca-bundle.crt"
CURL_DISABLE_DICT = 
CURL_DISABLE_FILE = 
CURL_DISABLE_FTP = 
CURL_DISABLE_HTTP = 
CURL_DISABLE_LDAP = 1
CURL_DISABLE_LDAPS = 1
CURL_DISABLE_PROXY = 
CURL_DISABLE_TELNET = 
CURL_DISABLE_TFTP = 
CURL_LIBS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_ARES = 
HAVE_LIBZ = 
HAVE_LIBZ_FALSE = 
HAVE_LIBZ_TRUE = #
HAVE_PK11_CREATEGENERICOBJECT = 
IDN_ENABLED = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
IPV6_ENABLED = 
KRB4_ENABLED = 
LD := $(LD)
LDFLAGS := -Wl,--fatal-warnings -L$(ROOTDIR)/lib/lib -L$(ROOTDIR)/uClibc++/src -Wl,--fatal-warnings -L$(ROOTDIR)/lib/lib -L$(ROOTDIR)/uClibc++/src
LIBCURL_LIBS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} "$(ROOTDIR)/user/curl/missing" --run makeinfo
MANOPT = -man
MIMPURE_FALSE = 
MIMPURE_TRUE = #
NM := $(NM)
NMEDIT = 
NO_UNDEFINED_FALSE = 
NO_UNDEFINED_TRUE = #
NROFF = /usr/bin/gnroff
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = curl
PACKAGE_BUGREPORT = a suitable curl mailing list => http://curl.haxx.se/mail/
PACKAGE_NAME = curl
PACKAGE_STRING = curl -
PACKAGE_TARNAME = curl
PACKAGE_URL = 
PACKAGE_VERSION = -
PATH = /usr/kerberos/sbin:/usr/lib/qt-3.3/bin:/usr/kerberos/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/root/bin:$(ROOTDIR)/tools
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKGADD_NAME = cURL - a client that groks URLs
PKGADD_PKG = HAXXcurl
PKGADD_VENDOR = curl.haxx.se
PKGCONFIG = 
RANDOM_FILE = 
RANLIB := $(RANLIB)
REQUIRE_LIB_DEPS = yes
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SONAME_BUMP_FALSE = 
SONAME_BUMP_TRUE = #
SSL_ENABLED = 
STATICLIB_FALSE = 
STATICLIB_TRUE = #
STRIP := $(STRIP)
SUPPORT_FEATURES = 
SUPPORT_PROTOCOLS =  HTTP FTP FILE TELNET DICT TFTP
TEST_SERVER_LIBS = 
USE_EMBEDDED_ARES_FALSE = 
USE_EMBEDDED_ARES_TRUE = #
USE_GNUTLS = 
USE_LIBSSH2 = 
USE_MANUAL_FALSE = #
USE_MANUAL_TRUE = 
USE_NSS = 
USE_SSLEAY = 
USE_WINDOWS_SSPI = 
VERSION = 7.19.7
VERSIONNUM = 071307
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-pc-none
build_alias = i386
build_cpu = i386
build_os = none
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = mipsel-unknown-linux-uclibc
host_alias = mipsel-linux-uclibc
host_cpu = mipsel
host_os = linux-uclibc
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(ROOTDIR)/user/curl/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libext = a
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs = 
sysconfdir = ${prefix}/etc
target_alias = 

#***************************************************************************
#                                  _   _ ____  _
#  Project                     ___| | | |  _ \| |
#                             / __| | | | |_) | |
#                            | (__| |_| |  _ <| |___
#                             \___|\___/|_| \_\_____|
#
# Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
#
# This software is licensed as described in the file COPYING, which
# you should have received as part of this distribution. The terms
# are also available at http://curl.haxx.se/docs/copyright.html.
#
# You may opt to use, copy, modify, merge, publish, distribute and/or sell
# copies of the Software, and permit persons to whom the Software is
# furnished to do so, under the terms of the COPYING file.
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
# KIND, either express or implied.
#
# $Id: //WIFI_SOC/MP/SDK_5_0_0_0/RT288x_SDK/source/user/curl/lib/Makefile#1 $
###########################################################################
AUTOMAKE_OPTIONS = foreign nostdinc
DSP = vc6libcurl.dsp
VCPROJ = libcurl.vcproj
DOCS = README.encoding README.memoryleak README.ares README.curlx	\
 README.hostip README.multi_socket README.httpauth README.pipelining    \
 README.curl_off_t README.cmake

CMAKE_DIST = CMakeLists.txt curl_config.h.cmake
EXTRA_DIST = Makefile.b32 Makefile.m32 Makefile.vc6 Makefile.riscos $(DSP) \
 vc6libcurl.dsw config-win32.h config-win32ce.h config-riscos.h            \
 config-mac.h curl_config.h.in makefile.dj config.dos libcurl.plist        \
 libcurl.rc config-amigaos.h amigaos.c amigaos.h makefile.amiga		   \
 Makefile.netware nwlib.c nwos.c libcurl.imp msvcproj.head msvcproj.foot   \
 config-win32ce.h config-os400.h setup-os400.h config-symbian.h		   \
 Makefile.Watcom config-tpf.h $(DOCS) $(VCPROJ) mk-ca-bundle.pl		   \
 firefox-db2pem.sh $(CMAKE_DIST) config-vxworks.h Makefile.vxworks

CLEANFILES = $(DSP) $(VCPROJ)
lib_LTLIBRARIES = libcurl.la
INCLUDES = -I$(top_builddir)/include \
           -I$(top_srcdir)/include   \
           -I$(top_builddir)/lib     \
           -I$(top_srcdir)/lib


# Specify our include paths here, and do it relative to $(top_srcdir) and
# $(top_builddir), to ensure that these paths which belong to the library
# being currently built and tested are searched before the library which
# might possibly already be installed in the system.
#
# $(top_builddir)/include is for libcurl's generated curl/curlbuild.h file
# $(top_srcdir)/include is for libcurl's external include files
# $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file
# $(top_srcdir)/lib is for libcurl's lib/setup.h and other "private" files
# $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file
# $(top_srcdir)/ares is for in-tree c-ares's external include files
#INCLUDES = -I$(top_builddir)/include \
#           -I$(top_srcdir)/include   \
#           -I$(top_builddir)/lib     \
#           -I$(top_srcdir)/lib       \
#           -I$(top_builddir)/ares    \
#           -I$(top_srcdir)/ares

VERSIONINFO = -version-info 5:1:1

#
# Bumping of SONAME conditionally may seem like a weird thing to do, and yeah
# it is. The problem is that we try to avoid the bump as hard as possible, but
# yet it is still necessary for a few rare situations. The configure script will
# attempt to figure out these situations, and it can be forced to consider this
# to be such a case! See README.curl_off_t for further details.
#
# This conditional soname bump SHOULD be removed at next "proper" bump.
#
#VERSIONINFO = -version-info 6:1:1

# This flag accepts an argument of the form current[:revision[:age]]. So,
# passing -version-info 3:12:1 sets current to 3, revision to 12, and age to
# 1.
#
# Here's the simplified rule guide on how to change -version-info:
# (current version is C:R:A)
# 
# 1. if there are only source changes, use C:R+1:A
# 2. if interfaces were added use C+1:0:A+1
# 3. if interfaces were removed, then use C+1:0:0
#
# For the full guide on libcurl ABI rules, see docs/libcurl/ABI

# The -no-undefined flag is CRUCIAL for this to build fine on Cygwin.
#UNDEF = -no-undefined

# This is for gcc on Solaris (8+ ?) to avoid "relocations remain against
# allocatable but non-writable sections" problems.
#MIMPURE = -mimpure-text
libcurl_la_LDFLAGS = $(UNDEF) $(VERSIONINFO) $(MIMPURE) $(LIBCURL_LIBS)
CSOURCES = file.c timeval.c base64.c hostip.c progress.c formdata.c	\
  cookie.c http.c sendf.c ftp.c url.c dict.c if2ip.c speedcheck.c	\
  ldap.c ssluse.c version.c getenv.c escape.c mprintf.c telnet.c	\
  netrc.c getinfo.c transfer.c strequal.c easy.c security.c krb4.c	\
  krb5.c memdebug.c http_chunks.c strtok.c connect.c llist.c hash.c	\
  multi.c content_encoding.c share.c http_digest.c md5.c curl_rand.c	\
  http_negotiate.c http_ntlm.c inet_pton.c strtoofft.c strerror.c	\
  hostares.c hostasyn.c hostip4.c hostip6.c hostsyn.c hostthre.c	\
  inet_ntop.c parsedate.c select.c gtls.c sslgen.c tftp.c splay.c	\
  strdup.c socks.c ssh.c nss.c qssl.c rawstr.c curl_addrinfo.c          \
  socks_gssapi.c socks_sspi.c curl_sspi.c slist.c nonblock.c		\
  curl_memrchr.c

HHEADERS = arpa_telnet.h netrc.h file.h timeval.h qssl.h hostip.h	\
  progress.h formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h	\
  if2ip.h speedcheck.h urldata.h curl_ldap.h ssluse.h escape.h telnet.h	\
  getinfo.h strequal.h krb4.h memdebug.h http_chunks.h curl_rand.h	\
  strtok.h connect.h llist.h hash.h content_encoding.h share.h		\
  curl_md5.h http_digest.h http_negotiate.h http_ntlm.h inet_pton.h	\
  strtoofft.h strerror.h inet_ntop.h curlx.h curl_memory.h setup.h	\
  transfer.h select.h easyif.h multiif.h parsedate.h sslgen.h gtls.h	\
  tftp.h sockaddr.h splay.h strdup.h setup_once.h socks.h ssh.h nssg.h	\
  curl_base64.h rawstr.h curl_addrinfo.h curl_sspi.h slist.h nonblock.h	\
  curl_memrchr.h


# Makefile.inc provides the CSOURCES and HHEADERS defines
libcurl_la_SOURCES = $(CSOURCES) $(HHEADERS)
WIN32SOURCES = $(CSOURCES)
WIN32HEADERS = $(HHEADERS) config-win32.h
DSPOUT = | awk '{printf("%s\r\n", $$0)}' >> $(DSP)
VCPROJOUT = | awk '{printf("%s\r\n", $$0)}' >> $(VCPROJ)
all: curl_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
distclean-hdr:
	-rm -f curl_config.h stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcurl.la: $(libcurl_la_OBJECTS) $(libcurl_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libcurl_la_LDFLAGS) $(libcurl_la_OBJECTS) $(libcurl_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

ifneq ($(wildcard ./$(DEPDIR)/base64.Plo),)
include ./$(DEPDIR)/base64.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/connect.Plo),)
include ./$(DEPDIR)/connect.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/content_encoding.Plo),)
include ./$(DEPDIR)/content_encoding.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/cookie.Plo),)
include ./$(DEPDIR)/cookie.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/curl_addrinfo.Plo),)
include ./$(DEPDIR)/curl_addrinfo.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/curl_memrchr.Plo),)
include ./$(DEPDIR)/curl_memrchr.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/curl_rand.Plo),)
include ./$(DEPDIR)/curl_rand.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/curl_sspi.Plo),)
include ./$(DEPDIR)/curl_sspi.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/dict.Plo),)
include ./$(DEPDIR)/dict.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/easy.Plo),)
include ./$(DEPDIR)/easy.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/escape.Plo),)
include ./$(DEPDIR)/escape.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/file.Plo),)
include ./$(DEPDIR)/file.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/formdata.Plo),)
include ./$(DEPDIR)/formdata.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/ftp.Plo),)
include ./$(DEPDIR)/ftp.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/getenv.Plo),)
include ./$(DEPDIR)/getenv.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/getinfo.Plo),)
include ./$(DEPDIR)/getinfo.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/gtls.Plo),)
include ./$(DEPDIR)/gtls.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/hash.Plo),)
include ./$(DEPDIR)/hash.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/hostares.Plo),)
include ./$(DEPDIR)/hostares.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/hostasyn.Plo),)
include ./$(DEPDIR)/hostasyn.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/hostip.Plo),)
include ./$(DEPDIR)/hostip.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/hostip4.Plo),)
include ./$(DEPDIR)/hostip4.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/hostip6.Plo),)
include ./$(DEPDIR)/hostip6.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/hostsyn.Plo),)
include ./$(DEPDIR)/hostsyn.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/hostthre.Plo),)
include ./$(DEPDIR)/hostthre.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/http.Plo),)
include ./$(DEPDIR)/http.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/http_chunks.Plo),)
include ./$(DEPDIR)/http_chunks.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/http_digest.Plo),)
include ./$(DEPDIR)/http_digest.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/http_negotiate.Plo),)
include ./$(DEPDIR)/http_negotiate.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/http_ntlm.Plo),)
include ./$(DEPDIR)/http_ntlm.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/if2ip.Plo),)
include ./$(DEPDIR)/if2ip.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/inet_ntop.Plo),)
include ./$(DEPDIR)/inet_ntop.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/inet_pton.Plo),)
include ./$(DEPDIR)/inet_pton.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/krb4.Plo),)
include ./$(DEPDIR)/krb4.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/krb5.Plo),)
include ./$(DEPDIR)/krb5.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/ldap.Plo),)
include ./$(DEPDIR)/ldap.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/llist.Plo),)
include ./$(DEPDIR)/llist.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/md5.Plo),)
include ./$(DEPDIR)/md5.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/memdebug.Plo),)
include ./$(DEPDIR)/memdebug.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/mprintf.Plo),)
include ./$(DEPDIR)/mprintf.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/multi.Plo),)
include ./$(DEPDIR)/multi.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/netrc.Plo),)
include ./$(DEPDIR)/netrc.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/nonblock.Plo),)
include ./$(DEPDIR)/nonblock.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/nss.Plo),)
include ./$(DEPDIR)/nss.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/parsedate.Plo),)
include ./$(DEPDIR)/parsedate.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/progress.Plo),)
include ./$(DEPDIR)/progress.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/qssl.Plo),)
include ./$(DEPDIR)/qssl.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/rawstr.Plo),)
include ./$(DEPDIR)/rawstr.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/security.Plo),)
include ./$(DEPDIR)/security.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/select.Plo),)
include ./$(DEPDIR)/select.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/sendf.Plo),)
include ./$(DEPDIR)/sendf.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/share.Plo),)
include ./$(DEPDIR)/share.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/slist.Plo),)
include ./$(DEPDIR)/slist.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/socks.Plo),)
include ./$(DEPDIR)/socks.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/socks_gssapi.Plo),)
include ./$(DEPDIR)/socks_gssapi.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/socks_sspi.Plo),)
include ./$(DEPDIR)/socks_sspi.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/speedcheck.Plo),)
include ./$(DEPDIR)/speedcheck.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/splay.Plo),)
include ./$(DEPDIR)/splay.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/ssh.Plo),)
include ./$(DEPDIR)/ssh.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/sslgen.Plo),)
include ./$(DEPDIR)/sslgen.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/ssluse.Plo),)
include ./$(DEPDIR)/ssluse.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/strdup.Plo),)
include ./$(DEPDIR)/strdup.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/strequal.Plo),)
include ./$(DEPDIR)/strequal.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/strerror.Plo),)
include ./$(DEPDIR)/strerror.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/strtok.Plo),)
include ./$(DEPDIR)/strtok.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/strtoofft.Plo),)
include ./$(DEPDIR)/strtoofft.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/telnet.Plo),)
include ./$(DEPDIR)/telnet.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/tftp.Plo),)
include ./$(DEPDIR)/tftp.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/timeval.Plo),)
include ./$(DEPDIR)/timeval.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/transfer.Plo),)
include ./$(DEPDIR)/transfer.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/url.Plo),)
include ./$(DEPDIR)/url.Plo
endif
ifneq ($(wildcard ./$(DEPDIR)/version.Plo),)
include ./$(DEPDIR)/version.Plo
endif

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) curl_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) curl_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) curl_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) curl_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) curl_config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am uninstall-libLTLIBRARIES


$(DSP): msvcproj.head msvcproj.foot Makefile.am
	echo "creating $(DSP)"
	@(cp $(srcdir)/msvcproj.head $(DSP); \
	echo "# Begin Group \"Source Files\"" $(DSPOUT); \
        echo "" $(DSPOUT); \
        echo "# PROP Default_Filter \"\"" $(DSPOUT); \
        win32_srcs='$(WIN32SOURCES)'; \
        sorted_srcs=`for file in $$win32_srcs; do echo $$file; done | sort`; \
        for file in $$sorted_srcs; do \
	echo "# Begin Source File" $(DSPOUT); \
	echo "" $(DSPOUT); \
	echo "SOURCE=.\\"$$file $(DSPOUT); \
	echo "# End Source File" $(DSPOUT); \
	done; \
	echo "# End Group" $(DSPOUT); \
	echo "# Begin Group \"Header Files\"" $(DSPOUT); \
        echo "" $(DSPOUT); \
        echo "# PROP Default_Filter \"\"" $(DSPOUT); \
        win32_hdrs='$(WIN32HEADERS)'; \
        sorted_hdrs=`for file in $$win32_hdrs; do echo $$file; done | sort`; \
        for file in $$sorted_hdrs; do \
	echo "# Begin Source File" $(DSPOUT); \
	echo "" $(DSPOUT); \
	echo "SOURCE=.\\"$$file $(DSPOUT); \
	echo "# End Source File" $(DSPOUT); \
	done; \
	echo "# End Group" $(DSPOUT); \
	cat $(srcdir)/msvcproj.foot $(DSPOUT) )

$(VCPROJ): vc8proj.head vc8proj.foot Makefile.am
	echo "creating $(VCPROJ)"
	@(cp $(srcdir)/vc8proj.head $(VCPROJ); \
        win32_srcs='$(WIN32SOURCES)'; \
        sorted_srcs=`for file in $$win32_srcs; do echo $$file; done | sort`; \
        for file in $$sorted_srcs; do \
	echo "<File RelativePath=\""$$file"\"></File>" $(VCPROJOUT); \
	done; \
	echo "</Filter><Filter	Name=\"Header Files\">" $(VCPROJOUT); \
        win32_hdrs='$(WIN32HEADERS)'; \
        sorted_hdrs=`for file in $$win32_hdrs; do echo $$file; done | sort`; \
        for file in $$sorted_hdrs; do \
	echo "<File RelativePath=\""$$file"\"></File>" $(VCPROJOUT); \
	done; \
	cat $(srcdir)/vc8proj.foot $(VCPROJOUT) )
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
