<!-- Copyright 2011, MediaTek Inc. All Rights Reserved. -->
<html>
<head>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="Expires" content="-1">
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" href="/style/normal_ws.css" type="text/css">
<title>Wireless WPS</title>
</head>

<script type="text/javascript" src="/shareFun.js"></script>
<script type="text/javascript" src="/wps_timer.js"></script>
<script language="JavaScript" type="text/javascript">
var wps_result;

function WPSUpdateHTML()
{
	if (http_request.readyState == 4) {
		if (http_request.status == 200) {
			var all_str = http_request.responseText;
			var field = all_str.split('\t');

			wpsconfigured = document.getElementById("WPSConfigured");
			if(field[0] == "1" || field[0] == "0")
				wpsconfigured.innerHTML = "No";
			else if(field[0] == "2")
				wpsconfigured.innerHTML = "Yes";
			else
				wpsconfigured.innerHTML = "Unknown";

			wpsssid = document.getElementById("WPSSSID");
			wpsssid.innerHTML = field[1];

			wpsauthmode = document.getElementById("WPSAuthMode");
			wpsauthmode.innerHTML = field[2];

			wpsencryptype = document.getElementById("WPSEncryptype");
			wpsencryptype.innerHTML = field[3];

			wpsdefaultkeyindex = document.getElementById("WPSDefaultKeyIndex");
			wpsdefaultkeyindex.innerHTML = field[4];

			wpskeytype = document.getElementById("WPSKeyType");
			if(field[3] == "WEP"){
				wpskeytype.innerHTML = "WPS Key(Hex value)";
			}else
				wpskeytype.innerHTML = "WPS Key(ASCII)";

			wpswpakey = document.getElementById("WPSWPAKey");
			wpswpakey.innerHTML = field[5];

			wpsstatus = document.getElementById("WPSCurrentStatus");
			wpsstatus.innerHTML = field[6];

			if(field[7] == "-1")
				document.getElementById("WPSInfo").value = "WSC failed";
			else if(field[7] == "0"){
				document.getElementById("WPSInfo").value = "WSC:" + field[6];
			}else if(field[7] == "1")
				document.getElementById("WPSInfo").value = "WSC Success";
			wps_result = field[7];
		} else {
			alert("Can\'t get the mac address.");
		}
	}

}

function updateWPS(){
	makeRequest("/cgi-bin/makeRequest.cgi", "updateAPWPSStatus&rai0", WPSUpdateHTML);
	document.WPSConfig.submitWPSEnable.disabled = false;
	document.WPSConfig.WPSEnable.disabled = false;
	document.getElementById("GenPIN").disabled = false;
	document.SubmitOOB.submitResetOOB.disabled = false;
	document.WPS.PINPBCRadio[0].disabled = false;
	document.WPS.PINPBCRadio[1].disabled = false;
	document.WPS.PIN.disabled = false;
	document.WPS.submitWPS.disabled = false;
}

function enableTextField (field)
{
	if(document.all || document.getElementById)
		field.disabled = false;
	else {
		field.onfocus = field.oldOnFocus;
	}
}

function disableTextField (field)
{
	if(document.all || document.getElementById)
		field.disabled = true;
	else {
		field.oldOnFocus = field.onfocus;
		field.onfocus = skip;
	}
}

function ValidateChecksum(PIN)
{
	var accum = 0;
	var tmp_str = PIN.replace("-", "");
	var pincode = tmp_str.replace(" ", "");

	document.WPS.PIN.value = pincode;
	if (pincode.length == 4)
		return 1;
	if (pincode.length != 8)
		return 0;

	accum += 3 * (parseInt(pincode / 10000000) % 10);
	accum += 1 * (parseInt(pincode / 1000000) % 10);
	accum += 3 * (parseInt(pincode / 100000) % 10);
	accum += 1 * (parseInt(pincode / 10000) % 10);
	accum += 3 * (parseInt(pincode / 1000) % 10);
	accum += 1 * (parseInt(pincode / 100) % 10);
	accum += 3 * (parseInt(pincode / 10) % 10);
	accum += 1 * (parseInt(pincode / 1) % 10);

	return ((accum % 10) == 0);
}

function PINPBCFormCheck()
{
	if (document.WPS.PINPBCRadio[0].checked) {
		// PIN
		if(document.WPS.PIN.value != "") {
			if (!ValidateChecksum(document.WPS.PIN.value)) {
				alert("PIN number validation failed\n");
				return false;
			}
		}
	} else {
		// PBC
	}
	return true;
}

function checkSecurity()
{
	var authmode = "<!--#exec cmd="web rtdev nvram AuthMode"-->";
	var ieee8021x = "<!--#exec cmd="web rtdev nvram IEEE8021X"-->";
	var security = new Array(); 

	security = authmode.split(";");
	if (security[0] == "SHARED" || security[0] == "WEPAUTO" || security[0] == "WPA" || 
			security[0] == "WPA2" || security[0] == "WPA1WPA2" || ieee8021x == "1")
		alert("WPS does not support this security mode, please reset to OOB first!");
}

function initTranslation()
{
	var e = document.getElementById("wpsTitle_text");
	e.innerHTML = _("wps title");
	e = document.getElementById("wpsIntroduction_text");
	e.innerHTML = _("wps introduction");
	e = document.getElementById("wpsConfig_text");
	e.innerHTML = _("wps config");
	e = document.getElementById("wpsWPS_text");
	e.innerHTML = _("wps wps");
	e = document.getElementById("wpsDisable_text");
	e.innerHTML = _("wireless disable");
	e = document.getElementById("wpsEnable_text");
	e.innerHTML = _("wireless enable");
	e = document.getElementById("wpsConfigApply_text");
	e.value = _("wireless apply");

	e = document.getElementById("wpsSummary_text");
	e.innerHTML = _("wps summary");
	e = document.getElementById("wpsCurrentStatus_text");
	e.innerHTML = _("wps current status");
	e = document.getElementById("wpsConfigured_text");
	e.innerHTML = _("wps configured");
	e = document.getElementById("wpsSSID_text");
	e.innerHTML = _("wps ssid");
	e = document.getElementById("wpsAuthMode_text");
	e.innerHTML = _("wps auth mode");
	e = document.getElementById("wpsEncrypType_text");
	e.innerHTML = _("wps encryp type");
	e = document.getElementById("wpsDefaultKeyIndex_text");
	e.innerHTML = _("wps default key index");
	e = document.getElementById("wpsAPPIN_text");
	e.innerHTML = _("wps ap pin");
	e = document.getElementById("wpsResetOOB_text");
	e.value = _("wps reset oob");

	e = document.getElementById("wpsProgress_text");
	e.innerHTML = _("wps progress");
	e = document.getElementById("wpsMode_text");
	e.innerHTML = _("wps mode");
	e = document.getElementById("wpsPINMode_text");
	e.innerHTML = _("wps pin mode");
	e = document.getElementById("wpsPBCMode_text");
	e.innerHTML = _("wps pbc mode");
	e = document.getElementById("wpsPINNum_text");
	e.innerHTML = _("wps pin num");
	e = document.getElementById("wpsPINApply_text");
	e.value = _("wireless apply");
	
	e = document.getElementById("wpsStatus_text");
	e.innerHTML = _("wps status");

}

function pageInit()
{
	//initTranslation();
	// hide tables first
	display("none", "div_wps_status");
	display("none", "div_wps");
	display("none", "div_wps_info");

	var wpsenable = "<!--#exec cmd="web rtdev nvram WscConfMode"-->";
	if(wpsenable == "0"){
		// disable WPS
		document.getElementById("WPSEnable").options.selectedIndex = 0;
	}else{
		// enable WPS
		document.getElementById("WPSEnable").options.selectedIndex = 1;
		checkSecurity();

		display("table", "div_wps_status");
		display("table", "div_wps");
		display("table", "div_wps_info");

		updateWPS();
		InitializeTimer();
	}
}

function onPINPBCRadioClick(value)
{
	if(value == 1){
		// PIN selected
		display("table-row", "PINRow");
	}else{
		// PBC selected
		display("none", "PINRow");
	}
}
</script>

<body onload="pageInit()">
<table class="body"><tr><td>
<h1 id="wpsTitle_text">Wi-Fi Protected Setup</h1>
<p id="wpsIntroduction_text"> You could setup security easily by choosing PIN or PBC method to do Wi-Fi Protected Setup.</p>

<table border="1" cellpadding="2" cellspacing="1" width="90%">
<form method="post" name =WPSConfig action="/cgi-bin/wireless.cgi">
<input type=hidden name=page value=WPSConfig>
<input type=hidden name=wlan_conf value="rtdev">
<tbody>
<!-- ==================  WPS Config  ================== -->
<tr>
  <td class="title" colspan="2" id="wpsConfig_text">WPS Config</td>
</tr>

<tr>
  <td class="head" id="wpsWPS_text">WPS: </td>
  <td>	<select id="WPSEnable" name="WPSEnable" size="1">
			<option value=0 id="wpsDisable_text">Disable</option>
			<option value=1 id="wpsEnable_text">Enable</option>
		</select>
  </td>
</tr>

<tr>
<td colspan="2"> <input type="submit" value="Apply" id="wpsConfigApply_text" name="submitWPSEnable" align="left"> </td>
</tr>
</tbody>
</form>
</table>
<br />
<table id="div_wps_status" name="div_wps_status" border="1" cellpadding="2" cellspacing="1" width="90%" style="visibility: hidden;">
<tbody>

<!-- =================  WPS Summary  ================= -->
<tr>
  <td class="title" colspan="2" id="wpsSummary_text">WPS Summary</td>
</tr>

<tr>
  <td class="head" id="wpsCurrentStatus_text">WPS Current Status: </td>
  <td> <span id="WPSCurrentStatus"> </span> </td>
</tr>


<tr>
  <td class="head" id="wpsConfigured_text">WPS Configured: </td>
  <td> <span id="WPSConfigured"> </span> </td>
</tr>

<tr>
  <td class="head" id="wpsSSID_text">WPS SSID: </td>
  <td> <span id="WPSSSID"> </span> </td>
</tr>

<tr>
  <td class="head" id="wpsAuthMode_text">WPS Auth Mode: </td>
  <td> <span id="WPSAuthMode"> </span> </td>
</tr>

<tr>
  <td class="head" id="wpsEncrypType_text">WPS Encryp Type: </td>
  <td> <span id="WPSEncryptype"> </span> </td> 
</tr>

<tr>
  <td class="head" id="wpsDefaultKeyIndex_text">WPS Default Key Index: </td>
  <td> <span id="WPSDefaultKeyIndex"> </span> </td>
</tr>

<tr>
  <td class="head" > <span id="WPSKeyType"> </span></td>
  <td> <span id="WPSWPAKey"> </span> </td>
</tr>

<form method="post" name ="GenPINCode" action="/cgi-bin/wireless.cgi">
<input type=hidden name=page value=GenPINCode>
<input type=hidden name=wlan_conf value="rtdev">
<tr>
  <td class="head" id="wpsAPPIN_text">AP PIN:
  </td>
  <td> <!--#exec cmd="web rtdev wifi wpsPINCode"--> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type=submit value="Generate" id="GenPIN" name="GenPIN"></td>
</tr>
</form>
<tr>
  <td colspan="2">
	<form method="post" name ="SubmitOOB" action="/cgi-bin/wireless.cgi">
		<input type=hidden name=page value=SubmitOOB>
		<input type=hidden name=wlan_conf value="rtdev">
		<input type="submit" value="Reset OOB" id="wpsResetOOB_text" name="submitResetOOB" align="left">
	</form>
  <td>
</tr>
</tbody>
</table>
<br />
<!-- ============================    WPS    ============================ -->
<form method="post" name =WPS action="/cgi-bin/wireless.cgi">
<input type=hidden name=page value=WPS>
<input type=hidden name=wlan_conf value="rtdev">
<table id="div_wps" name="div_wps"  border="1" cellpadding="2" cellspacing="1" width="90%" style="visibility: hidden;">
<tbody>
<tr>
  <td class="title" colspan="2" id="wpsProgress_text">WPS Progress</td>
</tr>

<tr>
	<td class="head" id="wpsMode_text">WPS mode</td>
	<td>
		<input name="PINPBCRadio" id="PINPBCRadio" value="1" type="radio" checked onClick="onPINPBCRadioClick(1)"><font id="wpsPINMode_text">PIN &nbsp;</font>
		<input name="PINPBCRadio" id="PINPBCRadio" value="2" type="radio" onClick="onPINPBCRadioClick(2)"><font id="wpsPBCMode_text">PBC &nbsp;</font>
	</td>
</tr>

<tr id="PINRow">
	<td class="head" id="wpsPINNum_text">PIN</td>
	<td>
		<input value="" name="PIN" id="PIN" size="10" maxlength="10" type="text">
	</td>
</tr>

<tr>
	<td colspan="2">
		<input type="submit" value="Apply" id="wpsPINApply_text" name="submitWPS" align="left" onClick="return PINPBCFormCheck();">
	</td>
</tr>
</tbody>
</table>
</form>
<br />
<!-- =======================  WPS Info Bar  ======================= -->
<table id="div_wps_info" name="div_wps_info" border="1" cellpadding="1" cellspacing="1" width="90%" style="visibility: hidden;">
<tbody><tr><td colspan="2" class="title" id="wpsStatus_text">WPS Status</td></tr>
<tr><td colspan="2"> 
<textarea name="WPSInfo" id="WPSInfo" cols="55" rows="2" wrap="off" readonly="1"></textarea>
</td></tr>
</tbody></table>
</td></tr></table>
</body>
<head>
<meta http-equiv="Pragma" content="no-cache">
<meta http-equiv="Expires" content="-1">
</head>
</html>
