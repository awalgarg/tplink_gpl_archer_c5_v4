<!-- Copyright 2011, MediaTek Inc. All Rights Reserved. -->
<html>
<head>
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="Expires" content="-1">
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" href="/style/normal_ws.css" type="text/css">
<title>Wireless APClient Settings</title>
</head>

<script type="text/javascript" src="/shareFun.js"></script>
<script language="JavaScript" type="text/javascript">
var ifname_prefix = "apcli";
var ssid_index = "1";
var ifname = ifname_prefix + ssid_index;
var nvram_id = "2860";
var get_wps_status_interval = 1500;
var apcli_wps_status = "idle";
var waiting_count = 0;
var wps_ajax_url = "/cgi-bin/makeRequest.cgi";
var mode = "<!--#exec cmd="web 2860 nvram ApCliAuthMode"-->";
var enc = "<!--#exec cmd="web 2860 nvram ApCliEncrypType"-->";
var wpapsk = "<!--#exec cmd="web 2860 nvram ApCliWPAPSK"-->";
var keyid = "<!--#exec cmd="web 2860 nvram ApCliDefaultKeyID"-->";
var key1type = "<!--#exec cmd="web 2860 nvram ApCliKey1Type"-->";
var key2type = "<!--#exec cmd="web 2860 nvram ApCliKey2Type"-->";
var key3type = "<!--#exec cmd="web 2860 nvram ApCliKey3Type"-->";
var key4type = "<!--#exec cmd="web 2860 nvram ApCliKey4Type"-->";
var SSID = new Array();
var PhyModeList  = new Array(); 
var dbdc_enabled = "<!--#exec cmd="web 2860 nvram DBDC_MODE"-->"; 
var dbdcb = "<!--#exec cmd="web 2860 build dbdc"-->";
var ap_list;

//Interaction functions
//========================================================================================
function change_ap(ap_idx)
{
	//console.log("selected ap_idx=", ap_idx);
	document.apcli_wps_config_form.pin_ap_ssid.value = ap_list[ap_idx]['ssid'];
	document.apcli_wps_config_form.pin_ap_bssid.value = ap_list[ap_idx]['bssid'];
}

function on_any_start()
{
	show_waiting('ON');
}

function on_any_end()
{
	show_waiting('OFF');
}

function on_rescan_start(mode)
{
	on_any_start();
	clean_aplist_table();
	get_site_survey(mode);

	//show_waiting('OFF');
}

function on_rescan_end()
{
	on_any_end();
}
/*
function enable_wps(is_enabled)
{
	//console.log("enalbe_wps.is_enabled=" + is_enabled);
	apcli_wps_config(is_enabled);
}
*/

function on_gen_pincode_start(wps_enabled)
{
	on_any_start();
	apcli_wps_gen_pincode();
}

function on_gen_pincode_end()
{
	on_any_end();
	on_get_pincode_start();
}

function on_get_pincode_start()
{
	on_any_start();
	apcli_wps_get_pincode();
}

function on_get_pincode_end()
{
	on_any_end();
}

function on_apcli_wps_start(wsc_conf_mode)
{
	//console.log("on_apcli_wps_start <-------");
	//var wsc_conf_mode = document.apcli_wps_config_form.wps_conf_mode.value;
	var wsc_mode = document.apcli_wps_config_form.wps_mode.value;
	var pin_ap_ssid = document.apcli_wps_config_form.pin_ap_ssid;
	var encode_ssid = "";
	var alert_msg = "Please choose a Root AP in Site Survey result table below.\n" + 
			"if there is no WPS Root AP in the Site Survey result table,\n" +
			"please do scan again";

	//console.log("on_apcli_wps_start.wsc_mode=" + wsc_mode);
	//alert("on_apcli_wps_start.wsc_conf_mode=" + wsc_conf_mode + "wsc_mode=" + wsc_mode);
	if (wsc_conf_mode == "enr1") {
		if (wsc_mode == "pin1"){
			//alert("pin_ap_ssid.value.length=" + pin_ap_ssid.value.length);
			if (pin_ap_ssid.value.length ==  0) {
				alert(alert_msg);
				return;
			}
			encode_ssid = ssid_encode(pin_ap_ssid.value);
			if (encode_ssid == "") {
				pin_ap_ssid.focus();
				pin_ap_ssid.select();
			}	
			//alert("encode_ssid=" + encode_ssid);
			on_any_start();
			apcli_do_enr_pin_wps(encode_ssid);
		} else if (wsc_mode == "pbc2") {
			on_any_start();
			apcli_do_enr_pbc_wps();
		} else {
			alert("Please choose one of WPS Mode.");
		}

	} else if (wsc_conf_mode == "reg4") {
		alert("This mode is not supported by driver.");
	} else {
		alert("Please choose one of WPS Role.");
	}
}

function on_apcli_wps_end()
{
	on_any_end();
}

function on_apcli_wps_cancel_start()
{
	//console.log("on_apcli_wps_cancel <-------");
	on_any_start();
	apcli_show_wps_status_str("WSC: Canceling");
	apcli_cancel_wps();
	setTimeout(apcli_get_wps_status(), get_wps_status_interval);
}

function on_apcli_wps_cancel_end()
{
	on_any_end();
}

function on_wps_mode_change(wsc_mode)
{
//console.log("on_wps_mode_change.wsc_mode=" + wsc_mode);
	wps_conf_mode = document.apcli_wps_config_form.wps_conf_mode.value
	if (wsc_mode == "pbc2") {
		//display("none", "div_wps_enrolle_pin"); //Future used for Reg.
		show_root_ap_info("OFF");
	}

	if (wsc_mode == "pin1") {
		//if (wps_conf_mode == "reg4"))
			//display("table-row", "div_wps_enrolle_pin"); //Future used for Reg.
		if (wps_conf_mode == "enr1")
			show_root_ap_info("ON");
	}
		
}
//Sub function
//========================================================================================
function wps_init(is_enabled)
{
	if(is_enabled*1 > 0){
		show_apcli_wps(is_enabled);
	} else {
		show_apcli_wps(is_enabled);
	}
}

function show_apcli_wps(is_enabled)
{
	if(is_enabled*1 >  0)
		display("table", "div_apsli_wps");
	else
		display("none", "div_apsli_wps");
}

function show_waiting(mode)
{
	if(mode == "ON"){
		waiting_count += 1;
	} else {
		waiting_count -= 1;
	}
	console.log("waiting_count="+waiting_count);

	if (waiting_count < 0)
		//sth unsync, reset counter.
		waiting_count = 0;

	if (waiting_count > 0)
		display("table", "div_waiting_img");
	else if (waiting_count == 0)
		display("none", "div_waiting_img");
}

function show_root_ap_info(mode)
{
	if(mode == "ON"){
		display("table-row", "div_root_ap_info_tr");
		display("table-row", "div_root_ap_ssid_tr");
		display("table-row", "div_root_ap_mac_tr");
	} else {
		display("none", "div_root_ap_info_tr");
		display("none", "div_root_ap_ssid_tr");
		display("none", "div_root_ap_mac_tr");
	}
		
}

function clean_aplist_table()
{
	var table = document.getElementById('aplist');

	//console.log("clean_aplist_table.aplist len=" + table.rows.length);
	while(table.rows.length > 2)
		table.deleteRow(-1);
}

function insert_aplist_table()
{
	var i, tr_row, td_cell;
	var table = document.getElementById('aplist');

//console.log("insert_aplist_table <-----");
	
	for (i = 0; ap_list[i] != "NULL"; i++){
		tr_row = table.insertRow(-1);
		td_cell = tr_row.insertCell(-1);
		td_cell.innerHTML = "<input type='radio' name='ap_idx' value='" + i + "' onClick='change_ap(this.value)'>";
		td_cell = tr_row.insertCell(-1);
		td_cell.innerHTML = ap_list[i]['channeld'];
		td_cell = tr_row.insertCell(-1);
		td_cell.innerHTML = ap_list[i]['ssid'];
		td_cell = tr_row.insertCell(-1);
		td_cell.innerHTML = ap_list[i]['bssid'];
		td_cell = tr_row.insertCell(-1);
		td_cell.innerHTML = ap_list[i]['security'];
		td_cell = tr_row.insertCell(-1);
		td_cell.innerHTML = ap_list[i]['signald'];
		td_cell = tr_row.insertCell(-1);
		td_cell.innerHTML = ap_list[i]['mode'];
		td_cell = tr_row.insertCell(-1);
		td_cell.innerHTML = ap_list[i]['ext_ch'];
		td_cell = tr_row.insertCell(-1);
		td_cell.innerHTML = ap_list[i]['net_type'];
		td_cell = tr_row.insertCell(-1);
		td_cell.innerHTML = ap_list[i]['wps'];
	}
}

function ssid_encode_test(ssid)
{
	var encode_str1 = encodeURIComponent(ssid);
	var encode_str2 = ssid_encode(ssid);
	alert("orig ssid="+ssid+"\n" + "encodeURICompoenet(ssid)="+encode_str1 + "ssid_encode(ssid)="+encode_str2);
}

function ssid_encode(ssid)
{
	var encode_ssid;
	if (ssid != "")
	{
		encode_ssid = encodeURIComponent(ssid).replace(/%[A-F\d]{2}/g, 'U');
		if (encode_ssid.length > 32) {
			alert("The length of SSID exceeds 32 characters!");
			return "";
		}
	}

	return encode_ssid;
}

function ValidateChecksum(PIN)
{
	var accum = 0;
	if (pincode.length == 4)
		return 1;
	if (pincode.length != 8)
		return 0;

	accum += 3 * (parseInt(pincode / 10000000) % 10);
	accum += 1 * (parseInt(pincode / 1000000) % 10);
	accum += 3 * (parseInt(pincode / 100000) % 10);
	accum += 1 * (parseInt(pincode / 10000) % 10);
	accum += 3 * (parseInt(pincode / 1000) % 10);
	accum += 1 * (parseInt(pincode / 100) % 10);
	accum += 3 * (parseInt(pincode / 10) % 10);
	accum += 1 * (parseInt(pincode / 1) % 10);

	return ((accum % 10) == 0);
}

function show_profile_info(wps_info)
{
	var wps_info_textarea = document.getElementById("wps_info");
	
	//if ((!wps_info.enr_profile_idx) && (!wps_info.enr_SSID))
	//	return -1;

	wps_info_textarea.value += "\n[Profile" + wps_info.enr_profile_idx + "]";
	wps_info_textarea.value += "\nSSID:" + wps_info.enr_SSID;
	wps_info_textarea.value += "\nAuthMode:" + wps_info.enr_AuthMode;
	wps_info_textarea.value += "\tEncrypType:" + wps_info.enr_EncrypType;
	wps_info_textarea.value += "\nDefault Key Index:" + wps_info.enr_DefaultKeyID;
	if(wps_info.AuthMode == "WEP") //WPS1.0 Spec which is OBSOLESCENT on WPS2.0.
		wps_info_textarea.value += "\tKey(Hex value):" + wps_info.enr_KeyStr;
	else
		wps_info_textarea.value += "\tWPS Key(ASCII):" + wps_info.enr_WPAPSK;

	return 0;
}


function apcli_show_wps_status_str(show_str)
{
	var wps_info_textarea = document.getElementById("wps_info");

	wps_info_textarea.value = show_str;
}

function apcli_update_wps_status(wps_info, show_str)
{
	var wps_info_textarea = document.getElementById("wps_info");
	var ret = 0;


	if (wps_info.wps_result == "Failed") {
		wps_info_textarea.value = "WSC failed" + "\n" + "WSC failed";
		ret = -1;
	} else if (wps_info.wps_result == "Success") {
		wps_info_textarea.value = "WSC Success";
		if (wps_info.wps_port_secured == "YES") {
			//if (show_profile_info(wps_info) == 0)
			//	ret = 1;
			//else
			//	ret = 0;
			show_profile_info(wps_info);
			ret = 1;
		} else {
			wps_info_textarea.value += "\nConnecting";
			ret = 0;
		}
	} else {
		wps_info_textarea.value = "WSC:" + wps_info.wps_status;
		if ((wps_info.wps_status_code == 0) || (wps_info.wps_status_code == 1))
			ret = 1;
		else
			ret = 0;
	}

	if (ret != 0)
		on_apcli_wps_end();

	return ret;
}

//Ajax functions
//========================================================================================
function apcli_get_wps_status_cb(request, args)
{
	//console.log("apcli_get_wps_status_cb.responseText=" + request.responseText);
	var res = JSON.parse(request.responseText);
	var ret;

	if (!res) {
		alert("apcli_get_wps_status NG! Please refresh this page.");
		return;
	}

	if (res.apcli_get_wps_status == "OK") {
		ret = apcli_update_wps_status(res);
		if (ret == 0)
			setTimeout(apcli_get_wps_status, get_wps_status_interval);
	} else {
		alert("apcli_get_wps_status NG! Please refresh this page.\n" + res.apcli_get_wps_status);
	}
}

function apcli_get_wps_status()
{
	var query = "apcli_get_wps_status&";

	query += nvram_id + "&" + ssid_index;
	//console.log("apcli_get_wps_status.query=" + query);

	makeRequest2(wps_ajax_url, query, apcli_get_wps_status_cb, ssid_index);
}

function apcli_get_wps_reg_info_cb(request, args)
{
	//console.log("apcli_get_wps_reg_info_cb.responseText=" + request.responseText);
/* Future used
	var res = JSON.parse(request.responseText);

	if (!res) {
		alert("apcli_get_wps_reg_info NG! Please refresh this page.\n" + res.apcli_get_wps_reg_info);
		return;
	}

	if (res.apcli_get_wps_reg_info == "OK") {
		apcli_update_wps_status(res);
	else
		alert("apcli_get_wps_reg_info NG! Please refresh this page.\n" + res.apcli_get_wps_reg_info);
*/
}

function apcli_get_wps_reg_info()
{
	var query = "apcli_get_wps_reg_info&";

	query += nvram_id + "&" + ssid_index;
	//console.log("apcli_get_wps_reg_info.query=" + query);

	makeRequest2(wps_ajax_url, query, apcli_get_wps_reg_info_cb, ssid_index);
}

function apcli_do_enr_pin_wps_cb(request, args)
{
	//console.log("apcli_do_enr_pin_wps_cb.responseText=" + request.responseText);
	var res = JSON.parse(request.responseText);
	
	if (res.apcli_do_enr_pin_wps == "OK")
		setTimeout(apcli_get_wps_status(), get_wps_status_interval);
	else
		alert("apcli_do_enr_pin_wps NG! Please refresh this page.\n" + res.apcli_do_enr_pin_wps);
} 

function apcli_do_enr_pin_wps(pin_ap_ssid)
{
	//console.log("apcli_do_enr_pin_wps <-------");
	var query = "apcli_do_enr_pin_wps&"

	query = query + nvram_id + "&"+ ssid_index + "&" + pin_ap_ssid;

	//console.log("apcli_wps_enr_start.query=" + query);
	makeRequest2(wps_ajax_url, query, apcli_do_enr_pin_wps_cb, ssid_index);
}

function apcli_do_enr_pbc_wps_cb(request, args)
{
	//console.log("apcli_do_enr_pbc_wps_cb.responseText=" + request.responseText);
	var res = JSON.parse(request.responseText);
	
	if (res.apcli_do_enr_pbc_wps == "OK")
		setTimeout(apcli_get_wps_status(), get_wps_status_interval);
	else
		alert("apcli_do_enr_pbc_wps NG! Please refresh this page.\n" + res.apcli_do_enr_pbc_wps);
} 

function apcli_do_enr_pbc_wps(request, args)
{
	//console.log("apcli_do_enr_pbc_wps <-------");
	var query = "apcli_do_enr_pbc_wps&"
	
	query = query + nvram_id + "&"+ ssid_index;

	//console.log("apcli_do_enr_pbc_wps.query=" + query);
	makeRequest2(wps_ajax_url, query, apcli_do_enr_pbc_wps_cb, ssid_index);
}

function apcli_cancel_wps_cb(request, args)
{
	//console.log("apcli_cancel_wps_cb.responseText=" + request.responseText);
	var res = JSON.parse(request.responseText);
	
	if (res.apcli_cancel_wps != "OK") {
//		document.apcli_wps_config_form.pin_code.value = res.genpincode;
//	} else {
		alert("apcli_cancel_wps NG! Please refresh this page.\n" + res.apcli_cancel_wps);
	}

	on_apcli_wps_cancel_end();
} 

function apcli_cancel_wps()
{
	//console.log("apcli_cancel_wps <-------");
	var query = "apcli_cancel_wps&"
	
	query += nvram_id + "&" + ssid_index;

	makeRequest2(wps_ajax_url, query, apcli_cancel_wps_cb, ssid_index);
} 

/*
function apcli_wps_reg_pin_start()
{
	// Internal Registrar, PIN
	//var enrollee_pin = document.apcli_wps_config_form.enrolle_pin.value;
	//var tmp_str = enrollee_pin.replace("-", "");
	//var pincode = tmp_str.replace(" ", "");

	//document.apcli_wps_config_form.enrolle_pin.value = pincode;
	//if(!ValidateChecksum(pincode))
	//	return false;
	//console.log("apcli_wps_enr_start.enrollee_pin=" + pincode);
	//query = query + "&3&" + pincode;
}


function apcli_wps_config_cb(request, is_enabled)
{
	var res = JSON.parse(request.responseText);
	//console.log("wpsConfigApplyCB.res=" + res + " ssid_index=" + ssid_index);

	//dbdc_wps_init(ssid_index);
	if (res.wpsconf== "OK")
		wps_init(is_enabled);
	else
		alert("wpsConfigApply Error! Please refresh this page.");
}

function apcli_wps_config(wps_enabled)
{
	var query = "apcli_wps_config&2860&" + ifname + "&WPSEnable=" + wps_enabled;

	makeRequest2(wps_ajax_url, query, apcli_wps_config_cb, wps_enabled);
}
*/

function apcli_wps_gen_pincode_cb(request, is_enabled)
{
	//console.log("apcli_wps_gen_pincode_cb.request.responseText=" + request.responseText);
	var res = JSON.parse(request.responseText);
	//console.log("wpsConfigApplyCB.res=" + res + " ssid_index=" + ssid_index);

	//dbdc_wps_init(ssid_index);
	//console.log("res.apcli_wps_gen_pincode.length=" + res.apcli_wps_gen_pincode.length)
	//if (res.apcli_wps_gen_pincode.length == 8)
	//	document.apcli_wps_config_form.pin_code.value = res.apcli_wps_gen_pincode;
	if (res.apcli_wps_gen_pincode == "OK")
		on_gen_pincode_end();
	else
		alert("apcli_wps_gen_pincode NG! Please refresh this page.\n" + res.apcli_wps_gen_pincode);
}

function apcli_wps_gen_pincode(wps_enabled)
{
	var query = "apcli_wps_gen_pincode&" + nvram_id + "&" + ssid_index;

	makeRequest2(wps_ajax_url, query, apcli_wps_gen_pincode_cb, wps_enabled);
}

function apcli_wps_get_pincode_cb(request, is_enabled)
{
	var res = JSON.parse(request.responseText);
	//console.log("wpsConfigApplyCB.res=" + res + " ssid_index=" + ssid_index);

	//dbdc_wps_init(ssid_index);
	//console.log("res.getpincode.length=" + res.getpincode.length)
	if (res.getpincode.length == 8)
		document.apcli_wps_config_form.pin_code.value = res.getpincode; 
	else
		alert("GetPINCode NG! Please refresh this page.");

	on_get_pincode_end();
}

function apcli_wps_get_pincode(wps_enabled)
{
	var query = "apcli_wps_get_pincode&" + nvram_id + "&" + ssid_index;

	makeRequest2(wps_ajax_url, query, apcli_wps_get_pincode_cb, wps_enabled);
}


function get_site_survey_cb(request, mode)
{
	//console.log("get_wps_site_survey_cb.responseText=" + request.responseText);
	//console.log("get_wps_site_survey_cb.args=" + mode);
	ap_list = JSON.parse(request.responseText); //save to global list.
	clean_aplist_table();
	insert_aplist_table();

	on_rescan_end();
}

function get_site_survey(mode)
{
	query = "apcli_scan&" + nvram_id + "&" + ifname;

	if (mode == "WPS"){
		query += "&WPS";
		makeRequest2("/cgi-bin/makeRequest.cgi", query, get_site_survey_cb, "WPS");
	} else {
		makeRequest2("/cgi-bin/makeRequest.cgi", query, get_site_survey_cb, "ALL");
	}
}

function WPSUpdateHTML(http_request, ssid_index)
{
	var all_str = http_request.responseText;
	var field = all_str.split('\t');
	wpsconfigured = document.getElementById("WPSConfigured");
	//console.log("WPSUpdateHTML.wpsconfigured="+ field[0]);
	if(field[0] == "1" || field[0] == "0")
		wpsconfigured.innerHTML = "No";
	else if(field[0] == "2")
		wpsconfigured.innerHTML = "Yes";
	else
		wpsconfigured.innerHTML = "Unknown";

	wpsssid = document.getElementById("WPSSSID");
	wpsssid.innerHTML = field[1];
	if((dbdc_en == "1") && (dbdcb == "1")){
		if(field[1] != document.WPSConfig.ssidIndex.options[ssid_index].text){
			SSID[ssid_index] = field[1];
			document.WPSConfig.ssidIndex.options[ssid_index].text = field[1];
		}
	}

	wpsauthmode = document.getElementById("WPSAuthMode");
	wpsauthmode.innerHTML = field[2];

	wpsencryptype = document.getElementById("WPSEncryptype");
	wpsencryptype.innerHTML = field[3];

	wpsdefaultkeyindex = document.getElementById("WPSDefaultKeyIndex");
	wpsdefaultkeyindex.innerHTML = field[4];

	wpskeytype = document.getElementById("WPSKeyType");
	if(field[3] == "WEP"){
		wpskeytype.innerHTML = "WPS Key(Hex value)";
	}else
		wpskeytype.innerHTML = "WPS Key(ASCII)";

	wpswpakey = document.getElementById("WPSWPAKey");
	wpswpakey.innerHTML = field[5];

	wpsstatus = document.getElementById("WPSCurrentStatus");
	wpsstatus.innerHTML = field[6];

	if(field[7] == "-1")
		document.getElementById("WPSInfo").value = "WSC failed";
	else if(field[7] == "0"){
		document.getElementById("WPSInfo").value = "WSC:" + field[6];
	}else if(field[7] == "1")
		document.getElementById("WPSInfo").value = "WSC Success";
	wps_result = field[7];
}

function updateWPSCB(request, args)
{
	//console.log("updateWPSCB.responseText=" + request.responseText);
}

function updateWPS()
{
	makeRequest2(wps_ajax_url, "updateAPWPSStatus&"+ifname, updateWPSCB, ssid_index);
}

// Orig HTML functions
function SecurityModeSwitch()
{
	var mysel = document.wireless_apcli.apcli_enc;
	mysel.options.length = 0;
	if (document.wireless_apcli.apcli_mode.options.selectedIndex == 0) {
		mysel.options[0] = new Option("WEP", "WEP");
		mysel.options[1] = new Option("None", "NONE");
	}
	else if (document.wireless_apcli.apcli_mode.options.selectedIndex == 1) {
		mysel.options[0] = new Option("WEP", "WEP");
	}
	else if (document.wireless_apcli.apcli_mode.options.selectedIndex == 2 ||
		 document.wireless_apcli.apcli_mode.options.selectedIndex == 3) {
		mysel.options[0] = new Option("TKIP", "TKIP");
		mysel.options[1] = new Option("AES", "AES");
	}
}

function EncryptModeSwitch()
{
	display("none", "div_apcli_default_key");
	document.wireless_apcli.apcli_default_key.disabled = true;
	display("none", "div_apcli_key1");
	document.wireless_apcli.apcli_key1.disabled = true;
	display("none", "div_apcli_key2");
	document.wireless_apcli.apcli_key2.disabled = true;
	display("none", "div_apcli_key3");
	document.wireless_apcli.apcli_key3.disabled = true;
	display("none", "div_apcli_key4");
	document.wireless_apcli.apcli_key4.disabled = true;
	display("none", "div_apcli_wpapsk");
	document.wireless_apcli.apcli_wpapsk.disabled = true;

	if (document.wireless_apcli.apcli_enc.value == "WEP") {
		display("table-row", "div_apcli_default_key");
		document.wireless_apcli.apcli_default_key.disabled = false;
		display("table-row", "div_apcli_key1");
		document.wireless_apcli.apcli_key1.disabled = false;
		display("table-row", "div_apcli_key2");
		document.wireless_apcli.apcli_key2.disabled = false;
		display("table-row", "div_apcli_key3");
		document.wireless_apcli.apcli_key3.disabled = false;
		display("table-row", "div_apcli_key4");
		document.wireless_apcli.apcli_key4.disabled = false;
	}
	else if (document.wireless_apcli.apcli_enc.value == "TKIP" ||
		 document.wireless_apcli.apcli_enc.value == "AES") {
		display("table-row", "div_apcli_wpapsk");
		document.wireless_apcli.apcli_wpapsk.disabled = false;
	}
}

function close_additional_function()
{
	display("none", "div_addition_action");
}

function initValue()
{
	var wps_enable = document.apcli_wps_config_form.wps_enable.value;

	display("none", "div_wsc_enable_tr");
	//display("none", "div_wps_conf_mode_tr");
	close_additional_function();

	show_waiting('ON'); //call apcli_get_wps_status() directly.
	on_get_pincode_start(wps_enable);
	apcli_show_wps_status_str("");
	apcli_get_wps_status();
	on_rescan_start("WPS");

//Below is for Registrar reference only.
/*
	if ((dbdc_enabled == "1") && (dbdcb == "1")){
		//var apcliId = document.wireless_apcli.apcliIndex.value;
		var apcliId = ssid_index;
		var str = "";
		var val = new Array();

		str = "<!--#exec cmd="web 2860 nvram ApCliSsid"-->";
		val = str.split(";");
		if (val.length > apcliId)
			document.wireless_apcli.apcli_ssid.value = val[apcliId];
		else
			document.wireless_apcli.apcli_ssid.value = "";

		str = "<!--#exec cmd="web 2860 nvram ApCliBssid"-->"; 
		val = str.split(";");
		if (val.length > apcliId)
			document.wireless_apcli.apcli_bssid.value = val[apcliId];
		else
			document.wireless_apcli.apcli_bssid.value = "";

		if (apcliId == 0){
			document.wireless_apcli.apcli_key1.value = "<!--#exec cmd="web 2860 nvram ApCliKey1Str"-->";
			document.wireless_apcli.apcli_key2.value = "<!--#exec cmd="web 2860 nvram ApCliKey2Str"-->";
			document.wireless_apcli.apcli_key3.value = "<!--#exec cmd="web 2860 nvram ApCliKey3Str"-->";
			document.wireless_apcli.apcli_key4.value = "<!--#exec cmd="web 2860 nvram ApCliKey4Str"-->";
		} else if (apcliId == 1) {
			document.wireless_apcli.apcli_key1.value = "<!--#exec cmd="web 2860 nvram ApCliKey1Str1"-->";
			document.wireless_apcli.apcli_key2.value = "<!--#exec cmd="web 2860 nvram ApCliKey2Str1"-->";
			document.wireless_apcli.apcli_key3.value = "<!--#exec cmd="web 2860 nvram ApCliKey3Str1"-->";
			document.wireless_apcli.apcli_key4.value = "<!--#exec cmd="web 2860 nvram ApCliKey4Str1"-->";
		} else if (apcliId == 2) {
			document.wireless_apcli.apcli_key1.value = "<!--#exec cmd="web 2860 nvram ApCliKey1Str2"-->";
			document.wireless_apcli.apcli_key2.value = "<!--#exec cmd="web 2860 nvram ApCliKey2Str2"-->";
			document.wireless_apcli.apcli_key3.value = "<!--#exec cmd="web 2860 nvram ApCliKey3Str2"-->";
			document.wireless_apcli.apcli_key4.value = "<!--#exec cmd="web 2860 nvram ApCliKey4Str2"-->";
		} else {
			document.wireless_apcli.apcli_key1.value = "<!--#exec cmd="web 2860 nvram ApCliKey1Str"-->";
			document.wireless_apcli.apcli_key2.value = "<!--#exec cmd="web 2860 nvram ApCliKey2Str"-->";
			document.wireless_apcli.apcli_key3.value = "<!--#exec cmd="web 2860 nvram ApCliKey3Str"-->";
			document.wireless_apcli.apcli_key4.value = "<!--#exec cmd="web 2860 nvram ApCliKey4Str"-->";
		}

		str = "<!--#exec cmd="web 2860 nvram MACRepeaterEn"-->";
		val = str.split(";");
		//console.log("val[" + apcliId + "]=" + val[apcliId]);
		if (val.length > apcliId){ 
			if (val[apcliId] > 0){
				document.wireless_apcli.mac_repeater[1].checked = true;
				//console.log("mac_repeater[1]="+val[apcliId]);
			} else {
				document.wireless_apcli.mac_repeater[0].checked = true;
				//console.log("mac_repeater[1]="+val[apcliId]);
			}
		} else {
			if (val[0] > 0){
				document.wireless_apcli.mac_repeater[1].checked = true;
				//console.log("mac_repeater[1.0]="+val[1]);
			} else {
				document.wireless_apcli.mac_repeater[0].checked = true;
				//console.log("mac_repeater[0]="+val[0]);
			}
		}
		

		str = "<!--#exec cmd="web 2860 nvram ApCliAuthMode"-->";
		val = str.split(";");
		if (val.length > apcliId)
			mode = val[apcliId];
		else
			mode = "OPEN";
		if (mode == "SHARED")
			document.wireless_apcli.apcli_mode.options.selectedIndex = 1;
		else if (mode == "WPAPSK")
			document.wireless_apcli.apcli_mode.options.selectedIndex = 2;
		else if (mode == "WPA2PSK")
			document.wireless_apcli.apcli_mode.options.selectedIndex = 3;
		else
			document.wireless_apcli.apcli_mode.options.selectedIndex = 0;
	
		SecurityModeSwitch(); //TODO need check

		str ="<!--#exec cmd="web 2860 nvram ApCliEncrypType"-->";
		val = str.split(";");
		if (val.length > apcliId)
			enc = val[apcliId];
		else
			enc = "NONE";
		if (enc == "WEP")
			document.wireless_apcli.apcli_enc.options.selectedIndex = 0;
		else if (enc == "TKIP")
			document.wireless_apcli.apcli_enc.options.selectedIndex = 0;
		else if (enc == "AES")
			document.wireless_apcli.apcli_enc.options.selectedIndex = 1;
		else
			document.wireless_apcli.apcli_enc.options.selectedIndex = 1;
		EncryptModeSwitch();

		str = "<!--#exec cmd="web 2860 nvram ApCliDefaultKeyID"-->";
		val = str.split(";");
		if (val.length > apcliId)
			keyid = val[apcliId];
		else
			keyid = 1;

		str = "<!--#exec cmd="web 2860 nvram ApCliKey1Type"-->";
		val = str.split(";");
		if (val.length > apcliId)
			key1type = val[apcliId];
		else
			key1type = 1;
		str = "<!--#exec cmd="web 2860 nvram ApCliKey2Type"-->";
		val = str.split(";");
		if (val.length > apcliId)
			key2type = val[apcliId];
		else
			key2type = 1;
		str = "<!--#exec cmd="web 2860 nvram ApCliKey3Type"-->";
		val = str.split(";");
		if (val.length > apcliId)
			key3type = val[apcliId];
		else
			key3type = 1;
		str = "<!--#exec cmd="web 2860 nvram ApCliKey4Type"-->";
		val = str.split(";");
		if (val.length > apcliId)
			key4type = val[apcliId];
		else
			key4type = 1;

		if (enc == "WEP") {
			document.wireless_apcli.apcli_default_key.options.selectedIndex = 1*keyid-1;
			if (key1type == "1")
				document.wireless_apcli.apcli_key1type.options.selectedIndex = 0;
			else
				document.wireless_apcli.apcli_key1type.options.selectedIndex = 1;
			if (key2type == "1")
				document.wireless_apcli.apcli_key2type.options.selectedIndex = 0;
			else
				document.wireless_apcli.apcli_key2type.options.selectedIndex = 1;
			if (key3type == "1")
				document.wireless_apcli.apcli_key3type.options.selectedIndex = 0;
			else
				document.wireless_apcli.apcli_key3type.options.selectedIndex = 1;
			if (key4type == "1")
				document.wireless_apcli.apcli_key4type.options.selectedIndex = 0;
			else
				document.wireless_apcli.apcli_key4type.options.selectedIndex = 1;
		} else if (enc == "TKIP" || enc == "AES") {
			if (apcliId == 0)
				document.wireless_apcli.apcli_wpapsk.value = "<!--#exec cmd="web 2860 nvram ApCliWPAPSK"-->";
			else if (apcliId == 1) 
				document.wireless_apcli.apcli_wpapsk.value = "<!--#exec cmd="web 2860 nvram ApCliWPAPSK1"-->";
			else if (apcliId == 2) 
				document.wireless_apcli.apcli_wpapsk.value = "<!--#exec cmd="web 2860 nvram ApCliWPAPSK2"-->";
			else
				document.wireless_apcli.apcli_wpapsk.value = "<!--#exec cmd="web 2860 nvram ApCliWPAPSK"-->";
		}

//		initSSIDList();
//		UpdateMBSSIDList();		

//		dbdc_ap_configured();
	} else {
		display("none", "div_ssid_choice");
		display("none", "apcli_dbdc_intro");
		document.wireless_apcli.ssidIndex.disabled = true;
	
		document.wireless_apcli.apcli_ssid.value = "<!--#exec cmd="web 2860 nvram ApCliSsid"-->";
		document.wireless_apcli.apcli_bssid.value = "<!--#exec cmd="web 2860 nvram ApCliBssid"-->";
		document.wireless_apcli.apcli_key1.value = "<!--#exec cmd="web 2860 nvram ApCliKey1Str"-->";
		document.wireless_apcli.apcli_key2.value = "<!--#exec cmd="web 2860 nvram ApCliKey2Str"-->";
		document.wireless_apcli.apcli_key3.value = "<!--#exec cmd="web 2860 nvram ApCliKey3Str"-->";
		document.wireless_apcli.apcli_key4.value = "<!--#exec cmd="web 2860 nvram ApCliKey4Str"-->";
		if (mode == "SHARED")
			document.wireless_apcli.apcli_mode.options.selectedIndex = 1;
		else if (mode == "WPAPSK")
			document.wireless_apcli.apcli_mode.options.selectedIndex = 2;
		else if (mode == "WPA2PSK")
			document.wireless_apcli.apcli_mode.options.selectedIndex = 3;
		else
			document.wireless_apcli.apcli_mode.options.selectedIndex = 0;
	
		SecurityModeSwitch();
		if (enc == "WEP")
			document.wireless_apcli.apcli_enc.options.selectedIndex = 0;
		else if (enc == "TKIP")
			document.wireless_apcli.apcli_enc.options.selectedIndex = 0;
		else if (enc == "AES")
			document.wireless_apcli.apcli_enc.options.selectedIndex = 1;
		else
			document.wireless_apcli.apcli_enc.options.selectedIndex = 1;
		EncryptModeSwitch();
		if (enc == "WEP") {
			document.wireless_apcli.apcli_default_key.options.selectedIndex = 1*keyid-1;
			if (key1type == "1")
				document.wireless_apcli.apcli_key1type.options.selectedIndex = 0;
			else
				document.wireless_apcli.apcli_key1type.options.selectedIndex = 1;
			if (key2type == "1")
				document.wireless_apcli.apcli_key2type.options.selectedIndex = 0;
			else
				document.wireless_apcli.apcli_key2type.options.selectedIndex = 1;
			if (key3type == "1")
				document.wireless_apcli.apcli_key3type.options.selectedIndex = 0;
			else
				document.wireless_apcli.apcli_key3type.options.selectedIndex = 1;
			if (key4type == "1")
				document.wireless_apcli.apcli_key4type.options.selectedIndex = 0;
			else
				document.wireless_apcli.apcli_key4type.options.selectedIndex = 1;
		} else if (enc == "TKIP" || enc == "AES") {
			document.wireless_apcli.apcli_wpapsk.value = "<!--#exec cmd="web 2860 nvram ApCliWPAPSK"-->";
		}

		var mac_repeater = "<!--#exec cmd="web 2860 nvram MACRepeaterEn"-->";
		if (mac_repeater == "1")
			document.wireless_apcli.mac_repeater[1].checked = true;
		else
			document.wireless_apcli.mac_repeater[0].checked = true;
	}
*/
//Above is for Registrar reference only.

}

function CheckHex(str)
{
	var len = str.length;

	for (var i = 0; i < str.length; i++) {
		if ((str.charAt(i) >= '0' && str.charAt(i) <= '9') ||
				(str.charAt(i) >= 'a' && str.charAt(i) <= 'f') ||
				(str.charAt(i) >= 'A' && str.charAt(i) <= 'F')) {
			continue;
		}
		else
			return false;
	}
	return true;
}

function CheckInjection(str)
{
	var len = str.length;
	for (var i = 0; i < str.length; i++) {
		if (str.charAt(i) == ';' || str.charAt(i) == ',' ||
				str.charAt(i) == '\r' || str.charAt(i) == '\n') {
			return false;
		}
		else
			continue;
	}
	return true;
}

function CheckWep()
{
	var defaultid = 1*document.wireless_apcli.apcli_default_key.value;
	if (document.wireless_apcli.apcli_enc.value == "WEP") {
		if (eval("document.wireless_apcli.apcli_key"+defaultid).value.length == 0) {
			alert('Please input wep key'+defaultid+'!');
			eval("document.wireless_apcli.apcli_key"+defaultid).focus();
			return false;
		}
	}

	if (document.wireless_apcli.apcli_key1type.options.selectedIndex == 0) {
		for (var i = 1; i < 5; i++) {
			var mykey = eval("document.wireless_apcli.apcli_key"+i);
			if (mykey.value.length != 0 && mykey.value.length != 5 && mykey.value.length != 13) {
				alert('Please input 5 or 13 characters of wep key'+i);
				mykey.focus();
				return false;
			}
			if (!CheckInjection(mykey.value)) {
				alert('Wep key'+i+' contains invalid characters!');
				mykey.focus();
				return false;
			}
		}
	}
	else {
		for (var i = 1; i < 5; i++) {
			var mykey = eval("document.wireless_apcli.apcli_key"+i);
			if (mykey.value.length != 0 && mykey.value.length != 10 && mykey.value.length != 26) {
				alert('Please input 10 or 26 characters of wep key'+i);
				mykey.focus();
				return false;
			}
			if (!CheckHex(wireless_apcli.apcli_key1.value)) {
				alert('Invalid Wep key'+i+' format!');
				mykey.focus();
				return false;
			}
		}
	}
}

function CheckWpa()
{
	if (document.wireless_apcli.apcli_wpapsk.value.length < 8) {
		alert("Pass Phrase length should be larger than 8!");
		document.wireless_apcli.apcli_wpapsk.focus();
		return false;
	}
	if (!CheckInjection(document.wireless_apcli.apcli_wpapsk.value)) {
		alert('Invalid characters in Pass Phrase.');
		document.wireless_apcli.apcli_wpapsk.focus();
		return false;
	}
	return true;
}

function CheckValue()
{
	if ((dbdc_enabled == "1") && (dbdcb == "1") && (dbdc_ap_configured() < 0)){
		return false;
	}

	if (document.wireless_apcli.apcli_ssid.value == '') {
		alert('empty SSID!');
		document.wireless_apcli.apcli_ssid.focus(); 
		return false;
	}

	if (document.wireless_apcli.apcli_bssid.value != '') {
		var re = /[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}/;
		if (!re.test(document.wireless_apcli.apcli_bssid.value)) {
			alert("BSSID format error!");
			document.wireless_apcli.apcli_bssid.focus(); 
			return false;
		}
	}

	if (document.wireless_apcli.apcli_mode.options.selectedIndex == 0)
		return CheckWep();
	else if (document.wireless_apcli.apcli_mode.options.selectedIndex == 1)
		return CheckWep();
	else if (document.wireless_apcli.apcli_mode.options.selectedIndex == 2)
		return CheckWpa();
	else if (document.wireless_apcli.apcli_mode.options.selectedIndex == 3)
		return CheckWpa();
	else {
		alert('Unknown Security Mode!');
		return false;
	}
}

function changeAP(selected_apcli_ssid)
{
	document.wireless_apcli.apcli_ssid.value = selected_apcli_ssid;
}

</script>

<body onLoad="initValue()">
<table class="body"><tr><td>

<h1>AP Client Feature</h1>
<p>You could configure AP Client WPS here.</p>
<hr />


<form method="post" name ="apcli_wps_config_form" action="/cgi-bin/wireless.cgi">
<!-- ==================  WPS Mode Config  ================== -->
<table id="div_wps_config" width="540" border="1" cellspacing="1" cellpadding="3" bordercolor="#9BABBD">
<tr>
  <td class="title" colspan="2">WPS Config</td>
</tr>
<tr id="div_wsc_enable_tr">
  <td class="head">AP Client WPS: </td>
  <td>
    <select id="wps_enable" name="wps_enable" size="1" onChange="enable_wps(this.value)">
<!-- Future use
      <option value="0" id="wps_disable_text">Disable</option> -->
      <option value="1" id="wps_enable_text" selected>Enable</option>
    </select>
<!-- Future use
    <input type="button" style="{width:120px;}" value="Apply" onClick="enable_wps(this.form.WPSEnable.value)"> &nbsp; &nbsp;-->
  </td>
</tr>
<tr id="div_wps_conf_mode_tr">
  <td class="head">WPS Role:
  </td>
  <td>
    <select name="wps_conf_mode" >
      <option value="enr1" selected>Enrolle</option>
<!-- Future use
      <option value="reg4">Registrar</option> -->
    </select>
  </td>
</tr>
<tr id="div_wps_pin">
  <td class="head">AP Clinet PIN:
  </td>
  <td>
    <input name="pin_code" value="123456" size="10" maxLength="9" readonly="1">
  </td>
</tr>
<tr id="div_wps_pin_action">
  <td class="head">PIN Action:
  </td>
  <td>
    <input type="button" value="Random New PINCode" id="gen_pin" name="gen_pin" onClick="on_gen_pincode_start(this.form.wps_enable.value)">
<!-- Future use
    <br><hr>
    <input type="button" value="Set Vendor PINCode" id="set_pin" name="set_pin" onClick="apcli_wps_set_pincode(this.form.WPSEnable.value)">-->
  </td>
</tr>
<tr>
	<td class="head" id="wps_mode_txt">WPS Mode</td>
	<td>
		<input name="wps_mode" id="wps_mode_pin" value="pin1" type="radio" checked onClick="on_wps_mode_change(this.value)"><font id="wps_mode_pin_txt">PIN &nbsp;</font>
		<input name="wps_mode" id="wps_mode_pbc" value="pbc2" type="radio" onClick="on_wps_mode_change(this.value)"><font id="wps_mode_pbc_txt">PBC &nbsp;</font>
	</td>
</tr>
<tr id="div_root_ap_info_tr">
  <td class="title" name="apcli_title" colspan="2">Root AP Info</td>
</tr>
<tr id="div_root_ap_ssid_tr">
  <td class="head">Root AP SSID</td>
  <td><input name="pin_ap_ssid" size=20 maxlength=32 value=""></td>
</tr>
<tr id="div_root_ap_mac_tr">
  <td class="head">Root AP MAC Address (Optional)</td>
  <td><input name="pin_ap_bssid" size=20 maxlength=17 value=""></td>
</tr>
<!--
<tr id="div_wps_enrolle_pin">
  <td class="head">Enrollee PIN:
  </td>
  <td>
    <input name="enrolle_pin" value="" size="10" maxLength="9">
  </td>
</tr>
-->
<tr id="div_wps_action">
  <td class="head">WPS Action:</td>
  <td>
    <input type="button" name="apcli_wps_start" value="WPS Start" onClick="on_apcli_wps_start(this.form.wps_conf_mode.value)">
    <input type="button"  style="{width:120px;}" value="Cancel" onClick="on_apcli_wps_cancel_start()">
    <input type="button"  style="{width:120px;}" value="SCAN_WPS" onClick="on_rescan_start('WPS')">
  </td>
</tr>
<tr id="div_addition_action">
  <td class="head">Other Action:</td>
  <td>
    <input type="button" name="additional_func" value="Get PINCode" onClick="on_get_pincode_start()">
    <input type="button" name="additional_func" value="Get Status&Profile" onClick="apcli_get_wps_status()">
    <input type="button" name="additional_func" value="Get Reg Info" onClick="apcli_get_wps_reg_info()">
    <br><hr>
    <input type="button"  style="{width:120px;}" value="SCAN" onClick="on_rescan_start('ALL');">
    <input type="button" name="additional_func" value="updateWPS" onClick="updateWPS()">
    <input type="button"  style="{width:120px;}" value="test_encode" onClick="ssid_encode_test(this.form.pin_ap_ssid.value)">
    <br><hr>
    <input type="button"  style="{width:120px;}" value="Waiting" onClick="show_waiting('ON')">
    <input type="button"  style="{width:120px;}" value="Not waiting" onClick="show_waiting('OFF')">
  </td>
</tr>
</tbody>
</table>
</form>

<!-- =============================== Registrar Settings ================================== -->
<!-- Future use
<form method=post name="wireless_apcli" action="/cgi-bin/wireless.cgi" onSubmit="return CheckValue()">
<table width="540" border="1" cellspacing="1" cellpadding="3" bordercolor="#9BABBD">
  <tr> 
    <td class="title" name="apcli_title" colspan="3">Registrar Settings</td>
  </tr>
  <tr> 
    <td class="head" colspan="2">SSID</td>
    <td><input name="apcli_ssid" size=20 maxlength=32 value=""></td>
  </tr>
  <tr> 
    <td class="head" colspan="2">MAC Address (Optional)</td>
    <td><input name="apcli_bssid" size=20 maxlength=17 value=""></td>
  </tr>
  <tr> 
    <td class="head" colspan="2">Security Mode</td>
    <td>
      <select name="apcli_mode" id="apcli_mode" size="1" onchange="SecurityModeSwitch(); EncryptModeSwitch();">
	<option value="OPEN">OPEN</option>
	<option value="SHARED">SHARED</option>
	<option value="WPAPSK">WPAPSK</option>
	<option value="WPA2PSK">WPA2PSK</option>
      </select>
    </td>
  </tr>
  <tr id="div_apcli_enc">
    <td class="head" colspan="2">Encryption Type</td>
    <td>
      <select name="apcli_enc" id="apcli_enc" size="1" onchange="EncryptModeSwitch()">
      </select>
    </td>
  </tr>
  <tr id="div_apcli_default_key">
    <td class="head" colspan="2">WEP Default Key</td>
    <td>
      <select name="apcli_default_key" id="apcli_default_key" size="1">
	<option value="1">Key 1</option>
	<option value="2">Key 2</option>
	<option value="3">Key 3</option>
	<option value="4">Key 4</option>
      </select>
    </td>
  </tr>
  <tr id="div_apcli_key1">
    <td class="head1" rowspan="4">WEP Keys</td>
    <td class="head2">WEP Key 1 :</td>
    <td>
      <input name="apcli_key1" id="apcli_key1" maxlength="26" value="">
      <select id="apcli_key1type" name="apcli_key1type"> 
        <option value="1">ASCII</option>
	<option value="0">Hex</option>
      </select>
    </td>
  </tr>
  <tr id="div_apcli_key2">
    <td class="head2">WEP Key 2 :</td>
    <td>
      <input name="apcli_key2" id="apcli_key2" maxlength="26" value="">
      <select id="apcli_key2type" name="apcli_key2type"> 
        <option value="1">ASCII</option>
	<option value="0">Hex</option>
      </select>
    </td>
  </tr>
  <tr id="div_apcli_key3">
    <td class="head2">WEP Key 3 :</td>
    <td>
      <input name="apcli_key3" id="apcli_key3" maxlength="26" value="">
      <select id="apcli_key3type" name="apcli_key3type"> 
        <option value="1">ASCII</option>
	<option value="0">Hex</option>
      </select>
    </td>
  </tr>
  <tr id="div_apcli_key4">
    <td class="head2">WEP Key 4 :</td>
    <td>
      <input name="apcli_key4" id="apcli_key4" maxlength="26" value="">
      <select id="apcli_key4type" name="apcli_key4type"> 
        <option value="1">ASCII</option>
	<option value="0">Hex</option>
      </select>
    </td>
  </tr>
  <tr id="div_apcli_wpapsk"> 
    <td class="head" colspan="2">Pass Phrase</td>
    <td><input type=text name="apcli_wpapsk" size=20 maxlength=64 value=""></td>
  </tr>
  <tr> 
    <td class="head" colspan="2">MAC Repeater</td>
    <td>
      <input type="radio" name="mac_repeater" value="0" checked><font id="apcliMACRepeaterEn">Disable&nbsp;</font>
      <input type="radio" name="mac_repeater" value="1"><font id="apcliMACRepeaterEn">Enable</font>
    </td>
  </tr>
</table>
</form>  
-->

<!--<table id="div_wps_info" name="div_wps_info" border="1" cellpadding="1" cellspacing="1" width="90%" style="visibility: hidden;">-->
<table id="div_wps_info" name="div_wps_info" border="1" cellpadding="1" cellspacing="1" width="540" style="visibility: visible;">
  <tbody>
  <tr><td colspan="2" class="title" id="wps_info_txt">WPS Status</td></tr>
  <tr><td colspan="2"> 
  <textarea name="wps_info" id="wps_info" cols="70" rows="4" wrap="off" readonly="1"></textarea>
  </td></tr>
  </tbody>
</table>

<!-- =============================== Waiting info ================================== -->
<table name="div_waiting_img" id="div_waiting_img" width="600" style="visibility: hidden;">
  <tr align="center">
    <td><img src="/graphics/ajax-loader.gif"></td>
  </tr>
</table>

<!-- =============================== AP List ================================== -->
<table name="aplist" id="aplist" width="600" border="1" cellpadding="2" cellspacing="1">
  <tr> 
    <td class="title" colspan="10">Site Survey</td>
  </tr>
  <tr> 
    <td class="head" style="width:6%">No</td>
    <td class="head" style="width:6%">Ch</td>
    <td class="head">SSID</td>
    <td class="head">BSSID</td>
    <td class="head">Security</td>
    <td class="head">Signal(%)</td>
    <td class="head">W-Moe</td>
    <td class="head">ExtCh</td>
    <td class="head">NT</td>
    <td class="head">WPS</td>
  </tr>
  <!--exec cmd="web 2860 wifi ApcliScan 1 WPS"-->
</table>


</td></tr></table>
</body>
<head>
<meta http-equiv="Pragma" content="no-cache">
<meta http-equiv="Expires" content="-1">
</head>
</html>

