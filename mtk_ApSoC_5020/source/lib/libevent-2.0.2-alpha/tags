!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run aclocal-1.10$/;"	m
ACLOCAL	include/Makefile	/^ACLOCAL = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run aclocal-1.10$/;"	m
ACLOCAL	sample/Makefile	/^ACLOCAL = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run aclocal-1.10$/;"	m
ACLOCAL	test/Makefile	/^ACLOCAL = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run aclocal-1.10$/;"	m
ACLOCAL_AMFLAGS	Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	include/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	sample/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	test/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ALL_DATA_READ	http-internal.h	/^	ALL_DATA_READ = 1,$/;"	e	enum:message_read_status
AMTAR	Makefile	/^AMTAR = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run tar$/;"	m
AMTAR	include/Makefile	/^AMTAR = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run tar$/;"	m
AMTAR	sample/Makefile	/^AMTAR = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run tar$/;"	m
AMTAR	test/Makefile	/^AMTAR = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run tar$/;"	m
AM_CFLAGS	sample/Makefile	/^AM_CFLAGS = -I$(top_srcdir) -I$(top_srcdir)\/compat -I$(top_srcdir)\/include$/;"	m
AM_CFLAGS	test/Makefile	/^AM_CFLAGS = -I$(top_srcdir) -I$(top_srcdir)\/compat -I$(top_srcdir)\/include$/;"	m
APPEND16	evdns.c	1556;"	d	file:
APPEND16	evdns.c	2099;"	d	file:
APPEND32	evdns.c	1563;"	d	file:
APPEND32	evdns.c	2100;"	d	file:
APPEND_CHAIN	buffer.c	566;"	d	file:
AR	Makefile	/^AR = mipsel-linux-ar$/;"	m
AR	include/Makefile	/^AR = mipsel-linux-ar$/;"	m
AR	sample/Makefile	/^AR = mipsel-linux-ar$/;"	m
AR	test/Makefile	/^AR = mipsel-linux-ar$/;"	m
ASSERT_EVBUFFER_LOCKED	evbuffer-internal.h	200;"	d
ASSERT_EVBUFFER_UNLOCKED	evbuffer-internal.h	205;"	d
ASSERT_LOCKED	evdns.c	395;"	d	file:
ASSERT_LOCKED	evdns.c	412;"	d	file:
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run autoconf$/;"	m
AUTOCONF	include/Makefile	/^AUTOCONF = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run autoconf$/;"	m
AUTOCONF	sample/Makefile	/^AUTOCONF = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run autoconf$/;"	m
AUTOCONF	test/Makefile	/^AUTOCONF = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run autoheader$/;"	m
AUTOHEADER	include/Makefile	/^AUTOHEADER = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run autoheader$/;"	m
AUTOHEADER	sample/Makefile	/^AUTOHEADER = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run autoheader$/;"	m
AUTOHEADER	test/Makefile	/^AUTOHEADER = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run automake-1.10$/;"	m
AUTOMAKE	include/Makefile	/^AUTOMAKE = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run automake-1.10$/;"	m
AUTOMAKE	sample/Makefile	/^AUTOMAKE = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run automake-1.10$/;"	m
AUTOMAKE	test/Makefile	/^AUTOMAKE = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run automake-1.10$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = foreign$/;"	m
AUTOMAKE_OPTIONS	include/Makefile	/^AUTOMAKE_OPTIONS = foreign$/;"	m
AUTOMAKE_OPTIONS	sample/Makefile	/^AUTOMAKE_OPTIONS = foreign no-dependencies$/;"	m
AUTOMAKE_OPTIONS	test/Makefile	/^AUTOMAKE_OPTIONS = foreign no-dependencies$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
AWK	include/Makefile	/^AWK = gawk$/;"	m
AWK	sample/Makefile	/^AWK = gawk$/;"	m
AWK	test/Makefile	/^AWK = gawk$/;"	m
AddDeclaration	event_rpcgen.py	/^    def AddDeclaration(self, funcname):$/;"	m	class:EntryArray
AddEntry	event_rpcgen.py	/^    def AddEntry(self, entry):$/;"	m	class:Struct
AddFuncName	event_rpcgen.py	/^    def AddFuncName(self):$/;"	m	class:Entry
Array	event_rpcgen.py	/^    def Array(self):$/;"	m	class:Entry
AssignDeclaration	event_rpcgen.py	/^    def AssignDeclaration(self, funcname):$/;"	m	class:Entry
AssignDeclaration	event_rpcgen.py	/^    def AssignDeclaration(self, funcname):$/;"	m	class:EntryArray
AssignDeclaration	event_rpcgen.py	/^    def AssignDeclaration(self, funcname):$/;"	m	class:EntryBytes
AssignDeclaration	event_rpcgen.py	/^    def AssignDeclaration(self, funcname):$/;"	m	class:EntryVarBytes
AssignFuncName	event_rpcgen.py	/^    def AssignFuncName(self):$/;"	m	class:Entry
BAD	test/regress_util.c	/^enum entry_status { NORMAL, CANONICAL, BAD };$/;"	e	enum:entry_status	file:
BASIC	test/regress.h	86;"	d
BASIC_REQUEST_BODY	test/regress_http.c	/^static char const BASIC_REQUEST_BODY[] = "This is funny";$/;"	v	file:
BEV_CTRL_GET_FD	bufferevent-internal.h	/^	BEV_CTRL_GET_FD,$/;"	e	enum:bufferevent_ctrl_op
BEV_CTRL_GET_UNDERLYING	bufferevent-internal.h	/^	BEV_CTRL_GET_UNDERLYING,$/;"	e	enum:bufferevent_ctrl_op
BEV_CTRL_SET_FD	bufferevent-internal.h	/^	BEV_CTRL_SET_FD,$/;"	e	enum:bufferevent_ctrl_op
BEV_ERROR	include/event2/bufferevent.h	/^	BEV_ERROR = 2$/;"	e	enum:bufferevent_filter_result
BEV_EVENT_CONNECTED	include/event2/bufferevent.h	81;"	d
BEV_EVENT_EOF	include/event2/bufferevent.h	78;"	d
BEV_EVENT_ERROR	include/event2/bufferevent.h	79;"	d
BEV_EVENT_READING	include/event2/bufferevent.h	76;"	d
BEV_EVENT_TIMEOUT	include/event2/bufferevent.h	80;"	d
BEV_EVENT_WRITING	include/event2/bufferevent.h	77;"	d
BEV_FINISHED	include/event2/bufferevent.h	/^	BEV_FINISHED = 2$/;"	e	enum:bufferevent_flush_mode
BEV_FLUSH	include/event2/bufferevent.h	/^	BEV_FLUSH = 1,$/;"	e	enum:bufferevent_flush_mode
BEV_LOCK	bufferevent-internal.h	213;"	d
BEV_NEED_MORE	include/event2/bufferevent.h	/^	BEV_NEED_MORE = 1,$/;"	e	enum:bufferevent_filter_result
BEV_NORMAL	include/event2/bufferevent.h	/^	BEV_NORMAL = 0,$/;"	e	enum:bufferevent_flush_mode
BEV_OK	include/event2/bufferevent.h	/^	BEV_OK = 0,$/;"	e	enum:bufferevent_filter_result
BEV_OPT_CLOSE_ON_FREE	include/event2/bufferevent.h	/^	BEV_OPT_CLOSE_ON_FREE = (1<<0),$/;"	e	enum:bufferevent_options
BEV_OPT_DEFER_CALLBACKS	include/event2/bufferevent.h	/^	BEV_OPT_DEFER_CALLBACKS = (1<<2)$/;"	e	enum:bufferevent_options
BEV_OPT_THREADSAFE	include/event2/bufferevent.h	/^	BEV_OPT_THREADSAFE = (1<<1),$/;"	e	enum:bufferevent_options
BEV_RESET_GENERIC_READ_TIMEOUT	bufferevent-internal.h	195;"	d
BEV_RESET_GENERIC_WRITE_TIMEOUT	bufferevent-internal.h	202;"	d
BEV_UNLOCK	bufferevent-internal.h	220;"	d
BEV_UPCAST	bufferevent-internal.h	210;"	d
BUILT_SOURCES	Makefile	/^BUILT_SOURCES = event-config.h$/;"	m
BUILT_SOURCES	test/Makefile	/^BUILT_SOURCES = regress.gen.c regress.gen.h$/;"	m
BodyPreamble	event_rpcgen.py	/^    def BodyPreamble(self, name, header_file):$/;"	m	class:CCodeGenerator
CANONICAL	test/regress_util.c	/^enum entry_status { NORMAL, CANONICAL, BAD };$/;"	e	enum:entry_status	file:
CC	Makefile	/^CC = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc$/;"	m
CC	include/Makefile	/^CC = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc$/;"	m
CC	sample/Makefile	/^CC = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc$/;"	m
CC	test/Makefile	/^CC = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	include/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	sample/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	test/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CCLD	sample/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	test/Makefile	/^CCLD = $(CC)$/;"	m
CCodeGenerator	event_rpcgen.py	/^class CCodeGenerator:$/;"	c
CFLAGS	Makefile	/^CFLAGS =  -Wall -fno-strict-aliasing$/;"	m
CFLAGS	include/Makefile	/^CFLAGS =  -Wall -fno-strict-aliasing$/;"	m
CFLAGS	sample/Makefile	/^CFLAGS =  -Wall -fno-strict-aliasing$/;"	m
CFLAGS	test/Makefile	/^CFLAGS =  -Wall -fno-strict-aliasing$/;"	m
CHAIN_PINNED	buffer.c	137;"	d	file:
CHAIN_PINNED_R	buffer.c	138;"	d	file:
CHAIN_SPACE_LEN	buffer.c	134;"	d	file:
CHAIN_SPACE_PTR	buffer.c	133;"	d	file:
CHUNKS	test/regress_http.c	/^static char const* const CHUNKS[] = {$/;"	v	file:
CIRCLEQ_EMPTY	compat/sys/queue.h	401;"	d
CIRCLEQ_END	compat/sys/queue.h	398;"	d
CIRCLEQ_ENTRY	compat/sys/queue.h	387;"	d
CIRCLEQ_FIRST	compat/sys/queue.h	396;"	d
CIRCLEQ_FOREACH	compat/sys/queue.h	404;"	d
CIRCLEQ_FOREACH_REVERSE	compat/sys/queue.h	409;"	d
CIRCLEQ_HEAD	compat/sys/queue.h	378;"	d
CIRCLEQ_HEAD_INITIALIZER	compat/sys/queue.h	384;"	d
CIRCLEQ_INIT	compat/sys/queue.h	417;"	d
CIRCLEQ_INSERT_AFTER	compat/sys/queue.h	422;"	d
CIRCLEQ_INSERT_BEFORE	compat/sys/queue.h	432;"	d
CIRCLEQ_INSERT_HEAD	compat/sys/queue.h	442;"	d
CIRCLEQ_INSERT_TAIL	compat/sys/queue.h	452;"	d
CIRCLEQ_LAST	compat/sys/queue.h	397;"	d
CIRCLEQ_NEXT	compat/sys/queue.h	399;"	d
CIRCLEQ_PREV	compat/sys/queue.h	400;"	d
CIRCLEQ_REMOVE	compat/sys/queue.h	462;"	d
CIRCLEQ_REPLACE	compat/sys/queue.h	475;"	d
CLASS_INET	evdns.c	173;"	d	file:
CLOCK_PROF	compat/sys/_time.h	156;"	d
CLOCK_REALTIME	compat/sys/_time.h	154;"	d
CLOCK_VIRTUAL	compat/sys/_time.h	155;"	d
CLOSE_SOCKET	evdns.c	415;"	d	file:
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	sample/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	test/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES = libevent.pc$/;"	m
CONFIG_CLEAN_FILES	include/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	sample/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	test/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	include/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	sample/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	test/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFOPTS	makefile	/^CONFOPTS= --host=mipsel-linux --with-event$/;"	m
COPY_CHAIN	buffer.c	557;"	d	file:
CORE_SRC	Makefile	/^CORE_SRC = event.c buffer.c \\$/;"	m
CPP	Makefile	/^CPP = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc -E$/;"	m
CPP	include/Makefile	/^CPP = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc -E$/;"	m
CPP	sample/Makefile	/^CPP = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc -E$/;"	m
CPP	test/Makefile	/^CPP = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	include/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	sample/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	test/Makefile	/^CPPFLAGS = $/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	include/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	sample/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	test/Makefile	/^CTAGS = ctags$/;"	m
CXX	Makefile	/^CXX = mipsel-linux-g++$/;"	m
CXX	include/Makefile	/^CXX = mipsel-linux-g++$/;"	m
CXX	sample/Makefile	/^CXX = mipsel-linux-g++$/;"	m
CXX	test/Makefile	/^CXX = mipsel-linux-g++$/;"	m
CXXCPP	Makefile	/^CXXCPP = mipsel-linux-g++ -E$/;"	m
CXXCPP	include/Makefile	/^CXXCPP = mipsel-linux-g++ -E$/;"	m
CXXCPP	sample/Makefile	/^CXXCPP = mipsel-linux-g++ -E$/;"	m
CXXCPP	test/Makefile	/^CXXCPP = mipsel-linux-g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	include/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	sample/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	test/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	include/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	sample/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	test/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	include/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	sample/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	test/Makefile	/^CYGPATH_W = echo$/;"	m
CodeAdd	event_rpcgen.py	/^    def CodeAdd(self):$/;"	m	class:EntryArray
CodeArrayAdd	event_rpcgen.py	/^    def CodeArrayAdd(self, varname, value):$/;"	m	class:EntryBytes
CodeArrayAdd	event_rpcgen.py	/^    def CodeArrayAdd(self, varname, value):$/;"	m	class:EntryInt
CodeArrayAdd	event_rpcgen.py	/^    def CodeArrayAdd(self, varname, value):$/;"	m	class:EntryString
CodeArrayAdd	event_rpcgen.py	/^    def CodeArrayAdd(self, varname, value):$/;"	m	class:EntryStruct
CodeArrayAdd	event_rpcgen.py	/^    def CodeArrayAdd(self, varname, value):$/;"	m	class:EntryVarBytes
CodeArrayAssign	event_rpcgen.py	/^    def CodeArrayAssign(self, var, srcvar):$/;"	m	class:EntryStruct
CodeArrayAssign	event_rpcgen.py	/^    def CodeArrayAssign(self, varname, srcvar):$/;"	m	class:EntryInt
CodeArrayAssign	event_rpcgen.py	/^    def CodeArrayAssign(self, varname, srcvar):$/;"	m	class:EntryString
CodeArrayFree	event_rpcgen.py	/^    def CodeArrayFree(self, var):$/;"	m	class:EntryInt
CodeArrayFree	event_rpcgen.py	/^    def CodeArrayFree(self, var):$/;"	m	class:EntryStruct
CodeArrayFree	event_rpcgen.py	/^    def CodeArrayFree(self, varname):$/;"	m	class:EntryString
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:Entry
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:EntryArray
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:EntryBytes
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:EntryString
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:EntryStruct
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:EntryVarBytes
CodeBase	event_rpcgen.py	/^    def CodeBase(self):$/;"	m	class:Entry
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:Entry
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:EntryArray
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:EntryBytes
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:EntryString
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:EntryStruct
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:EntryVarBytes
CodeComplete	event_rpcgen.py	/^    def CodeComplete(self, structname, var_name):$/;"	m	class:Entry
CodeComplete	event_rpcgen.py	/^    def CodeComplete(self, structname, var_name):$/;"	m	class:EntryArray
CodeComplete	event_rpcgen.py	/^    def CodeComplete(self, structname, var_name):$/;"	m	class:EntryStruct
CodeFilename	event_rpcgen.py	/^    def CodeFilename(self, filename):$/;"	m	class:CCodeGenerator
CodeFree	event_rpcgen.py	/^    def CodeFree(self, name):$/;"	m	class:Entry
CodeFree	event_rpcgen.py	/^    def CodeFree(self, name):$/;"	m	class:EntryString
CodeFree	event_rpcgen.py	/^    def CodeFree(self, name):$/;"	m	class:EntryStruct
CodeFree	event_rpcgen.py	/^    def CodeFree(self, name):$/;"	m	class:EntryVarBytes
CodeFree	event_rpcgen.py	/^    def CodeFree(self, structname):$/;"	m	class:EntryArray
CodeGet	event_rpcgen.py	/^    def CodeGet(self):$/;"	m	class:Entry
CodeGet	event_rpcgen.py	/^    def CodeGet(self):$/;"	m	class:EntryArray
CodeGet	event_rpcgen.py	/^    def CodeGet(self):$/;"	m	class:EntryBytes
CodeGet	event_rpcgen.py	/^    def CodeGet(self):$/;"	m	class:EntryStruct
CodeGet	event_rpcgen.py	/^    def CodeGet(self):$/;"	m	class:EntryVarBytes
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryArray
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryBytes
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryInt
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryString
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryStruct
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryVarBytes
CodeMakeInitalize	event_rpcgen.py	/^    def CodeMakeInitalize(self, varname):$/;"	m	class:EntryString
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryArray
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryBytes
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryInt
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryString
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryStruct
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryVarBytes
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryArray
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryBytes
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryInt
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryString
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryStruct
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryVarBytes
CommandLine	event_rpcgen.py	/^class CommandLine:$/;"	c
DATA	Makefile	/^DATA = $(pkgconfig_DATA)$/;"	m
DATA_CORRUPTED	http-internal.h	/^	DATA_CORRUPTED = -1,$/;"	e	enum:message_read_status
DECLARE_CTYPE_FN	util-internal.h	92;"	d
DECODE_INT_INTERNAL	event_tagging.c	277;"	d	file:
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_INCLUDES	sample/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	test/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_NFDS	evport.c	83;"	d	file:
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	include/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	sample/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	test/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	include/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	sample/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	test/Makefile	/^DEPDIR = .deps$/;"	m
DISTCLEANFILES	Makefile	/^DISTCLEANFILES = *~ event-config.h libevent.pc$/;"	m
DISTCLEANFILES	sample/Makefile	/^DISTCLEANFILES = *~$/;"	m
DISTCLEANFILES	test/Makefile	/^DISTCLEANFILES = *~$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	include/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	sample/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	test/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = README $(am__configure_deps) $(include_HEADERS) \\$/;"	m
DIST_COMMON	include/Makefile	/^DIST_COMMON = $(nobase_include_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	sample/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	test/Makefile	/^DIST_COMMON = $(noinst_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__libevent_la_SOURCES_DIST) \\$/;"	m
DIST_SOURCES	include/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	sample/Makefile	/^DIST_SOURCES = event-test.c signal-test.c time-test.c$/;"	m
DIST_SOURCES	test/Makefile	/^DIST_SOURCES = $(bench_SOURCES) $(bench_cascade_SOURCES) \\$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DNS_ERR_CANCEL	include/event2/dns.h	193;"	d
DNS_ERR_FORMAT	include/event2/dns.h	173;"	d
DNS_ERR_NONE	include/event2/dns.h	171;"	d
DNS_ERR_NOTEXIST	include/event2/dns.h	178;"	d
DNS_ERR_NOTIMPL	include/event2/dns.h	180;"	d
DNS_ERR_REFUSED	include/event2/dns.h	183;"	d
DNS_ERR_SERVERFAILED	include/event2/dns.h	176;"	d
DNS_ERR_SHUTDOWN	include/event2/dns.h	191;"	d
DNS_ERR_TIMEOUT	include/event2/dns.h	189;"	d
DNS_ERR_TRUNCATED	include/event2/dns.h	185;"	d
DNS_ERR_UNKNOWN	include/event2/dns.h	187;"	d
DNS_IPv4_A	include/event2/dns.h	195;"	d
DNS_IPv6_AAAA	include/event2/dns.h	197;"	d
DNS_LEGACY	test/regress_dns.c	402;"	d	file:
DNS_NO_SEARCH	include/event2/dns.h	512;"	d
DNS_OPTIONS_ALL	include/event2/dns.h	204;"	d
DNS_OPTION_MISC	include/event2/dns.h	203;"	d
DNS_OPTION_NAMESERVERS	include/event2/dns.h	202;"	d
DNS_OPTION_SEARCH	include/event2/dns.h	201;"	d
DNS_PTR	include/event2/dns.h	196;"	d
DNS_QUERY_NO_SEARCH	include/event2/dns.h	199;"	d
DNS_USE_CPU_CLOCK_FOR_ID	config.h	11;"	d
DNS_USE_FTIME_FOR_ID	WIN32-Code/config.h	8;"	d
DST_AUST	compat/sys/_time.h	72;"	d
DST_CAN	compat/sys/_time.h	76;"	d
DST_EET	compat/sys/_time.h	75;"	d
DST_MET	compat/sys/_time.h	74;"	d
DST_NONE	compat/sys/_time.h	70;"	d
DST_USA	compat/sys/_time.h	71;"	d
DST_WET	compat/sys/_time.h	73;"	d
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryArray
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryBytes
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryInt
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryString
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryStruct
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryVarBytes
E	evutil.c	269;"	d	file:
E	evutil.c	330;"	d	file:
ECHO	Makefile	/^ECHO = echo$/;"	m
ECHO	include/Makefile	/^ECHO = echo$/;"	m
ECHO	sample/Makefile	/^ECHO = echo$/;"	m
ECHO	test/Makefile	/^ECHO = echo$/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	include/Makefile	/^ECHO_C = $/;"	m
ECHO_C	sample/Makefile	/^ECHO_C = $/;"	m
ECHO_C	test/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	include/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	sample/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	test/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	include/Makefile	/^ECHO_T = $/;"	m
ECHO_T	sample/Makefile	/^ECHO_T = $/;"	m
ECHO_T	test/Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	include/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	sample/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	test/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ENCODE_INT_INTERNAL	event_tagging.c	91;"	d	file:
END_OF_GROUPS	test/tinytest.h	65;"	d
END_OF_TESTCASES	test/tinytest.h	58;"	d
ERR_FORMAT	http.c	1957;"	d	file:
ERR_FORMAT	http.c	1976;"	d	file:
ERR_FORMAT	http.c	2340;"	d	file:
ERR_FORMAT	http.c	2359;"	d	file:
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	include/Makefile	/^ETAGS = etags$/;"	m
ETAGS	sample/Makefile	/^ETAGS = etags$/;"	m
ETAGS	test/Makefile	/^ETAGS = etags$/;"	m
EVBASE_ACQUIRE_LOCK	evthread-internal.h	123;"	d
EVBASE_ACQUIRE_LOCK	evthread-internal.h	147;"	d
EVBASE_IN_THREAD	evthread-internal.h	146;"	d
EVBASE_IN_THREAD	evthread-internal.h	56;"	d
EVBASE_RELEASE_LOCK	evthread-internal.h	130;"	d
EVBASE_RELEASE_LOCK	evthread-internal.h	148;"	d
EVBASE_USING_LOCKS	evthread-internal.h	47;"	d
EVBUFFER_CB_ENABLED	include/event2/buffer.h	577;"	d
EVBUFFER_CB_INTERNAL_FLAGS	buffer.c	120;"	d	file:
EVBUFFER_CB_OBSOLETE	buffer.c	130;"	d	file:
EVBUFFER_CB_USER_FLAGS	buffer.c	118;"	d	file:
EVBUFFER_CHAIN_EXTRA	evbuffer-internal.h	197;"	d
EVBUFFER_CHAIN_MAX_AUTO_SIZE	buffer.c	1154;"	d	file:
EVBUFFER_CHAIN_SIZE	evbuffer-internal.h	195;"	d
EVBUFFER_DANGLING	evbuffer-internal.h	169;"	d
EVBUFFER_DATA	include/event2/buffer_compat.h	107;"	d
EVBUFFER_EOF	include/event2/bufferevent_compat.h	87;"	d
EVBUFFER_EOL_ANY	include/event2/buffer.h	/^	EVBUFFER_EOL_ANY,$/;"	e	enum:evbuffer_eol_style
EVBUFFER_EOL_CRLF	include/event2/buffer.h	/^	EVBUFFER_EOL_CRLF,$/;"	e	enum:evbuffer_eol_style
EVBUFFER_EOL_CRLF_STRICT	include/event2/buffer.h	/^	EVBUFFER_EOL_CRLF_STRICT,$/;"	e	enum:evbuffer_eol_style
EVBUFFER_EOL_LF	include/event2/buffer.h	/^	EVBUFFER_EOL_LF$/;"	e	enum:evbuffer_eol_style
EVBUFFER_ERROR	include/event2/bufferevent_compat.h	88;"	d
EVBUFFER_IMMUTABLE	evbuffer-internal.h	161;"	d
EVBUFFER_INITIAL_LENGTH	test/regress_buffer.c	611;"	d	file:
EVBUFFER_INPUT	include/event2/bufferevent_compat.h	92;"	d
EVBUFFER_LENGTH	include/event2/buffer_compat.h	105;"	d
EVBUFFER_LOCK	evbuffer-internal.h	219;"	d
EVBUFFER_LOCK2	evbuffer-internal.h	230;"	d
EVBUFFER_MAX_READ	buffer.c	1480;"	d	file:
EVBUFFER_MEM_PINNED_ANY	evbuffer-internal.h	166;"	d
EVBUFFER_MEM_PINNED_R	evbuffer-internal.h	164;"	d
EVBUFFER_MEM_PINNED_W	evbuffer-internal.h	165;"	d
EVBUFFER_MMAP	evbuffer-internal.h	158;"	d
EVBUFFER_OUTPUT	include/event2/bufferevent_compat.h	94;"	d
EVBUFFER_PTR_ADD	include/event2/buffer.h	/^	EVBUFFER_PTR_ADD$/;"	e	enum:evbuffer_ptr_how
EVBUFFER_PTR_SET	include/event2/buffer.h	/^	EVBUFFER_PTR_SET,$/;"	e	enum:evbuffer_ptr_how
EVBUFFER_READ	include/event2/bufferevent_compat.h	85;"	d
EVBUFFER_REFERENCE	evbuffer-internal.h	160;"	d
EVBUFFER_SENDFILE	evbuffer-internal.h	159;"	d
EVBUFFER_TIMEOUT	include/event2/bufferevent_compat.h	89;"	d
EVBUFFER_UNLOCK	evbuffer-internal.h	224;"	d
EVBUFFER_UNLOCK2	evbuffer-internal.h	237;"	d
EVBUFFER_WRITE	include/event2/bufferevent_compat.h	86;"	d
EVCON_CONNECTING	http-internal.h	/^	EVCON_CONNECTING,	\/**< tries to currently connect *\/$/;"	e	enum:evhttp_connection_state
EVCON_DISCONNECTED	http-internal.h	/^	EVCON_DISCONNECTED,	\/**< not currently connected not trying either*\/$/;"	e	enum:evhttp_connection_state
EVCON_HTTP_BUFFER_ERROR	http-internal.h	/^	EVCON_HTTP_BUFFER_ERROR,$/;"	e	enum:evhttp_connection_error
EVCON_HTTP_EOF	http-internal.h	/^	EVCON_HTTP_EOF,$/;"	e	enum:evhttp_connection_error
EVCON_HTTP_INVALID_HEADER	http-internal.h	/^	EVCON_HTTP_INVALID_HEADER,$/;"	e	enum:evhttp_connection_error
EVCON_HTTP_REQUEST_CANCEL	http-internal.h	/^	EVCON_HTTP_REQUEST_CANCEL$/;"	e	enum:evhttp_connection_error
EVCON_HTTP_TIMEOUT	http-internal.h	/^	EVCON_HTTP_TIMEOUT,$/;"	e	enum:evhttp_connection_error
EVCON_IDLE	http-internal.h	/^	EVCON_IDLE,		\/**< connection is established *\/$/;"	e	enum:evhttp_connection_state
EVCON_READING_BODY	http-internal.h	/^	EVCON_READING_BODY,	\/**< reading request\/response body *\/$/;"	e	enum:evhttp_connection_state
EVCON_READING_FIRSTLINE	http-internal.h	/^	EVCON_READING_FIRSTLINE,\/**< reading Request-Line (incoming conn) or$/;"	e	enum:evhttp_connection_state
EVCON_READING_HEADERS	http-internal.h	/^	EVCON_READING_HEADERS,	\/**< reading request\/response headers *\/$/;"	e	enum:evhttp_connection_state
EVCON_READING_TRAILER	http-internal.h	/^	EVCON_READING_TRAILER,	\/**< reading request\/response chunked trailer *\/$/;"	e	enum:evhttp_connection_state
EVCON_WRITING	http-internal.h	/^	EVCON_WRITING		\/**< writing request\/response headers\/body *\/$/;"	e	enum:evhttp_connection_state
EVDNS_ADDITIONAL_SECTION	include/event2/dns.h	535;"	d
EVDNS_ANSWER_SECTION	include/event2/dns.h	533;"	d
EVDNS_AUTHORITY_SECTION	include/event2/dns.h	534;"	d
EVDNS_BASE_CONFIG_WINDOWS_NAMESERVERS_IMPLEMENTED	include/event2/dns.h	451;"	d
EVDNS_CLASS_INET	include/event2/dns.h	549;"	d
EVDNS_CONFIG_WINDOWS_NAMESERVERS_IMPLEMENTED	include/event2/dns_compat.h	318;"	d
EVDNS_FLAGS_AA	include/event2/dns.h	552;"	d
EVDNS_FLAGS_RD	include/event2/dns.h	553;"	d
EVDNS_LOCK	evdns.c	393;"	d	file:
EVDNS_LOCK	evdns.c	397;"	d	file:
EVDNS_LOG_CHECK	evdns.c	491;"	d	file:
EVDNS_LOG_CHECK	evdns.c	493;"	d	file:
EVDNS_LOG_DEBUG	evdns.c	137;"	d	file:
EVDNS_LOG_WARN	evdns.c	138;"	d	file:
EVDNS_QTYPE_ALL	include/event2/dns.h	547;"	d
EVDNS_QTYPE_AXFR	include/event2/dns.h	546;"	d
EVDNS_TYPE_A	include/event2/dns.h	537;"	d
EVDNS_TYPE_AAAA	include/event2/dns.h	544;"	d
EVDNS_TYPE_CNAME	include/event2/dns.h	539;"	d
EVDNS_TYPE_MX	include/event2/dns.h	542;"	d
EVDNS_TYPE_NS	include/event2/dns.h	538;"	d
EVDNS_TYPE_PTR	include/event2/dns.h	541;"	d
EVDNS_TYPE_SOA	include/event2/dns.h	540;"	d
EVDNS_TYPE_TXT	include/event2/dns.h	543;"	d
EVDNS_UNLOCK	evdns.c	394;"	d	file:
EVDNS_UNLOCK	evdns.c	404;"	d	file:
EVENTS_PER_GETN	evport.c	91;"	d	file:
EVENT_BASE_FLAG_IGNORE_ENV	include/event2/event.h	/^	EVENT_BASE_FLAG_IGNORE_ENV = 0x02$/;"	e	enum:event_base_config_flag
EVENT_BASE_FLAG_NOLOCK	include/event2/event.h	/^	EVENT_BASE_FLAG_NOLOCK = 0x01,$/;"	e	enum:event_base_config_flag
EVENT_FD	include/event2/event.h	515;"	d
EVENT_FD	include/event2/event_struct.h	118;"	d
EVENT_FD	include/event2/event_struct.h	121;"	d
EVENT_MAX_PRIORITIES	include/event2/event.h	549;"	d
EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED	include/event2/event.h	594;"	d
EVENT_SIGNAL	include/event2/event.h	516;"	d
EVENT_SIGNAL	include/event2/event_struct.h	119;"	d
EVENT_SIGNAL	include/event2/event_struct.h	120;"	d
EVHTTP_CON_CLOSEDETECT	http-internal.h	76;"	d
EVHTTP_CON_INCOMING	http-internal.h	74;"	d
EVHTTP_CON_OUTGOING	http-internal.h	75;"	d
EVHTTP_PROXY_REQUEST	include/event2/http_struct.h	73;"	d
EVHTTP_REQUEST	include/event2/http.h	/^enum evhttp_request_kind { EVHTTP_REQUEST, EVHTTP_RESPONSE };$/;"	e	enum:evhttp_request_kind
EVHTTP_REQ_DEFER_FREE	include/event2/http_struct.h	77;"	d
EVHTTP_REQ_DELETE	include/event2/http.h	/^	EVHTTP_REQ_DELETE$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_GET	include/event2/http.h	/^	EVHTTP_REQ_GET,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_HEAD	include/event2/http.h	/^	EVHTTP_REQ_HEAD,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_NEEDS_FREE	include/event2/http_struct.h	79;"	d
EVHTTP_REQ_OWN_CONNECTION	include/event2/http_struct.h	71;"	d
EVHTTP_REQ_POST	include/event2/http.h	/^	EVHTTP_REQ_POST,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_PUT	include/event2/http.h	/^	EVHTTP_REQ_PUT,$/;"	e	enum:evhttp_cmd_type
EVHTTP_RESPONSE	include/event2/http.h	/^enum evhttp_request_kind { EVHTTP_REQUEST, EVHTTP_RESPONSE };$/;"	e	enum:evhttp_request_kind
EVHTTP_USER_OWNED	include/event2/http_struct.h	75;"	d
EVLIST_ACTIVE	include/event2/event_struct.h	61;"	d
EVLIST_ALL	include/event2/event_struct.h	66;"	d
EVLIST_INIT	include/event2/event_struct.h	63;"	d
EVLIST_INSERTED	include/event2/event_struct.h	59;"	d
EVLIST_INTERNAL	include/event2/event_struct.h	62;"	d
EVLIST_SIGNAL	include/event2/event_struct.h	60;"	d
EVLIST_TIMEOUT	include/event2/event_struct.h	58;"	d
EVLOCK_LOCK	evthread-internal.h	141;"	d
EVLOCK_LOCK	evthread-internal.h	74;"	d
EVLOCK_LOCK2	evthread-internal.h	143;"	d
EVLOCK_LOCK2	evthread-internal.h	99;"	d
EVLOCK_UNLOCK	evthread-internal.h	142;"	d
EVLOCK_UNLOCK	evthread-internal.h	81;"	d
EVLOCK_UNLOCK2	evthread-internal.h	110;"	d
EVLOCK_UNLOCK2	evthread-internal.h	144;"	d
EVLOOP_NONBLOCK	include/event2/event.h	256;"	d
EVLOOP_ONCE	include/event2/event.h	255;"	d
EVMAP_USE_HT	event-internal.h	90;"	d
EVRPC_CONTINUE	include/event2/rpc.h	/^	EVRPC_CONTINUE = 0,	\/**< continue processing the rpc *\/$/;"	e	enum:EVRPC_HOOK_RESULT
EVRPC_GENERATE	include/event2/rpc.h	234;"	d
EVRPC_HEADER	include/event2/rpc.h	173;"	d
EVRPC_HOOK_RESULT	include/event2/rpc.h	/^enum EVRPC_HOOK_RESULT {$/;"	g
EVRPC_HOOK_TYPE	include/event2/rpc.h	/^enum EVRPC_HOOK_TYPE {$/;"	g
EVRPC_INPUT	include/event2/rpc.h	/^	EVRPC_INPUT,		\/**< apply the function to an input hook *\/$/;"	e	enum:EVRPC_HOOK_TYPE
EVRPC_MAKE_CTX	include/event2/rpc.h	214;"	d
EVRPC_MAKE_REQUEST	include/event2/rpc.h	371;"	d
EVRPC_OUTPUT	include/event2/rpc.h	/^	EVRPC_OUTPUT		\/**< apply the function to an output hook *\/$/;"	e	enum:EVRPC_HOOK_TYPE
EVRPC_PAUSE	include/event2/rpc.h	/^	EVRPC_PAUSE = 1,	\/**< pause processing request until resumed *\/$/;"	e	enum:EVRPC_HOOK_RESULT
EVRPC_REGISTER	include/event2/rpc.h	316;"	d
EVRPC_REQUEST_DONE	include/event2/rpc.h	271;"	d
EVRPC_REQUEST_HTTP	include/event2/rpc.h	258;"	d
EVRPC_STATUS_ERR_BADPAYLOAD	include/event2/rpc_struct.h	47;"	d
EVRPC_STATUS_ERR_HOOKABORTED	include/event2/rpc_struct.h	49;"	d
EVRPC_STATUS_ERR_NONE	include/event2/rpc_struct.h	45;"	d
EVRPC_STATUS_ERR_TIMEOUT	include/event2/rpc_struct.h	46;"	d
EVRPC_STATUS_ERR_UNSTARTED	include/event2/rpc_struct.h	48;"	d
EVRPC_STRUCT	include/event2/rpc.h	156;"	d
EVRPC_STRUCT	test/regress_rpc.c	/^MessageCb(EVRPC_STRUCT(Message)* rpc, void *arg)$/;"	f	file:
EVRPC_STRUCT	test/regress_rpc.c	/^NeverReplyCb(EVRPC_STRUCT(NeverReply)* rpc, void *arg)$/;"	f	file:
EVRPC_TERMINATE	include/event2/rpc.h	/^	EVRPC_TERMINATE = -1,	\/**< indicates the rpc should be terminated *\/$/;"	e	enum:EVRPC_HOOK_RESULT
EVRPC_UNREGISTER	include/event2/rpc.h	345;"	d
EVRPC_URI_PREFIX	evrpc-internal.h	35;"	d
EVTAG_ADD	include/event2/rpc_compat.h	46;"	d
EVTAG_ADD	include/event2/rpc_compat.h	52;"	d
EVTAG_ARRAY_ADD	include/event2/rpc.h	132;"	d
EVTAG_ARRAY_ADD_VALUE	include/event2/rpc.h	127;"	d
EVTAG_ARRAY_GET	include/event2/rpc.h	137;"	d
EVTAG_ARRAY_LEN	include/event2/rpc.h	142;"	d
EVTAG_ASSIGN	include/event2/rpc.h	88;"	d
EVTAG_ASSIGN	include/event2/rpc_compat.h	44;"	d
EVTAG_ASSIGN	include/event2/rpc_compat.h	48;"	d
EVTAG_ASSIGN_WITH_LEN	include/event2/rpc.h	98;"	d
EVTAG_GET	include/event2/rpc.h	108;"	d
EVTAG_GET	include/event2/rpc_compat.h	45;"	d
EVTAG_GET	include/event2/rpc_compat.h	50;"	d
EVTAG_GET_WITH_LEN	include/event2/rpc.h	119;"	d
EVTAG_HAS	include/event2/rpc.h	76;"	d
EVTAG_LEN	include/event2/rpc_compat.h	55;"	d
EVTHREAD_ALLOC_LOCK	evthread-internal.h	138;"	d
EVTHREAD_ALLOC_LOCK	evthread-internal.h	62;"	d
EVTHREAD_FREE_LOCK	evthread-internal.h	139;"	d
EVTHREAD_FREE_LOCK	evthread-internal.h	67;"	d
EVTHREAD_GET_ID	evthread-internal.h	137;"	d
EVTHREAD_GET_ID	evthread-internal.h	51;"	d
EVTHREAD_LOCK	include/event2/thread.h	63;"	d
EVTHREAD_READ	include/event2/thread.h	66;"	d
EVTHREAD_UNLOCK	include/event2/thread.h	64;"	d
EVTHREAD_USE_PTHREADS_IMPLEMENTED	include/event2/thread.h	121;"	d
EVTHREAD_USE_WINDOWS_THREADS_IMPLEMENTED	include/event2/thread.h	111;"	d
EVTHREAD_WRITE	include/event2/thread.h	65;"	d
EVUTIL_CHECK_FMT	include/event2/util.h	258;"	d
EVUTIL_CHECK_FMT	include/event2/util.h	260;"	d
EVUTIL_CLOSESOCKET	include/event2/util.h	158;"	d
EVUTIL_CLOSESOCKET	include/event2/util.h	162;"	d
EVUTIL_ERR_ACCEPT_RETRIABLE	util-internal.h	64;"	d
EVUTIL_ERR_ACCEPT_RETRIABLE	util-internal.h	79;"	d
EVUTIL_ERR_CONNECT_RETRIABLE	util-internal.h	61;"	d
EVUTIL_ERR_CONNECT_RETRIABLE	util-internal.h	73;"	d
EVUTIL_ERR_RW_RETRIABLE	util-internal.h	58;"	d
EVUTIL_ERR_RW_RETRIABLE	util-internal.h	69;"	d
EVUTIL_ISALNUM_TABLE	evutil.c	/^const ev_uint32_t EVUTIL_ISALNUM_TABLE[8] =$/;"	v
EVUTIL_ISALPHA_TABLE	evutil.c	/^const ev_uint32_t EVUTIL_ISALPHA_TABLE[8] =$/;"	v
EVUTIL_ISDIGIT_TABLE	evutil.c	/^const ev_uint32_t EVUTIL_ISDIGIT_TABLE[8] = { 0, 0x3ff0000, 0, 0, 0, 0, 0, 0 };$/;"	v
EVUTIL_ISLOWER_TABLE	evutil.c	/^const ev_uint32_t EVUTIL_ISLOWER_TABLE[8] = { 0, 0, 0, 0x7fffffe, 0, 0, 0, 0 };$/;"	v
EVUTIL_ISPRINT_TABLE	evutil.c	/^const ev_uint32_t EVUTIL_ISPRINT_TABLE[8] =$/;"	v
EVUTIL_ISSPACE_TABLE	evutil.c	/^const ev_uint32_t EVUTIL_ISSPACE_TABLE[8] = { 0x3e00, 0x1, 0, 0, 0, 0, 0, 0 };$/;"	v
EVUTIL_ISUPPER_TABLE	evutil.c	/^const ev_uint32_t EVUTIL_ISUPPER_TABLE[8] = { 0, 0, 0x7fffffe, 0, 0, 0, 0, 0 };$/;"	v
EVUTIL_ISXDIGIT_TABLE	evutil.c	/^const ev_uint32_t EVUTIL_ISXDIGIT_TABLE[8] =$/;"	v
EVUTIL_SET_SOCKET_ERROR	include/event2/util.h	175;"	d
EVUTIL_SET_SOCKET_ERROR	include/event2/util.h	183;"	d
EVUTIL_SOCKET_ERROR	include/event2/util.h	173;"	d
EVUTIL_SOCKET_ERROR	include/event2/util.h	182;"	d
EVUTIL_TOLOWER	util-internal.h	109;"	d
EVUTIL_TOLOWER_TABLE	evutil.c	/^const char EVUTIL_TOLOWER_TABLE[256] = {$/;"	v
EVUTIL_TOUPPER	util-internal.h	110;"	d
EVUTIL_TOUPPER_TABLE	evutil.c	/^const char EVUTIL_TOUPPER_TABLE[256] = {$/;"	v
EVUTIL_UPCAST	util-internal.h	129;"	d
EV_CHECK_FMT	log-internal.h	31;"	d
EV_CHECK_FMT	log-internal.h	33;"	d
EV_CHECK_FMT	log-internal.h	51;"	d
EV_CLOSURE_NONE	event-internal.h	54;"	d
EV_CLOSURE_PERSIST	event-internal.h	56;"	d
EV_CLOSURE_SIGNAL	event-internal.h	55;"	d
EV_ET	include/event2/event.h	313;"	d
EV_FEATURE_ET	include/event2/event.h	/^    EV_FEATURE_ET = 0x01,$/;"	e	enum:event_method_feature
EV_FEATURE_FDS	include/event2/event.h	/^    EV_FEATURE_FDS = 0x04$/;"	e	enum:event_method_feature
EV_FEATURE_O1	include/event2/event.h	/^    EV_FEATURE_O1 = 0x02,$/;"	e	enum:event_method_feature
EV_PERSIST	include/event2/event.h	311;"	d
EV_READ	include/event2/event.h	307;"	d
EV_SIGNAL	include/event2/event.h	309;"	d
EV_TIMEOUT	include/event2/event.h	306;"	d
EV_WRITE	include/event2/event.h	308;"	d
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	include/Makefile	/^EXEEXT = $/;"	m
EXEEXT	sample/Makefile	/^EXEEXT = $/;"	m
EXEEXT	test/Makefile	/^EXEEXT = $/;"	m
EXTRA_DIST	Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	test/Makefile	/^EXTRA_DIST = regress.rpc regress.gen.h regress.gen.c$/;"	m
EXTRA_SRC	Makefile	/^EXTRA_SRC = event_tagging.c http.c evdns.c evrpc.c$/;"	m
EXTRA_SRC	include/Makefile	/^EXTRA_SRC = event2\/buffer.h event2\/buffer_compat.h \\$/;"	m
Entry	event_rpcgen.py	/^class Entry:$/;"	c
EntryArray	event_rpcgen.py	/^    def EntryArray(self, entry):$/;"	m	class:CCodeGenerator
EntryArray	event_rpcgen.py	/^class EntryArray(Entry):$/;"	c
EntryBytes	event_rpcgen.py	/^    def EntryBytes(self, entry_type, name, tag, fixed_length):$/;"	m	class:CCodeGenerator
EntryBytes	event_rpcgen.py	/^class EntryBytes(Entry):$/;"	c
EntryInt	event_rpcgen.py	/^    def EntryInt(self, entry_type, name, tag, bits=32):$/;"	m	class:CCodeGenerator
EntryInt	event_rpcgen.py	/^class EntryInt(Entry):$/;"	c
EntryString	event_rpcgen.py	/^    def EntryString(self, entry_type, name, tag):$/;"	m	class:CCodeGenerator
EntryString	event_rpcgen.py	/^class EntryString(Entry):$/;"	c
EntryStruct	event_rpcgen.py	/^    def EntryStruct(self, entry_type, name, tag, struct_name):$/;"	m	class:CCodeGenerator
EntryStruct	event_rpcgen.py	/^class EntryStruct(Entry):$/;"	c
EntryTagName	event_rpcgen.py	/^    def EntryTagName(self, entry):$/;"	m	class:Struct
EntryVarBytes	event_rpcgen.py	/^    def EntryVarBytes(self, entry_type, name, tag):$/;"	m	class:CCodeGenerator
EntryVarBytes	event_rpcgen.py	/^class EntryVarBytes(Entry):$/;"	c
F77	Makefile	/^F77 = $/;"	m
F77	include/Makefile	/^F77 = $/;"	m
F77	sample/Makefile	/^F77 = $/;"	m
F77	test/Makefile	/^F77 = $/;"	m
FAIL	test/tinytest.c	/^enum outcome { SKIP=2, OK=1, FAIL=0 };$/;"	e	enum:outcome	file:
FDINFO_OFFSET	evmap.c	180;"	d	file:
FDI_HAS_EVENTS	evport.c	104;"	d	file:
FDI_HAS_READ	evport.c	102;"	d	file:
FDI_HAS_WRITE	evport.c	103;"	d	file:
FDI_TO_SYSEVENTS	evport.c	105;"	d	file:
FD_CLOSEONEXEC	epoll.c	81;"	d	file:
FD_CLOSEONEXEC	epoll.c	86;"	d	file:
FD_CLOSEONEXEC	signal.c	100;"	d	file:
FD_CLOSEONEXEC	signal.c	105;"	d	file:
FD_SET_ALLOC_SIZE	WIN32-Code/win32.c	94;"	d	file:
FFLAGS	Makefile	/^FFLAGS = $/;"	m
FFLAGS	include/Makefile	/^FFLAGS = $/;"	m
FFLAGS	sample/Makefile	/^FFLAGS = $/;"	m
FFLAGS	test/Makefile	/^FFLAGS = $/;"	m
FREEZE_EQ	test/regress_buffer.c	1111;"	d	file:
GET16	evdns.c	1185;"	d	file:
GET16	evdns.c	892;"	d	file:
GET32	evdns.c	1184;"	d	file:
GET32	evdns.c	891;"	d	file:
GET8	evdns.c	1186;"	d	file:
GET8	evdns.c	893;"	d	file:
GET_IO_SLOT	evmap.c	110;"	d	file:
GET_IO_SLOT	evmap.c	177;"	d	file:
GET_IO_SLOT_AND_CTOR	evmap.c	118;"	d	file:
GET_IO_SLOT_AND_CTOR	evmap.c	178;"	d	file:
GET_SIGNAL_SLOT	evmap.c	156;"	d	file:
GET_SIGNAL_SLOT_AND_CTOR	evmap.c	162;"	d	file:
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	include/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	sample/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	test/Makefile	/^GREP = \/bin\/grep$/;"	m
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
GetDeclaration	event_rpcgen.py	/^    def GetDeclaration(self, funcname):$/;"	m	class:Entry
GetDeclaration	event_rpcgen.py	/^    def GetDeclaration(self, funcname):$/;"	m	class:EntryArray
GetDeclaration	event_rpcgen.py	/^    def GetDeclaration(self, funcname):$/;"	m	class:EntryBytes
GetDeclaration	event_rpcgen.py	/^    def GetDeclaration(self, funcname):$/;"	m	class:EntryVarBytes
GetFuncName	event_rpcgen.py	/^    def GetFuncName(self):$/;"	m	class:Entry
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:Entry
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryArray
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryBytes
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryInt
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryString
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryStruct
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryVarBytes
GetNetworkParams_fn_t	evdns.c	/^typedef DWORD(WINAPI *GetNetworkParams_fn_t)(FIXED_INFO *, DWORD*);$/;"	t	file:
GetNextStruct	event_rpcgen.py	/^def GetNextStruct(file):$/;"	f
GetTranslation	event_rpcgen.py	/^    def GetTranslation(self, extradict = {}):$/;"	m	class:Entry
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var):$/;"	m	class:Entry
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var):$/;"	m	class:EntryBytes
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var):$/;"	m	class:EntryString
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var):$/;"	m	class:EntryStruct
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var):$/;"	m	class:EntryVarBytes
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var_name):$/;"	m	class:EntryArray
GetVarName	event_rpcgen.py	/^        def GetVarName(var_name):$/;"	m	class:EntryArray
GetVarName	event_rpcgen.py	/^    def GetVarName(self, var):$/;"	m	class:Entry
GetVarName	event_rpcgen.py	/^    def GetVarName(self, var_name):$/;"	m	class:EntryArray
GotErrorCb	test/regress_rpc.c	/^GotErrorCb(struct evrpc_status *status,$/;"	f	file:
GotKillCb	test/regress_rpc.c	/^GotKillCb(struct evrpc_status *status,$/;"	f	file:
GotKillCbTwo	test/regress_rpc.c	/^GotKillCbTwo(struct evrpc_status *status,$/;"	f	file:
GuardName	event_rpcgen.py	/^    def GuardName(self, name):$/;"	m	class:CCodeGenerator
HAVE_ARPA_INET_H	config.h	17;"	d
HAVE_CLOCK_GETTIME	config.h	20;"	d
HAVE_DLFCN_H	config.h	26;"	d
HAVE_EPOLL	config.h	29;"	d
HAVE_EPOLL_CTL	config.h	32;"	d
HAVE_FCNTL	config.h	41;"	d
HAVE_FCNTL_H	WIN32-Code/config.h	35;"	d
HAVE_FCNTL_H	config.h	44;"	d
HAVE_GETADDRINFO	config.h	47;"	d
HAVE_GETNAMEINFO	config.h	50;"	d
HAVE_GETTIMEOFDAY	config.h	53;"	d
HAVE_INET_ATON	config.h	56;"	d
HAVE_INET_NTOP	config.h	59;"	d
HAVE_INET_PTON	config.h	62;"	d
HAVE_INTTYPES_H	config.h	65;"	d
HAVE_MEMORY_H	WIN32-Code/config.h	68;"	d
HAVE_MEMORY_H	config.h	74;"	d
HAVE_MMAP	config.h	77;"	d
HAVE_NETINET_IN_H	config.h	83;"	d
HAVE_PIPE	config.h	86;"	d
HAVE_POLL	config.h	89;"	d
HAVE_POLL_H	config.h	92;"	d
HAVE_PTHREADS	config.h	104;"	d
HAVE_SA_FAMILY_T	config.h	107;"	d
HAVE_SELECT	config.h	110;"	d
HAVE_SENDFILE	config.h	113;"	d
HAVE_SETFD	config.h	116;"	d
HAVE_SIGACTION	config.h	119;"	d
HAVE_SIGNAL	WIN32-Code/config.h	95;"	d
HAVE_SIGNAL	config.h	122;"	d
HAVE_SIGNAL_H	WIN32-Code/config.h	98;"	d
HAVE_STDARG_H	WIN32-Code/config.h	101;"	d
HAVE_STDARG_H	config.h	128;"	d
HAVE_STDDEF_H	config.h	131;"	d
HAVE_STDINT_H	config.h	134;"	d
HAVE_STDLIB_H	WIN32-Code/config.h	107;"	d
HAVE_STDLIB_H	config.h	137;"	d
HAVE_STRINGS_H	WIN32-Code/config.h	110;"	d
HAVE_STRINGS_H	config.h	140;"	d
HAVE_STRING_H	WIN32-Code/config.h	113;"	d
HAVE_STRING_H	config.h	143;"	d
HAVE_STRLCPY	config.h	146;"	d
HAVE_STRSEP	config.h	149;"	d
HAVE_STRTOK_R	config.h	152;"	d
HAVE_STRTOLL	config.h	155;"	d
HAVE_STRUCT_IN6_ADDR	WIN32-Code/config.h	125;"	d
HAVE_STRUCT_IN6_ADDR	config.h	158;"	d
HAVE_STRUCT_IN6_ADDR_S6_ADDR16	config.h	161;"	d
HAVE_STRUCT_IN6_ADDR_S6_ADDR32	config.h	164;"	d
HAVE_STRUCT_SOCKADDR_IN6	config.h	167;"	d
HAVE_SYS_EPOLL_H	config.h	179;"	d
HAVE_SYS_IOCTL_H	config.h	188;"	d
HAVE_SYS_MMAN_H	config.h	191;"	d
HAVE_SYS_PARAM_H	config.h	194;"	d
HAVE_SYS_QUEUE_H	config.h	197;"	d
HAVE_SYS_SELECT_H	config.h	200;"	d
HAVE_SYS_SENDFILE_H	config.h	203;"	d
HAVE_SYS_SOCKET_H	config.h	206;"	d
HAVE_SYS_STAT_H	config.h	209;"	d
HAVE_SYS_TIME_H	config.h	212;"	d
HAVE_SYS_TYPES_H	config.h	215;"	d
HAVE_SYS_UIO_H	config.h	218;"	d
HAVE_TIMERADD	config.h	224;"	d
HAVE_TIMERCLEAR	config.h	227;"	d
HAVE_TIMERCMP	WIN32-Code/config.h	167;"	d
HAVE_TIMERCMP	config.h	230;"	d
HAVE_TIMERISSET	WIN32-Code/config.h	170;"	d
HAVE_TIMERISSET	config.h	233;"	d
HAVE_UINT16_T	config.h	236;"	d
HAVE_UINT32_T	config.h	239;"	d
HAVE_UINT64_T	config.h	242;"	d
HAVE_UINT8_T	config.h	245;"	d
HAVE_UNISTD_H	config.h	248;"	d
HAVE_VASPRINTF	config.h	251;"	d
HEADERS	Makefile	/^HEADERS = $(include_HEADERS) $(nodist_include_HEADERS) \\$/;"	m
HEADERS	include/Makefile	/^HEADERS = $(nobase_include_HEADERS)$/;"	m
HEADERS	test/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HOST_NAME_MAX	evdns.c	141;"	d	file:
HTTP_BADREQUEST	include/event2/http.h	65;"	d
HTTP_CONNECT_TIMEOUT	http-internal.h	16;"	d
HTTP_DEFAULTPORT	http-internal.h	21;"	d
HTTP_LEGACY	test/regress_http.c	2193;"	d	file:
HTTP_MOVEPERM	include/event2/http.h	62;"	d
HTTP_MOVETEMP	include/event2/http.h	63;"	d
HTTP_NOCONTENT	include/event2/http.h	61;"	d
HTTP_NOTFOUND	include/event2/http.h	66;"	d
HTTP_NOTMODIFIED	include/event2/http.h	64;"	d
HTTP_OK	include/event2/http.h	60;"	d
HTTP_PREFIX	http-internal.h	20;"	d
HTTP_READ_TIMEOUT	http-internal.h	18;"	d
HTTP_SERVUNAVAIL	include/event2/http.h	67;"	d
HTTP_WRITE_TIMEOUT	http-internal.h	17;"	d
HT_CLEAR	ht-internal.h	52;"	d
HT_EMPTY	ht-internal.h	34;"	d
HT_ENTRY	ht-internal.h	28;"	d
HT_FIND	ht-internal.h	45;"	d
HT_FOREACH	ht-internal.h	100;"	d
HT_GENERATE	ht-internal.h	278;"	d
HT_HEAD	ht-internal.h	11;"	d
HT_INIT	ht-internal.h	53;"	d
HT_INITIALIZER	ht-internal.h	25;"	d
HT_INSERT	ht-internal.h	46;"	d
HT_NEXT	ht-internal.h	50;"	d
HT_NEXT_RMV	ht-internal.h	51;"	d
HT_PROTOTYPE	ht-internal.h	105;"	d
HT_REMOVE	ht-internal.h	48;"	d
HT_REPLACE	ht-internal.h	47;"	d
HT_SIZE	ht-internal.h	42;"	d
HT_START	ht-internal.h	49;"	d
HeaderFilename	event_rpcgen.py	/^    def HeaderFilename(self, filename):$/;"	m	class:CCodeGenerator
HeaderPostamble	event_rpcgen.py	/^    def HeaderPostamble(self, name):$/;"	m	class:CCodeGenerator
HeaderPreamble	event_rpcgen.py	/^    def HeaderPreamble(self, name):$/;"	m	class:CCodeGenerator
INCLUDES	Makefile	/^INCLUDES = -I$(srcdir)\/compat -I$(srcdir)\/include $(SYS_INCLUDES)$/;"	m
INPUT	include/event2/rpc.h	457;"	d
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	include/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	sample/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	test/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	include/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	sample/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	test/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	include/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	sample/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	test/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	include/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	sample/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	test/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	include/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	sample/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	test/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	include/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	sample/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	test/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
IOV_LEN_FIELD	buffer.c	1471;"	d	file:
IOV_LEN_FIELD	buffer.c	1476;"	d	file:
IOV_PTR_FIELD	buffer.c	1470;"	d	file:
IOV_PTR_FIELD	buffer.c	1475;"	d	file:
IOV_TYPE	buffer.c	1469;"	d	file:
IOV_TYPE	buffer.c	1474;"	d	file:
ITIMER_PROF	compat/sys/_time.h	136;"	d
ITIMER_REAL	compat/sys/_time.h	134;"	d
ITIMER_VIRTUAL	compat/sys/_time.h	135;"	d
KILL_ACTION	test/regress.gen.h	/^  KILL_ACTION=2,$/;"	e	enum:kill_
KILL_HOW_OFTEN	test/regress.gen.h	/^  KILL_HOW_OFTEN=3,$/;"	e	enum:kill_
KILL_MAX_TAGS	test/regress.gen.h	/^  KILL_MAX_TAGS$/;"	e	enum:kill_
KILL_WEAPON	test/regress.gen.h	/^  KILL_WEAPON=65825,$/;"	e	enum:kill_
LDADD	sample/Makefile	/^LDADD = ..\/libevent.la$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	include/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	sample/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	test/Makefile	/^LDFLAGS = $/;"	m
LEGACY	test/regress.h	89;"	d
LEV_OPT_CLOSE_ON_EXEC	include/event2/listener.h	53;"	d
LEV_OPT_CLOSE_ON_FREE	include/event2/listener.h	51;"	d
LEV_OPT_LEAVE_SOCKETS_BLOCKING	include/event2/listener.h	48;"	d
LEV_OPT_REUSEABLE	include/event2/listener.h	56;"	d
LIBEVENT_A	makefile	/^LIBEVENT_A= libevent.a$/;"	m
LIBEVENT_SHARED	makefile	/^LIBEVENT_SHARED=libevent-$(MAJOR_VERSION).$(MINOR_VERSION).so$/;"	m
LIBEVENT_SHARED_FULLNAME	makefile	/^LIBEVENT_SHARED_FULLNAME=libevent-$(MAJOR_VERSION).$(MINOR_VERSION).so$/;"	m
LIBEVENT_VERSION	include/event2/event.h	544;"	d
LIBEVENT_VERSION_NUMBER	include/event2/event.h	547;"	d
LIBOBJS	Makefile	/^LIBOBJS =  ${LIBOBJDIR}select$U.o ${LIBOBJDIR}poll$U.o ${LIBOBJDIR}epoll$U.o ${LIBOBJDIR}signal$U.o$/;"	m
LIBOBJS	include/Makefile	/^LIBOBJS =  ${LIBOBJDIR}select$U.o ${LIBOBJDIR}poll$U.o ${LIBOBJDIR}epoll$U.o ${LIBOBJDIR}signal$U.o$/;"	m
LIBOBJS	sample/Makefile	/^LIBOBJS =  ${LIBOBJDIR}select$U.o ${LIBOBJDIR}poll$U.o ${LIBOBJDIR}epoll$U.o ${LIBOBJDIR}signal$U.o$/;"	m
LIBOBJS	test/Makefile	/^LIBOBJS =  ${LIBOBJDIR}select$U.o ${LIBOBJDIR}poll$U.o ${LIBOBJDIR}epoll$U.o ${LIBOBJDIR}signal$U.o$/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBS	include/Makefile	/^LIBS = $/;"	m
LIBS	sample/Makefile	/^LIBS = $/;"	m
LIBS	test/Makefile	/^LIBS = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	include/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	sample/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	test/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL_DEPS	Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	include/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	sample/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	test/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIB_LDFLAGS	makefile	/^LIB_LDFLAGS := $(subst -z defs,,$(LDFLAGS))$/;"	m
LINK	Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LINK	sample/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LINK	test/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LIST_EMPTY	compat/sys/queue.h	159;"	d
LIST_END	compat/sys/queue.h	158;"	d
LIST_ENTRY	compat/sys/queue.h	148;"	d
LIST_FIRST	compat/sys/queue.h	157;"	d
LIST_FOREACH	compat/sys/queue.h	162;"	d
LIST_HEAD	compat/sys/queue.h	140;"	d
LIST_HEAD_INITIALIZER	compat/sys/queue.h	145;"	d
LIST_INIT	compat/sys/queue.h	170;"	d
LIST_INSERT_AFTER	compat/sys/queue.h	174;"	d
LIST_INSERT_BEFORE	compat/sys/queue.h	182;"	d
LIST_INSERT_HEAD	compat/sys/queue.h	189;"	d
LIST_NEXT	compat/sys/queue.h	160;"	d
LIST_REMOVE	compat/sys/queue.h	196;"	d
LIST_REPLACE	compat/sys/queue.h	203;"	d
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LN_S	include/Makefile	/^LN_S = ln -s$/;"	m
LN_S	sample/Makefile	/^LN_S = ln -s$/;"	m
LN_S	test/Makefile	/^LN_S = ln -s$/;"	m
LOCAL_SOCKETPAIR_AF	event.c	1756;"	d	file:
LOCAL_SOCKETPAIR_AF	test/regress_et.c	77;"	d	file:
LOCAL_SOCKETPAIR_AF	test/regress_et.c	79;"	d	file:
LONGEST_TEST_NAME	test/tinytest.c	42;"	d	file:
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	sample/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	test/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS =  ${LIBOBJDIR}select$U.lo ${LIBOBJDIR}poll$U.lo ${LIBOBJDIR}epoll$U.lo ${LIBOBJDIR}signal$U.lo$/;"	m
LTLIBOBJS	include/Makefile	/^LTLIBOBJS =  ${LIBOBJDIR}select$U.lo ${LIBOBJDIR}poll$U.lo ${LIBOBJDIR}epoll$U.lo ${LIBOBJDIR}signal$U.lo$/;"	m
LTLIBOBJS	sample/Makefile	/^LTLIBOBJS =  ${LIBOBJDIR}select$U.lo ${LIBOBJDIR}poll$U.lo ${LIBOBJDIR}epoll$U.lo ${LIBOBJDIR}signal$U.lo$/;"	m
LTLIBOBJS	test/Makefile	/^LTLIBOBJS =  ${LIBOBJDIR}select$U.lo ${LIBOBJDIR}poll$U.lo ${LIBOBJDIR}epoll$U.lo ${LIBOBJDIR}signal$U.lo$/;"	m
LTLIBRARIES	Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LineCount	event_rpcgen.py	/^    def LineCount(self):$/;"	m	class:Entry
MAGIC_EXITCODE	test/tinytest.c	90;"	d	file:
MAJOR_VERSION	makefile	/^MAJOR_VERSION=2$/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run makeinfo$/;"	m
MAKEINFO	include/Makefile	/^MAKEINFO = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run makeinfo$/;"	m
MAKEINFO	sample/Makefile	/^MAKEINFO = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run makeinfo$/;"	m
MAKEINFO	test/Makefile	/^MAKEINFO = ${SHELL} \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/missing --run makeinfo$/;"	m
MANS	Makefile	/^MANS = $(man_MANS)$/;"	m
MAP_FAILED	buffer.c	94;"	d	file:
MAX_ADDRS	evdns.c	165;"	d	file:
MAX_CALLS	test/regress_iocp.c	46;"	d	file:
MAX_EPOLL_TIMEOUT_MSEC	epoll.c	97;"	d	file:
MAX_LABELS	evdns.c	1480;"	d	file:
MAX_WSABUFS	buffer_iocp.c	49;"	d	file:
MIN	evdns.c	146;"	d	file:
MIN	evdns.c	147;"	d	file:
MIN	http.c	190;"	d	file:
MINOR_VERSION	makefile	/^MINOR_VERSION=0$/;"	m
MIN_BUFFER_SIZE	evbuffer-internal.h	44;"	d
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	include/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	sample/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	test/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MORE_DATA_EXPECTED	http-internal.h	/^	MORE_DATA_EXPECTED = 0,$/;"	e	enum:message_read_status
MSG_ATTACK	test/regress.gen.h	/^  MSG_ATTACK=3,$/;"	e	enum:msg_
MSG_FROM_NAME	test/regress.gen.h	/^  MSG_FROM_NAME=1,$/;"	e	enum:msg_
MSG_MAX_TAGS	test/regress.gen.h	/^  MSG_MAX_TAGS$/;"	e	enum:msg_
MSG_RUN	test/regress.gen.h	/^  MSG_RUN=4,$/;"	e	enum:msg_
MSG_TO_NAME	test/regress.gen.h	/^  MSG_TO_NAME=2,$/;"	e	enum:msg_
MakeArray	event_rpcgen.py	/^    def MakeArray(self, yes=1):$/;"	m	class:Entry
MakeOptional	event_rpcgen.py	/^    def MakeOptional(self):$/;"	m	class:Entry
NEVENT	WIN32-Code/win32.c	183;"	d	file:
NEVENT	devpoll.c	81;"	d	file:
NEVENT	epoll.c	89;"	d	file:
NEVENT	kqueue.c	65;"	d	file:
NEVENT	test/test-time.c	26;"	d	file:
NEXT_TOKEN	evdns.c	3227;"	d	file:
NEXT_TOKEN	evdns.c	3259;"	d	file:
NI_MAXHOST	http.c	101;"	d	file:
NI_MAXSERV	http.c	100;"	d	file:
NI_MAXSERV	test/regress_http.c	112;"	d	file:
NI_NUMERICHOST	http.c	103;"	d	file:
NI_NUMERICSERV	http.c	104;"	d	file:
NORMAL	test/regress_util.c	/^enum entry_status { NORMAL, CANONICAL, BAD };$/;"	e	enum:entry_status	file:
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	include/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	sample/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	test/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	include/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	sample/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	test/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOTIFICATION_KEY	event_iocp.c	38;"	d	file:
NROFF	Makefile	/^NROFF = nroff$/;"	m
NUMERIC_VERSION	config.h	257;"	d
NUM_IOVEC	buffer.c	1468;"	d	file:
NUM_IOVEC	buffer.c	1473;"	d	file:
NUM_THREADS	test/regress_pthread.c	59;"	d	file:
N_REQUESTS	test/bench_httpclient.c	/^const int N_REQUESTS = 20000;$/;"	v
Name	event_rpcgen.py	/^    def Name(self):$/;"	m	class:Entry
Name	event_rpcgen.py	/^    def Name(self):$/;"	m	class:Struct
NormalizeLine	event_rpcgen.py	/^def NormalizeLine(line):$/;"	f
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	include/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	sample/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	test/Makefile	/^OBJEXT = o$/;"	m
OK	test/tinytest.c	/^enum outcome { SKIP=2, OK=1, FAIL=0 };$/;"	e	enum:outcome	file:
OUTPUT	include/event2/rpc.h	460;"	d
Optional	event_rpcgen.py	/^    def Optional(self):$/;"	m	class:Entry
PACKAGE	Makefile	/^PACKAGE = libevent$/;"	m
PACKAGE	WIN32-Code/config.h	182;"	d
PACKAGE	config.h	260;"	d
PACKAGE	include/Makefile	/^PACKAGE = libevent$/;"	m
PACKAGE	sample/Makefile	/^PACKAGE = libevent$/;"	m
PACKAGE	test/Makefile	/^PACKAGE = libevent$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	WIN32-Code/config.h	185;"	d
PACKAGE_BUGREPORT	config.h	263;"	d
PACKAGE_BUGREPORT	include/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	sample/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	test/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_NAME	WIN32-Code/config.h	188;"	d
PACKAGE_NAME	config.h	266;"	d
PACKAGE_NAME	include/Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_NAME	sample/Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_NAME	test/Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_STRING	WIN32-Code/config.h	191;"	d
PACKAGE_STRING	config.h	269;"	d
PACKAGE_STRING	include/Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_STRING	sample/Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_STRING	test/Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_TARNAME	WIN32-Code/config.h	194;"	d
PACKAGE_TARNAME	config.h	272;"	d
PACKAGE_TARNAME	include/Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_TARNAME	sample/Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_TARNAME	test/Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = $/;"	m
PACKAGE_VERSION	WIN32-Code/config.h	197;"	d
PACKAGE_VERSION	config.h	275;"	d
PACKAGE_VERSION	include/Makefile	/^PACKAGE_VERSION = $/;"	m
PACKAGE_VERSION	sample/Makefile	/^PACKAGE_VERSION = $/;"	m
PACKAGE_VERSION	test/Makefile	/^PACKAGE_VERSION = $/;"	m
PARALLELISM	test/bench_httpclient.c	/^const int PARALLELISM = 200;$/;"	v
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	include/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	sample/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	test/Makefile	/^PATH_SEPARATOR = :$/;"	m
POST_DATA	test/regress_http.c	941;"	d	file:
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	include/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	sample/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	test/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	include/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	sample/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	test/Makefile	/^POST_UNINSTALL = :$/;"	m
PREPEND_CHAIN	buffer.c	576;"	d	file:
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	include/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	sample/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	test/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	include/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	sample/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	test/Makefile	/^PRE_UNINSTALL = :$/;"	m
PROGRAMS	sample/Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PROGRAMS	test/Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PTHREAD_CC	Makefile	/^PTHREAD_CC = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc$/;"	m
PTHREAD_CC	include/Makefile	/^PTHREAD_CC = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc$/;"	m
PTHREAD_CC	sample/Makefile	/^PTHREAD_CC = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc$/;"	m
PTHREAD_CC	test/Makefile	/^PTHREAD_CC = \/opt\/buildroot-gcc342\/bin\/mipsel-linux-uclibc-gcc$/;"	m
PTHREAD_CFLAGS	Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	include/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	sample/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	test/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_LIBS	Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	include/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	sample/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	test/Makefile	/^PTHREAD_LIBS =  $(am__append_1)$/;"	m
PTR_TO_UDATA	kqueue.c	56;"	d	file:
PTR_TO_UDATA	kqueue.c	58;"	d	file:
PUT_DATA	test/regress_http.c	1059;"	d	file:
Parse	event_rpcgen.py	/^def Parse(factory, file):$/;"	f
PrintCode	event_rpcgen.py	/^    def PrintCode(self, file):$/;"	m	class:StructCCode
PrintDeclaration	event_rpcgen.py	/^    def PrintDeclaration(self, file):$/;"	m	class:StructCCode
PrintForwardDeclaration	event_rpcgen.py	/^    def PrintForwardDeclaration(self, file):$/;"	m	class:StructCCode
PrintIndented	event_rpcgen.py	/^    def PrintIndented(self, file, ident, code):$/;"	m	class:Struct
PrintTags	event_rpcgen.py	/^    def PrintTags(self, file):$/;"	m	class:StructCCode
ProcessOneEntry	event_rpcgen.py	/^def ProcessOneEntry(factory, newstruct, entry):$/;"	f
ProcessStruct	event_rpcgen.py	/^def ProcessStruct(factory, data):$/;"	f
RANLIB	Makefile	/^RANLIB = mipsel-linux-ranlib$/;"	m
RANLIB	include/Makefile	/^RANLIB = mipsel-linux-ranlib$/;"	m
RANLIB	sample/Makefile	/^RANLIB = mipsel-linux-ranlib$/;"	m
RANLIB	test/Makefile	/^RANLIB = mipsel-linux-ranlib$/;"	m
RB_AUGMENT	WIN32-Code/tree.h	1009;"	d
RB_AUGMENT	WIN32-Code/tree.h	332;"	d
RB_BLACK	WIN32-Code/tree.h	303;"	d
RB_BLACK	WIN32-Code/tree.h	980;"	d
RB_COLOR	WIN32-Code/tree.h	316;"	d
RB_COLOR	WIN32-Code/tree.h	993;"	d
RB_EMPTY	WIN32-Code/tree.h	318;"	d
RB_EMPTY	WIN32-Code/tree.h	995;"	d
RB_ENTRY	WIN32-Code/tree.h	305;"	d
RB_ENTRY	WIN32-Code/tree.h	982;"	d
RB_FIND	WIN32-Code/tree.h	1344;"	d
RB_FIND	WIN32-Code/tree.h	667;"	d
RB_FOREACH	WIN32-Code/tree.h	1349;"	d
RB_FOREACH	WIN32-Code/tree.h	672;"	d
RB_GENERATE	WIN32-Code/tree.h	1066;"	d
RB_GENERATE	WIN32-Code/tree.h	389;"	d
RB_HEAD	WIN32-Code/tree.h	291;"	d
RB_HEAD	WIN32-Code/tree.h	968;"	d
RB_INF	WIN32-Code/tree.h	1340;"	d
RB_INF	WIN32-Code/tree.h	663;"	d
RB_INIT	WIN32-Code/tree.h	299;"	d
RB_INIT	WIN32-Code/tree.h	976;"	d
RB_INITIALIZER	WIN32-Code/tree.h	296;"	d
RB_INITIALIZER	WIN32-Code/tree.h	973;"	d
RB_INSERT	WIN32-Code/tree.h	1342;"	d
RB_INSERT	WIN32-Code/tree.h	665;"	d
RB_LEFT	WIN32-Code/tree.h	313;"	d
RB_LEFT	WIN32-Code/tree.h	990;"	d
RB_MAX	WIN32-Code/tree.h	1347;"	d
RB_MAX	WIN32-Code/tree.h	670;"	d
RB_MIN	WIN32-Code/tree.h	1346;"	d
RB_MIN	WIN32-Code/tree.h	669;"	d
RB_NEGINF	WIN32-Code/tree.h	1339;"	d
RB_NEGINF	WIN32-Code/tree.h	662;"	d
RB_NEXT	WIN32-Code/tree.h	1345;"	d
RB_NEXT	WIN32-Code/tree.h	668;"	d
RB_PARENT	WIN32-Code/tree.h	315;"	d
RB_PARENT	WIN32-Code/tree.h	992;"	d
RB_PROTOTYPE	WIN32-Code/tree.h	1053;"	d
RB_PROTOTYPE	WIN32-Code/tree.h	376;"	d
RB_RED	WIN32-Code/tree.h	304;"	d
RB_RED	WIN32-Code/tree.h	981;"	d
RB_REMOVE	WIN32-Code/tree.h	1343;"	d
RB_REMOVE	WIN32-Code/tree.h	666;"	d
RB_RIGHT	WIN32-Code/tree.h	314;"	d
RB_RIGHT	WIN32-Code/tree.h	991;"	d
RB_ROOT	WIN32-Code/tree.h	317;"	d
RB_ROOT	WIN32-Code/tree.h	994;"	d
RB_ROTATE_LEFT	WIN32-Code/tree.h	1012;"	d
RB_ROTATE_LEFT	WIN32-Code/tree.h	335;"	d
RB_ROTATE_RIGHT	WIN32-Code/tree.h	1032;"	d
RB_ROTATE_RIGHT	WIN32-Code/tree.h	355;"	d
RB_SET	WIN32-Code/tree.h	320;"	d
RB_SET	WIN32-Code/tree.h	997;"	d
RB_SET_BLACKRED	WIN32-Code/tree.h	1003;"	d
RB_SET_BLACKRED	WIN32-Code/tree.h	326;"	d
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
REQUEST_CANCELED	http-internal.h	/^	REQUEST_CANCELED = -2$/;"	e	enum:message_read_status
REQ_HEAD	evdns.c	360;"	d	file:
RPC_LEGACY	test/regress_rpc.c	861;"	d	file:
RUN_FIXED_BYTES	test/regress.gen.h	/^  RUN_FIXED_BYTES=3,$/;"	e	enum:run_
RUN_HOW	test/regress.gen.h	/^  RUN_HOW=1,$/;"	e	enum:run_
RUN_LARGE_NUMBER	test/regress.gen.h	/^  RUN_LARGE_NUMBER=5,$/;"	e	enum:run_
RUN_MAX_TAGS	test/regress.gen.h	/^  RUN_MAX_TAGS$/;"	e	enum:run_
RUN_NOTES	test/regress.gen.h	/^  RUN_NOTES=4,$/;"	e	enum:run_
RUN_OTHER_NUMBERS	test/regress.gen.h	/^  RUN_OTHER_NUMBERS=6,$/;"	e	enum:run_
RUN_SOME_BYTES	test/regress.gen.h	/^  RUN_SOME_BYTES=2,$/;"	e	enum:run_
RpcGenError	event_rpcgen.py	/^class RpcGenError(Exception):$/;"	c
SCRIPTS	Makefile	/^SCRIPTS = $(bin_SCRIPTS)$/;"	m
SECONDS	test/regress.c	91;"	d	file:
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SED	include/Makefile	/^SED = \/bin\/sed$/;"	m
SED	sample/Makefile	/^SED = \/bin\/sed$/;"	m
SED	test/Makefile	/^SED = \/bin\/sed$/;"	m
SENDFILE_IS_FREEBSD	buffer.c	103;"	d	file:
SENDFILE_IS_LINUX	buffer.c	100;"	d	file:
SENDFILE_IS_MACOSX	buffer.c	106;"	d	file:
SERVICES_KEY	evdns.c	3481;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	include/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	sample/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	test/Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	include/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	sample/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	test/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHUT_WR	test/regress.c	94;"	d	file:
SHUT_WR	test/regress_et.c	73;"	d	file:
SHUT_WR	test/regress_http.c	1476;"	d	file:
SHUT_WR	test/test-eof.c	53;"	d	file:
SIGFPE_REQ	WIN32-Code/win32.c	/^volatile double SIGFPE_REQ = 0.0f;$/;"	v
SIMPLEQ_EMPTY	compat/sys/queue.h	233;"	d
SIMPLEQ_END	compat/sys/queue.h	232;"	d
SIMPLEQ_ENTRY	compat/sys/queue.h	223;"	d
SIMPLEQ_FIRST	compat/sys/queue.h	231;"	d
SIMPLEQ_FOREACH	compat/sys/queue.h	236;"	d
SIMPLEQ_HEAD	compat/sys/queue.h	214;"	d
SIMPLEQ_HEAD_INITIALIZER	compat/sys/queue.h	220;"	d
SIMPLEQ_INIT	compat/sys/queue.h	244;"	d
SIMPLEQ_INSERT_AFTER	compat/sys/queue.h	261;"	d
SIMPLEQ_INSERT_HEAD	compat/sys/queue.h	249;"	d
SIMPLEQ_INSERT_TAIL	compat/sys/queue.h	255;"	d
SIMPLEQ_NEXT	compat/sys/queue.h	234;"	d
SIMPLEQ_REMOVE_HEAD	compat/sys/queue.h	267;"	d
SIZEOF_INT	config.h	282;"	d
SIZEOF_LONG	config.h	285;"	d
SIZEOF_LONG_LONG	config.h	288;"	d
SIZEOF_SHORT	config.h	291;"	d
SKIP	test/tinytest.c	/^enum outcome { SKIP=2, OK=1, FAIL=0 };$/;"	e	enum:outcome	file:
SKIP_NAME	evdns.c	1183;"	d	file:
SKIP_NAME	evdns.c	984;"	d	file:
SLIST_EMPTY	compat/sys/queue.h	108;"	d
SLIST_END	compat/sys/queue.h	107;"	d
SLIST_ENTRY	compat/sys/queue.h	97;"	d
SLIST_FIRST	compat/sys/queue.h	106;"	d
SLIST_FOREACH	compat/sys/queue.h	111;"	d
SLIST_HEAD	compat/sys/queue.h	88;"	d
SLIST_HEAD_INITIALIZER	compat/sys/queue.h	93;"	d
SLIST_INIT	compat/sys/queue.h	119;"	d
SLIST_INSERT_AFTER	compat/sys/queue.h	123;"	d
SLIST_INSERT_HEAD	compat/sys/queue.h	128;"	d
SLIST_NEXT	compat/sys/queue.h	109;"	d
SLIST_REMOVE_HEAD	compat/sys/queue.h	133;"	d
SOURCES	Makefile	/^SOURCES = $(libevent_la_SOURCES) $(libevent_core_la_SOURCES) \\$/;"	m
SOURCES	include/Makefile	/^SOURCES =$/;"	m
SOURCES	sample/Makefile	/^SOURCES = event-test.c signal-test.c time-test.c$/;"	m
SOURCES	test/Makefile	/^SOURCES = $(bench_SOURCES) $(bench_cascade_SOURCES) \\$/;"	m
SPLAY_ASSEMBLE	WIN32-Code/tree.h	105;"	d
SPLAY_ASSEMBLE	WIN32-Code/tree.h	782;"	d
SPLAY_EMPTY	WIN32-Code/tree.h	755;"	d
SPLAY_EMPTY	WIN32-Code/tree.h	78;"	d
SPLAY_ENTRY	WIN32-Code/tree.h	69;"	d
SPLAY_ENTRY	WIN32-Code/tree.h	746;"	d
SPLAY_FIND	WIN32-Code/tree.h	278;"	d
SPLAY_FIND	WIN32-Code/tree.h	955;"	d
SPLAY_FOREACH	WIN32-Code/tree.h	285;"	d
SPLAY_FOREACH	WIN32-Code/tree.h	962;"	d
SPLAY_GENERATE	WIN32-Code/tree.h	156;"	d
SPLAY_GENERATE	WIN32-Code/tree.h	833;"	d
SPLAY_HEAD	WIN32-Code/tree.h	57;"	d
SPLAY_HEAD	WIN32-Code/tree.h	734;"	d
SPLAY_INF	WIN32-Code/tree.h	274;"	d
SPLAY_INF	WIN32-Code/tree.h	951;"	d
SPLAY_INIT	WIN32-Code/tree.h	65;"	d
SPLAY_INIT	WIN32-Code/tree.h	742;"	d
SPLAY_INITIALIZER	WIN32-Code/tree.h	62;"	d
SPLAY_INITIALIZER	WIN32-Code/tree.h	739;"	d
SPLAY_INSERT	WIN32-Code/tree.h	276;"	d
SPLAY_INSERT	WIN32-Code/tree.h	953;"	d
SPLAY_LEFT	WIN32-Code/tree.h	752;"	d
SPLAY_LEFT	WIN32-Code/tree.h	75;"	d
SPLAY_LINKLEFT	WIN32-Code/tree.h	770;"	d
SPLAY_LINKLEFT	WIN32-Code/tree.h	93;"	d
SPLAY_LINKRIGHT	WIN32-Code/tree.h	776;"	d
SPLAY_LINKRIGHT	WIN32-Code/tree.h	99;"	d
SPLAY_MAX	WIN32-Code/tree.h	282;"	d
SPLAY_MAX	WIN32-Code/tree.h	959;"	d
SPLAY_MIN	WIN32-Code/tree.h	280;"	d
SPLAY_MIN	WIN32-Code/tree.h	957;"	d
SPLAY_NEGINF	WIN32-Code/tree.h	273;"	d
SPLAY_NEGINF	WIN32-Code/tree.h	950;"	d
SPLAY_NEXT	WIN32-Code/tree.h	279;"	d
SPLAY_NEXT	WIN32-Code/tree.h	956;"	d
SPLAY_PROTOTYPE	WIN32-Code/tree.h	114;"	d
SPLAY_PROTOTYPE	WIN32-Code/tree.h	791;"	d
SPLAY_REMOVE	WIN32-Code/tree.h	277;"	d
SPLAY_REMOVE	WIN32-Code/tree.h	954;"	d
SPLAY_RIGHT	WIN32-Code/tree.h	753;"	d
SPLAY_RIGHT	WIN32-Code/tree.h	76;"	d
SPLAY_ROOT	WIN32-Code/tree.h	754;"	d
SPLAY_ROOT	WIN32-Code/tree.h	77;"	d
SPLAY_ROTATE_LEFT	WIN32-Code/tree.h	764;"	d
SPLAY_ROTATE_LEFT	WIN32-Code/tree.h	87;"	d
SPLAY_ROTATE_RIGHT	WIN32-Code/tree.h	758;"	d
SPLAY_ROTATE_RIGHT	WIN32-Code/tree.h	81;"	d
STDC_HEADERS	WIN32-Code/config.h	200;"	d
STDC_HEADERS	config.h	294;"	d
STRIP	Makefile	/^STRIP = mipsel-linux-strip$/;"	m
STRIP	include/Makefile	/^STRIP = mipsel-linux-strip$/;"	m
STRIP	sample/Makefile	/^STRIP = mipsel-linux-strip$/;"	m
STRIP	test/Makefile	/^STRIP = mipsel-linux-strip$/;"	m
SUBDIRS	Makefile	/^SUBDIRS = . include sample test$/;"	m
SUBLEVEL	makefile	/^SUBLEVEL=2$/;"	m
SYS_INCLUDES	Makefile	/^SYS_INCLUDES = $/;"	m
SYS_LIBS	Makefile	/^SYS_LIBS = $/;"	m
SYS_SRC	Makefile	/^SYS_SRC = $/;"	m
SetLineCount	event_rpcgen.py	/^    def SetLineCount(self, number):$/;"	m	class:Entry
SetStruct	event_rpcgen.py	/^    def SetStruct(self, struct):$/;"	m	class:Entry
Struct	event_rpcgen.py	/^    def Struct(self, name):$/;"	m	class:CCodeGenerator
Struct	event_rpcgen.py	/^class Struct:$/;"	c
StructCCode	event_rpcgen.py	/^class StructCCode(Struct):$/;"	c
TAILQ_EMPTY	compat/sys/queue.h	301;"	d
TAILQ_END	compat/sys/queue.h	294;"	d
TAILQ_END	event-internal.h	198;"	d
TAILQ_ENTRY	compat/sys/queue.h	284;"	d
TAILQ_ENTRY	include/event2/event_struct.h	136;"	d
TAILQ_ENTRY	include/event2/event_struct.h	71;"	d
TAILQ_FIRST	compat/sys/queue.h	293;"	d
TAILQ_FIRST	event-internal.h	197;"	d
TAILQ_FOREACH	compat/sys/queue.h	304;"	d
TAILQ_FOREACH	event-internal.h	200;"	d
TAILQ_FOREACH_REVERSE	compat/sys/queue.h	309;"	d
TAILQ_HEAD	compat/sys/queue.h	275;"	d
TAILQ_HEAD_INITIALIZER	compat/sys/queue.h	281;"	d
TAILQ_INIT	compat/sys/queue.h	317;"	d
TAILQ_INSERT_AFTER	compat/sys/queue.h	339;"	d
TAILQ_INSERT_BEFORE	compat/sys/queue.h	349;"	d
TAILQ_INSERT_BEFORE	event-internal.h	204;"	d
TAILQ_INSERT_HEAD	compat/sys/queue.h	322;"	d
TAILQ_INSERT_TAIL	compat/sys/queue.h	332;"	d
TAILQ_LAST	compat/sys/queue.h	296;"	d
TAILQ_NEXT	compat/sys/queue.h	295;"	d
TAILQ_NEXT	event-internal.h	199;"	d
TAILQ_PREV	compat/sys/queue.h	299;"	d
TAILQ_REMOVE	compat/sys/queue.h	356;"	d
TAILQ_REPLACE	compat/sys/queue.h	365;"	d
TEST1	test/regress.c	90;"	d	file:
TEST_MAX_INT	test/regress.c	1346;"	d	file:
TEST_NAME	evdns.c	990;"	d	file:
TEST_STR	test/regress_bufferevent.c	403;"	d	file:
TIMER_ABSTIME	compat/sys/_time.h	159;"	d
TIMER_RELTIME	compat/sys/_time.h	158;"	d
TIMESPEC_TO_TIMEVAL	compat/sys/_time.h	61;"	d
TIMEVAL_TO_TIMESPEC	compat/sys/_time.h	57;"	d
TIME_WITH_SYS_TIME	WIN32-Code/config.h	203;"	d
TIME_WITH_SYS_TIME	config.h	297;"	d
TOPDIR	makefile	/^TOPDIR=..\/$/;"	m
TO_SERVER_REQUEST	evdns.c	356;"	d	file:
TRY	evdns.c	3490;"	d	file:
TRY	evdns.c	3538;"	d	file:
TT_BLATHER	test/tinytest_macros.h	52;"	d
TT_DECLARE	test/tinytest_macros.h	41;"	d
TT_DIE	test/tinytest_macros.h	57;"	d
TT_EXIT_TEST_FUNCTION	test/tinytest_macros.h	36;"	d
TT_FAIL	test/tinytest_macros.h	64;"	d
TT_FIRST_USER_FLAG	test/tinytest.h	36;"	d
TT_FORK	test/tinytest.h	30;"	d
TT_GRIPE	test/tinytest_macros.h	49;"	d
TT_ISOLATED	test/regress.h	84;"	d
TT_LEGACY	test/regress.h	80;"	d
TT_NEED_BASE	test/regress.h	78;"	d
TT_NEED_DNS	test/regress.h	79;"	d
TT_NEED_SOCKETPAIR	test/regress.h	77;"	d
TT_NEED_THREADS	test/regress.h	81;"	d
TT_SKIP	test/tinytest.h	32;"	d
TT_STMT_BEGIN	test/tinytest_macros.h	30;"	d
TT_STMT_END	test/tinytest_macros.h	31;"	d
TYPE_A	evdns.c	168;"	d	file:
TYPE_AAAA	evdns.c	171;"	d	file:
TYPE_CNAME	evdns.c	169;"	d	file:
TYPE_PTR	evdns.c	170;"	d	file:
Tag	event_rpcgen.py	/^    def Tag(self):$/;"	m	class:Entry
TranslateList	event_rpcgen.py	/^def TranslateList(mylist, mydict):$/;"	f
Type	event_rpcgen.py	/^    def Type(self):$/;"	m	class:Entry
USE_INTERNAL_NTOP	evutil.c	373;"	d	file:
USE_INTERNAL_PTON	evutil.c	374;"	d	file:
USE_IOVEC_IMPL	buffer.c	1460;"	d	file:
USE_SENDFILE	buffer.c	102;"	d	file:
USE_SENDFILE	buffer.c	105;"	d	file:
USE_SENDFILE	buffer.c	99;"	d	file:
Usage	event_rpcgen.py	/^class Usage(RpcGenError):$/;"	c
VERSION	Makefile	/^VERSION = 2.0.2-alpha$/;"	m
VERSION	WIN32-Code/config.h	206;"	d
VERSION	config.h	300;"	d
VERSION	include/Makefile	/^VERSION = 2.0.2-alpha$/;"	m
VERSION	sample/Makefile	/^VERSION = 2.0.2-alpha$/;"	m
VERSION	test/Makefile	/^VERSION = 2.0.2-alpha$/;"	m
VERSION_INFO	Makefile	/^VERSION_INFO = 2:0:0$/;"	m
Verify	event_rpcgen.py	/^    def Verify(self):$/;"	m	class:Entry
Verify	event_rpcgen.py	/^    def Verify(self):$/;"	m	class:EntryBytes
WIN32_LEAN_AND_MEAN	event.c	33;"	d	file:
WIN32_LEAN_AND_MEAN	event.c	35;"	d	file:
WIN32_LEAN_AND_MEAN	event.h	181;"	d
WIN32_LEAN_AND_MEAN	event.h	183;"	d
WIN32_LEAN_AND_MEAN	event_tagging.c	39;"	d	file:
WIN32_LEAN_AND_MEAN	event_tagging.c	42;"	d	file:
WIN32_LEAN_AND_MEAN	evmap.c	31;"	d	file:
WIN32_LEAN_AND_MEAN	evmap.c	33;"	d	file:
WIN32_LEAN_AND_MEAN	evrpc.c	32;"	d	file:
WIN32_LEAN_AND_MEAN	evrpc.c	35;"	d	file:
WIN32_LEAN_AND_MEAN	evthread_win32.c	32;"	d	file:
WIN32_LEAN_AND_MEAN	evthread_win32.c	34;"	d	file:
WIN32_LEAN_AND_MEAN	evutil.c	33;"	d	file:
WIN32_LEAN_AND_MEAN	evutil.c	35;"	d	file:
WIN32_LEAN_AND_MEAN	include/event2/bufferevent.h	69;"	d
WIN32_LEAN_AND_MEAN	include/event2/bufferevent.h	71;"	d
WIN32_LEAN_AND_MEAN	include/event2/bufferevent_struct.h	55;"	d
WIN32_LEAN_AND_MEAN	include/event2/bufferevent_struct.h	57;"	d
WIN32_LEAN_AND_MEAN	include/event2/event.h	54;"	d
WIN32_LEAN_AND_MEAN	include/event2/event.h	56;"	d
WIN32_LEAN_AND_MEAN	include/event2/event_compat.h	53;"	d
WIN32_LEAN_AND_MEAN	include/event2/event_compat.h	55;"	d
WIN32_LEAN_AND_MEAN	include/event2/event_struct.h	53;"	d
WIN32_LEAN_AND_MEAN	include/event2/event_struct.h	55;"	d
WIN32_LEAN_AND_MEAN	include/event2/http.h	38;"	d
WIN32_LEAN_AND_MEAN	include/event2/http.h	41;"	d
WIN32_LEAN_AND_MEAN	include/event2/http_compat.h	53;"	d
WIN32_LEAN_AND_MEAN	include/event2/http_compat.h	55;"	d
WIN32_LEAN_AND_MEAN	include/event2/tag.h	52;"	d
WIN32_LEAN_AND_MEAN	include/event2/tag.h	54;"	d
WIN32_LEAN_AND_MEAN	log.c	45;"	d	file:
WIN32_LEAN_AND_MEAN	log.c	47;"	d	file:
WIN32_LEAN_AND_MEAN	signal.c	34;"	d	file:
WIN32_LEAN_AND_MEAN	signal.c	37;"	d	file:
WIN_NS_9X_KEY	evdns.c	3482;"	d	file:
WIN_NS_NT_KEY	evdns.c	3483;"	d	file:
WSABUF_FROM_EVBUFFER_IOV	evbuffer-internal.h	270;"	d
XFREE	WIN32-Code/win32.c	48;"	d	file:
ZERO_CHAIN	buffer.c	549;"	d	file:
ZLIB_LIBS	Makefile	/^ZLIB_LIBS = $/;"	m
ZLIB_LIBS	include/Makefile	/^ZLIB_LIBS = $/;"	m
ZLIB_LIBS	sample/Makefile	/^ZLIB_LIBS = $/;"	m
ZLIB_LIBS	test/Makefile	/^ZLIB_LIBS = $/;"	m
_BUFFEREVENT_INTERNAL_H_	bufferevent-internal.h	27;"	d
_DEFER_INTERNAL_H_	defer-internal.h	27;"	d
_EVBUFFER_DECREMENT_LOCK_COUNT	evbuffer-internal.h	213;"	d
_EVBUFFER_INCREMENT_LOCK_COUNT	evbuffer-internal.h	209;"	d
_EVBUFFER_INTERNAL_H_	evbuffer-internal.h	28;"	d
_EVBUFFER_IOVEC_IS_NATIVE	include/event2/buffer.h	103;"	d
_EVDNS_H_	evdns.h	28;"	d
_EVENT2_BUFFEREVENT_COMPAT_H_	include/event2/bufferevent_compat.h	29;"	d
_EVENT2_BUFFEREVENT_H_	include/event2/bufferevent.h	28;"	d
_EVENT2_BUFFEREVENT_STRUCT_H_	include/event2/bufferevent_struct.h	28;"	d
_EVENT2_BUFFER_COMPAT_H_	include/event2/buffer_compat.h	28;"	d
_EVENT2_BUFFER_H_	include/event2/buffer.h	27;"	d
_EVENT2_DNS_COMPAT_H_	include/event2/dns_compat.h	28;"	d
_EVENT2_DNS_H_	include/event2/dns.h	161;"	d
_EVENT2_DNS_STRUCT_H_	include/event2/dns_struct.h	28;"	d
_EVENT2_EVENT_COMPAT_H_	include/event2/event_compat.h	28;"	d
_EVENT2_EVENT_H_	include/event2/event.h	28;"	d
_EVENT2_EVENT_STRUCT_H_	include/event2/event_struct.h	28;"	d
_EVENT2_HTTP_COMPAT_H_	include/event2/http_compat.h	28;"	d
_EVENT2_HTTP_H_	include/event2/http.h	28;"	d
_EVENT2_HTTP_STRUCT_H_	include/event2/http_struct.h	28;"	d
_EVENT2_LISTENER_H_	include/event2/listener.h	28;"	d
_EVENT2_RPC_COMPAT_H_	include/event2/rpc_compat.h	28;"	d
_EVENT2_RPC_H_	include/event2/rpc.h	28;"	d
_EVENT2_RPC_STRUCT_H_	include/event2/rpc_struct.h	28;"	d
_EVENT2_TAG_COMPAT_H_	include/event2/tag_compat.h	28;"	d
_EVENT2_TAG_H_	include/event2/tag.h	28;"	d
_EVENT2_THREAD_H_	include/event2/thread.h	27;"	d
_EVENT2_UTIL_H_	include/event2/util.h	27;"	d
_EVENT_CONFIG_H_	WIN32-Code/event-config.h	11;"	d
_EVENT_CONFIG_H_	event-config.h	11;"	d
_EVENT_DEFINED_TQENTRY	include/event2/event_struct.h	139;"	d
_EVENT_DEFINED_TQENTRY	include/event2/event_struct.h	70;"	d
_EVENT_DNS_USE_CPU_CLOCK_FOR_ID	event-config.h	22;"	d
_EVENT_DNS_USE_GETTIMEOFDAY_FOR_ID	WIN32-Code/event-config.h	25;"	d
_EVENT_HAVE_ARPA_INET_H	event-config.h	28;"	d
_EVENT_HAVE_CLOCK_GETTIME	event-config.h	31;"	d
_EVENT_HAVE_DLFCN_H	event-config.h	37;"	d
_EVENT_HAVE_EPOLL	event-config.h	40;"	d
_EVENT_HAVE_EPOLL_CTL	event-config.h	43;"	d
_EVENT_HAVE_FCNTL	event-config.h	52;"	d
_EVENT_HAVE_FCNTL_H	WIN32-Code/event-config.h	55;"	d
_EVENT_HAVE_FCNTL_H	event-config.h	55;"	d
_EVENT_HAVE_GETADDRINFO	event-config.h	58;"	d
_EVENT_HAVE_GETNAMEINFO	event-config.h	61;"	d
_EVENT_HAVE_GETTIMEOFDAY	event-config.h	64;"	d
_EVENT_HAVE_INET_ATON	event-config.h	67;"	d
_EVENT_HAVE_INET_NTOP	event-config.h	70;"	d
_EVENT_HAVE_INET_PTON	event-config.h	73;"	d
_EVENT_HAVE_INTTYPES_H	event-config.h	76;"	d
_EVENT_HAVE_MEMORY_H	WIN32-Code/event-config.h	85;"	d
_EVENT_HAVE_MEMORY_H	event-config.h	85;"	d
_EVENT_HAVE_MMAP	event-config.h	88;"	d
_EVENT_HAVE_NETINET_IN_H	event-config.h	94;"	d
_EVENT_HAVE_PIPE	event-config.h	97;"	d
_EVENT_HAVE_POLL	event-config.h	100;"	d
_EVENT_HAVE_POLL_H	event-config.h	103;"	d
_EVENT_HAVE_PTHREADS	event-config.h	115;"	d
_EVENT_HAVE_SA_FAMILY_T	event-config.h	118;"	d
_EVENT_HAVE_SELECT	event-config.h	121;"	d
_EVENT_HAVE_SENDFILE	event-config.h	124;"	d
_EVENT_HAVE_SETFD	event-config.h	127;"	d
_EVENT_HAVE_SIGACTION	event-config.h	130;"	d
_EVENT_HAVE_SIGNAL	WIN32-Code/event-config.h	133;"	d
_EVENT_HAVE_SIGNAL	event-config.h	133;"	d
_EVENT_HAVE_STDARG_H	WIN32-Code/event-config.h	139;"	d
_EVENT_HAVE_STDARG_H	event-config.h	139;"	d
_EVENT_HAVE_STDDEF_H	WIN32-Code/event-config.h	142;"	d
_EVENT_HAVE_STDDEF_H	event-config.h	142;"	d
_EVENT_HAVE_STDINT_H	event-config.h	145;"	d
_EVENT_HAVE_STDLIB_H	WIN32-Code/event-config.h	148;"	d
_EVENT_HAVE_STDLIB_H	event-config.h	148;"	d
_EVENT_HAVE_STRINGS_H	WIN32-Code/event-config.h	151;"	d
_EVENT_HAVE_STRINGS_H	event-config.h	151;"	d
_EVENT_HAVE_STRING_H	WIN32-Code/event-config.h	154;"	d
_EVENT_HAVE_STRING_H	event-config.h	154;"	d
_EVENT_HAVE_STRLCPY	event-config.h	157;"	d
_EVENT_HAVE_STRSEP	event-config.h	160;"	d
_EVENT_HAVE_STRTOK_R	event-config.h	163;"	d
_EVENT_HAVE_STRTOLL	event-config.h	166;"	d
_EVENT_HAVE_STRUCT_IN6_ADDR	WIN32-Code/event-config.h	169;"	d
_EVENT_HAVE_STRUCT_IN6_ADDR	event-config.h	169;"	d
_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR16	WIN32-Code/event-config.h	172;"	d
_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR16	event-config.h	172;"	d
_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR32	WIN32-Code/event-config.h	175;"	d
_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR32	event-config.h	175;"	d
_EVENT_HAVE_STRUCT_SOCKADDR_IN6	WIN32-Code/event-config.h	178;"	d
_EVENT_HAVE_STRUCT_SOCKADDR_IN6	event-config.h	178;"	d
_EVENT_HAVE_SYS_EPOLL_H	event-config.h	190;"	d
_EVENT_HAVE_SYS_IOCTL_H	event-config.h	199;"	d
_EVENT_HAVE_SYS_MMAN_H	event-config.h	202;"	d
_EVENT_HAVE_SYS_PARAM_H	event-config.h	205;"	d
_EVENT_HAVE_SYS_QUEUE_H	event-config.h	208;"	d
_EVENT_HAVE_SYS_SELECT_H	event-config.h	211;"	d
_EVENT_HAVE_SYS_SENDFILE_H	event-config.h	214;"	d
_EVENT_HAVE_SYS_SOCKET_H	event-config.h	217;"	d
_EVENT_HAVE_SYS_STAT_H	WIN32-Code/event-config.h	220;"	d
_EVENT_HAVE_SYS_STAT_H	event-config.h	220;"	d
_EVENT_HAVE_SYS_TIME_H	event-config.h	223;"	d
_EVENT_HAVE_SYS_TYPES_H	WIN32-Code/event-config.h	226;"	d
_EVENT_HAVE_SYS_TYPES_H	event-config.h	226;"	d
_EVENT_HAVE_SYS_UIO_H	event-config.h	229;"	d
_EVENT_HAVE_TIMERADD	event-config.h	235;"	d
_EVENT_HAVE_TIMERCLEAR	WIN32-Code/event-config.h	238;"	d
_EVENT_HAVE_TIMERCLEAR	event-config.h	238;"	d
_EVENT_HAVE_TIMERCMP	WIN32-Code/event-config.h	241;"	d
_EVENT_HAVE_TIMERCMP	event-config.h	241;"	d
_EVENT_HAVE_TIMERISSET	WIN32-Code/event-config.h	244;"	d
_EVENT_HAVE_TIMERISSET	event-config.h	244;"	d
_EVENT_HAVE_UINT16_T	event-config.h	247;"	d
_EVENT_HAVE_UINT32_T	event-config.h	250;"	d
_EVENT_HAVE_UINT64_T	event-config.h	253;"	d
_EVENT_HAVE_UINT8_T	event-config.h	256;"	d
_EVENT_HAVE_UNISTD_H	event-config.h	259;"	d
_EVENT_HAVE_VASPRINTF	event-config.h	262;"	d
_EVENT_HT_H	ht-internal.h	9;"	d
_EVENT_H_	event.h	28;"	d
_EVENT_INTERNAL_H_	event-internal.h	28;"	d
_EVENT_IOCP_INTERNAL_H	iocp-internal.h	28;"	d
_EVENT_IPV6_INTERNAL_H	ipv6-internal.h	31;"	d
_EVENT_LOG_DEBUG	include/event2/event.h	229;"	d
_EVENT_LOG_ERR	include/event2/event.h	232;"	d
_EVENT_LOG_MSG	include/event2/event.h	230;"	d
_EVENT_LOG_WARN	include/event2/event.h	231;"	d
_EVENT_MM_INTERNAL_H	mm-internal.h	27;"	d
_EVENT_NUMERIC_VERSION	WIN32-Code/event-config.h	268;"	d
_EVENT_NUMERIC_VERSION	event-config.h	268;"	d
_EVENT_PACKAGE	WIN32-Code/event-config.h	271;"	d
_EVENT_PACKAGE	event-config.h	271;"	d
_EVENT_PACKAGE_BUGREPORT	WIN32-Code/event-config.h	274;"	d
_EVENT_PACKAGE_BUGREPORT	event-config.h	274;"	d
_EVENT_PACKAGE_NAME	WIN32-Code/event-config.h	277;"	d
_EVENT_PACKAGE_NAME	event-config.h	277;"	d
_EVENT_PACKAGE_STRING	WIN32-Code/event-config.h	280;"	d
_EVENT_PACKAGE_STRING	event-config.h	280;"	d
_EVENT_PACKAGE_TARNAME	WIN32-Code/event-config.h	283;"	d
_EVENT_PACKAGE_TARNAME	event-config.h	283;"	d
_EVENT_PACKAGE_VERSION	WIN32-Code/event-config.h	286;"	d
_EVENT_PACKAGE_VERSION	event-config.h	286;"	d
_EVENT_SIZEOF_INT	WIN32-Code/event-config.h	293;"	d
_EVENT_SIZEOF_INT	event-config.h	293;"	d
_EVENT_SIZEOF_LONG	WIN32-Code/event-config.h	296;"	d
_EVENT_SIZEOF_LONG	event-config.h	296;"	d
_EVENT_SIZEOF_LONG_LONG	WIN32-Code/event-config.h	299;"	d
_EVENT_SIZEOF_LONG_LONG	event-config.h	299;"	d
_EVENT_SIZEOF_SHORT	WIN32-Code/event-config.h	302;"	d
_EVENT_SIZEOF_SHORT	event-config.h	302;"	d
_EVENT_STDC_HEADERS	WIN32-Code/event-config.h	305;"	d
_EVENT_STDC_HEADERS	event-config.h	305;"	d
_EVENT_TIME_WITH_SYS_TIME	WIN32-Code/event-config.h	308;"	d
_EVENT_TIME_WITH_SYS_TIME	event-config.h	308;"	d
_EVENT_UTIL_INTERNAL_H	util-internal.h	27;"	d
_EVENT_VERSION	WIN32-Code/event-config.h	311;"	d
_EVENT_VERSION	event-config.h	311;"	d
_EVENT___func__	WIN32-Code/event-config.h	314;"	d
_EVENT_inline	WIN32-Code/event-config.h	322;"	d
_EVENT_socklen_t	WIN32-Code/event-config.h	332;"	d
_EVENT_ssize_t	WIN32-Code/event-config.h	335;"	d
_EVHTTP_H_	evhttp.h	28;"	d
_EVLOCK_SORTLOCKS	evthread-internal.h	88;"	d
_EVMAP_H_	evmap-internal.h	27;"	d
_EVRPC_H_	evrpc.h	28;"	d
_EVRPC_INTERNAL_H_	evrpc-internal.h	28;"	d
_EVSIGNAL_H_	evsignal-internal.h	28;"	d
_EVTHREAD_INTERNAL_H_	evthread-internal.h	27;"	d
_EVUTIL_H_	evutil.h	27;"	d
_EVUTIL_NIL_STMT	util-internal.h	45;"	d
_FORTIFY_SOURCE	evdns.c	80;"	d	file:
_GNU_SOURCE	buffer.c	40;"	d	file:
_GNU_SOURCE	evdns.c	58;"	d	file:
_GNU_SOURCE	evthread_pthread.c	31;"	d	file:
_HTTP_INTERNAL_H_	http-internal.h	11;"	d
_HT_BUCKET	ht-internal.h	38;"	d
_HT_FIND_OR_INSERT	ht-internal.h	404;"	d
_HT_FOI_INSERT	ht-internal.h	419;"	d
_HT_SET_HASH	ht-internal.h	97;"	d
_LOG_H_	log-internal.h	28;"	d
_MIN_HEAP_H_	minheap-internal.h	29;"	d
_REENTRANT	evdns.c	60;"	d	file:
_REENTRANT	http.c	31;"	d	file:
_REGRESS_H_	test/regress.h	28;"	d
_STRLCPY_INTERNAL_H_	strlcpy-internal.h	2;"	d
_SYS_QUEUE_H_	compat/sys/queue.h	36;"	d
_SYS_TIME_H_	compat/sys/_time.h	36;"	d
_SYS_TREE_H_	WIN32-Code/tree.h	28;"	d
_SYS_TREE_H_	WIN32-Code/tree.h	705;"	d
_TINYTEST_H	test/tinytest.h	27;"	d
_TINYTEST_MACROS_H	test/tinytest_macros.h	27;"	d
_TT_ENABLED	test/tinytest.h	34;"	d
___REGRESS_RPC_	test/regress.gen.h	6;"	d
__func__	WIN32-Code/config.h	210;"	d
__func__	WIN32-Code/config.h	212;"	d
__func__	sample/signal-test.c	31;"	d	file:
__func__	sample/time-test.c	34;"	d	file:
__func__	util-internal.h	41;"	d
__init__	event_rpcgen.py	/^        def __init__(self, why):$/;"	m	class:RpcGenError
__init__	event_rpcgen.py	/^    def __init__(self):$/;"	m	class:CCodeGenerator
__init__	event_rpcgen.py	/^    def __init__(self, argv):$/;"	m	class:CommandLine
__init__	event_rpcgen.py	/^    def __init__(self, argv0):$/;"	m	class:Usage
__init__	event_rpcgen.py	/^    def __init__(self, entry):$/;"	m	class:EntryArray
__init__	event_rpcgen.py	/^    def __init__(self, name):$/;"	m	class:Struct
__init__	event_rpcgen.py	/^    def __init__(self, name):$/;"	m	class:StructCCode
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag):$/;"	m	class:Entry
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag):$/;"	m	class:EntryString
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag):$/;"	m	class:EntryVarBytes
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag, bits=32):$/;"	m	class:EntryInt
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag, length):$/;"	m	class:EntryBytes
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag, refname):$/;"	m	class:EntryStruct
__kill_base	test/regress.gen.c	/^static struct kill_access_ __kill_base = {$/;"	v	typeref:struct:kill_access_	file:
__msg_base	test/regress.gen.c	/^static struct msg_access_ __msg_base = {$/;"	v	typeref:struct:msg_access_	file:
__run_base	test/regress.gen.c	/^static struct run_access_ __run_base = {$/;"	v	typeref:struct:run_access_	file:
__str__	event_rpcgen.py	/^        def __str__(self):$/;"	m	class:RpcGenError	file:
_bufferevent_decref_and_unlock	bufferevent.c	/^_bufferevent_decref_and_unlock(struct bufferevent *bufev)$/;"	f
_bufferevent_del_generic_timeout_cbs	bufferevent.c	/^_bufferevent_del_generic_timeout_cbs(struct bufferevent *bev)$/;"	f
_bufferevent_generic_adj_timeouts	bufferevent.c	/^_bufferevent_generic_adj_timeouts(struct bufferevent *bev)$/;"	f
_bufferevent_incref_and_lock	bufferevent.c	/^_bufferevent_incref_and_lock(struct bufferevent *bufev)$/;"	f
_bufferevent_init_generic_timeout_cbs	bufferevent.c	/^_bufferevent_init_generic_timeout_cbs(struct bufferevent *bev)$/;"	f
_bufferevent_run_eventcb	bufferevent.c	/^_bufferevent_run_eventcb(struct bufferevent *bufev, short what)$/;"	f
_bufferevent_run_readcb	bufferevent.c	/^_bufferevent_run_readcb(struct bufferevent *bufev)$/;"	f
_bufferevent_run_writecb	bufferevent.c	/^_bufferevent_run_writecb(struct bufferevent *bufev)$/;"	f
_ev	include/event2/event_struct.h	/^	} _ev;$/;"	m	struct:event	typeref:union:event::__anon3
_evbuffer_chain_pin	buffer.c	/^_evbuffer_chain_pin(struct evbuffer_chain *chain, unsigned flag)$/;"	f
_evbuffer_chain_unpin	buffer.c	/^_evbuffer_chain_unpin(struct evbuffer_chain *chain, unsigned flag)$/;"	f
_evbuffer_decref_and_unlock	buffer.c	/^_evbuffer_decref_and_unlock(struct evbuffer *buffer)$/;"	f
_evbuffer_expand_fast	buffer.c	/^_evbuffer_expand_fast(struct evbuffer *buf, size_t datlen)$/;"	f
_evbuffer_incref	buffer.c	/^_evbuffer_incref(struct evbuffer *buf)$/;"	f
_evbuffer_overlapped_get_fd	buffer_iocp.c	/^_evbuffer_overlapped_get_fd(struct evbuffer *buf)$/;"	f
_evbuffer_read_setup_vecs	buffer.c	/^_evbuffer_read_setup_vecs(struct evbuffer *buf, ev_ssize_t howmuch,$/;"	f
_evbuffer_validate	test/regress_buffer.c	/^_evbuffer_validate(struct evbuffer *buf)$/;"	f	file:
_evdns_log	evdns.c	/^_evdns_log(int warn, const char *fmt, ...)$/;"	f	file:
_evdns_nameserver_add_impl	evdns.c	/^_evdns_nameserver_add_impl(struct evdns_base *base, const struct sockaddr *address, int addrlen) {$/;"	f	file:
_event_debugx	log.c	/^_event_debugx(const char *fmt, ...)$/;"	f
_event_initialized	event.c	/^_event_initialized(struct event *ev, int need_fd)$/;"	f
_event_iocp_port_unlock_and_free	event_iocp.c	/^_event_iocp_port_unlock_and_free(struct event_iocp_port *port)$/;"	f	file:
_event_strlcpy	strlcpy.c	/^_event_strlcpy(dst, src, siz)$/;"	f
_evrpc_hooks	evrpc-internal.h	/^struct _evrpc_hooks {$/;"	s
_evsig_restore_handler	signal.c	/^_evsig_restore_handler(struct event_base *base, int evsignal)$/;"	f
_evsig_set_handler	signal.c	/^_evsig_set_handler(struct event_base *base,$/;"	f
_evthread_id_fn	event.c	/^unsigned long (*_evthread_id_fn)(void) = NULL;$/;"	v
_evthread_lock_alloc_fn	event.c	/^void *(*_evthread_lock_alloc_fn)(void) = NULL;$/;"	v
_evthread_lock_free_fn	event.c	/^void (*_evthread_lock_free_fn)(void *) = NULL;$/;"	v
_evthread_locking_fn	event.c	/^void (*_evthread_locking_fn)(int mode, void *lock) = NULL;$/;"	v
_http_close_detection	test/regress_http.c	/^_http_close_detection(int with_delay)$/;"	f	file:
_http_connection_test	test/regress_http.c	/^_http_connection_test(int persistent)$/;"	f	file:
_http_incomplete_test	test/regress_http.c	/^_http_incomplete_test(int use_timeout)$/;"	f	file:
_http_stream_in_test	test/regress_http.c	/^_http_stream_in_test(char const *url,$/;"	f	file:
_internal	include/event2/buffer.h	/^	} _internal;$/;"	m	struct:evbuffer_ptr	typeref:struct:evbuffer_ptr::__anon6
_mm_free_fn	event.c	/^static void (*_mm_free_fn)(void *p) = NULL;$/;"	v	file:
_mm_malloc_fn	event.c	/^static void *(*_mm_malloc_fn)(size_t sz) = NULL;$/;"	v	file:
_mm_realloc_fn	event.c	/^static void *(*_mm_realloc_fn)(void *p, size_t sz) = NULL;$/;"	v	file:
_rpc_hook_ctx	test/regress_rpc.c	/^struct _rpc_hook_ctx {$/;"	s	file:
_testcase_run_bare	test/tinytest.c	/^_testcase_run_bare(const struct testcase_t *testcase)$/;"	f	file:
_testcase_run_forked	test/tinytest.c	/^_testcase_run_forked(const struct testgroup_t *group,$/;"	f	file:
_tinytest_get_verbosity	test/tinytest.c	/^_tinytest_get_verbosity(void)$/;"	f
_tinytest_set_flag	test/tinytest.c	/^_tinytest_set_flag(struct testgroup_t *groups, const char *arg, unsigned long flag)$/;"	f
_tinytest_set_test_failed	test/tinytest.c	/^_tinytest_set_test_failed(void)$/;"	f
_tinytest_set_test_skipped	test/tinytest.c	/^_tinytest_set_test_skipped(void)$/;"	f
_tt_want	test/tinytest_macros.h	89;"	d
_warn_helper	log.c	/^_warn_helper(int severity, const char *errstr, const char *fmt, va_list ap)$/;"	f	file:
a	evdns.c	/^		} a;$/;"	m	union:reply::__anon7	typeref:struct:reply::__anon7::__anon8	file:
a	minheap-internal.h	/^    unsigned n, a;$/;"	m	struct:min_heap
aaaa	evdns.c	/^		} aaaa;$/;"	m	union:reply::__anon7	typeref:struct:reply::__anon7::__anon9	file:
abs_builddir	Makefile	/^abs_builddir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha$/;"	m
abs_builddir	include/Makefile	/^abs_builddir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/include$/;"	m
abs_builddir	sample/Makefile	/^abs_builddir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/sample$/;"	m
abs_builddir	test/Makefile	/^abs_builddir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/test$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha$/;"	m
abs_srcdir	include/Makefile	/^abs_srcdir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/include$/;"	m
abs_srcdir	sample/Makefile	/^abs_srcdir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/sample$/;"	m
abs_srcdir	test/Makefile	/^abs_srcdir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/test$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha$/;"	m
abs_top_builddir	include/Makefile	/^abs_top_builddir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha$/;"	m
abs_top_builddir	sample/Makefile	/^abs_top_builddir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha$/;"	m
abs_top_builddir	test/Makefile	/^abs_top_builddir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha$/;"	m
abs_top_srcdir	include/Makefile	/^abs_top_srcdir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha$/;"	m
abs_top_srcdir	sample/Makefile	/^abs_top_srcdir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha$/;"	m
abs_top_srcdir	test/Makefile	/^abs_top_srcdir = \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = $/;"	m
ac_ct_CC	include/Makefile	/^ac_ct_CC = $/;"	m
ac_ct_CC	sample/Makefile	/^ac_ct_CC = $/;"	m
ac_ct_CC	test/Makefile	/^ac_ct_CC = $/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	include/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	sample/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	test/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_F77	Makefile	/^ac_ct_F77 = $/;"	m
ac_ct_F77	include/Makefile	/^ac_ct_F77 = $/;"	m
ac_ct_F77	sample/Makefile	/^ac_ct_F77 = $/;"	m
ac_ct_F77	test/Makefile	/^ac_ct_F77 = $/;"	m
accept_socket	http.c	/^accept_socket(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
action_assign	test/regress.gen.h	/^  int (*action_assign)(struct kill *, const char *);$/;"	m	struct:kill_access_
action_data	test/regress.gen.h	/^  char *action_data;$/;"	m	struct:kill
action_get	test/regress.gen.h	/^  int (*action_get)(struct kill *, char * *);$/;"	m	struct:kill_access_
action_set	test/regress.gen.h	/^  ev_uint8_t action_set;$/;"	m	struct:kill
activequeues	event-internal.h	/^	struct event_list **activequeues;$/;"	m	struct:event_base	typeref:struct:event_base::event_list
acx_pthread_config	Makefile	/^acx_pthread_config = $/;"	m
acx_pthread_config	include/Makefile	/^acx_pthread_config = $/;"	m
acx_pthread_config	sample/Makefile	/^acx_pthread_config = $/;"	m
acx_pthread_config	test/Makefile	/^acx_pthread_config = $/;"	m
add	event-internal.h	/^	int (*add)(struct event_base *, evutil_socket_t fd, short old, short events, void *fdinfo);$/;"	m	struct:eventop
additional	evdns.c	/^	struct server_reply_item *additional; \/* linked list of additional RRs *\/$/;"	m	struct:server_request	typeref:struct:server_request::server_reply_item	file:
addr	evdns.c	/^	struct sockaddr_storage addr; \/* Where to send the response *\/$/;"	m	struct:server_request	typeref:struct:server_request::sockaddr_storage	file:
addr	test/regress_util.c	/^	const char *addr;$/;"	m	struct:ipv4_entry	file:
addr	test/regress_util.c	/^	const char *addr;$/;"	m	struct:ipv6_entry	file:
addr	test/regress_util.c	/^	const char *addr;$/;"	m	struct:sa_port_ent	file:
addrcount	evdns.c	/^			u32 addrcount;$/;"	m	struct:reply::__anon7::__anon8	file:
addrcount	evdns.c	/^			u32 addrcount;$/;"	m	struct:reply::__anon7::__anon9	file:
address	evdns.c	/^	struct sockaddr_storage address;$/;"	m	struct:nameserver	typeref:struct:nameserver::sockaddr_storage	file:
address	http-internal.h	/^	char *address;			\/* address to connect to *\/$/;"	m	struct:evhttp_connection
addresses	evdns.c	/^			struct in6_addr addresses[MAX_ADDRS];$/;"	m	struct:reply::__anon7::__anon9	typeref:struct:reply::__anon7::__anon9::in6_addr	file:
addresses	evdns.c	/^			u32 addresses[MAX_ADDRS];$/;"	m	struct:reply::__anon7::__anon8	file:
addrinfo	http.c	/^struct addrinfo {$/;"	s	file:
addrlen	evdns.c	/^	socklen_t addrlen; \/* length of addr *\/$/;"	m	struct:server_request	file:
addrlen	evdns.c	/^	socklen_t addrlen;$/;"	m	struct:nameserver	file:
adj_timeouts	bufferevent-internal.h	/^	void (*adj_timeouts)(struct bufferevent *);$/;"	m	struct:bufferevent_ops
ai_addr	http.c	/^	struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	file:
ai_addrlen	http.c	/^	size_t ai_addrlen;$/;"	m	struct:addrinfo	file:
ai_family	http.c	/^	int ai_family;$/;"	m	struct:addrinfo	file:
ai_next	http.c	/^	struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	file:
ai_protocol	http.c	/^	int ai_protocol;$/;"	m	struct:addrinfo	file:
ai_socktype	http.c	/^	int ai_socktype;$/;"	m	struct:addrinfo	file:
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DEPENDENCIES_1	test/Makefile	/^am__DEPENDENCIES_1 = $(am__append_1)$/;"	m
am__DEPENDENCIES_2	test/Makefile	/^am__DEPENDENCIES_2 =$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/acx_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	include/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/acx_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	sample/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/acx_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	test/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/acx_pthread.m4 \\$/;"	m
am__append_1	Makefile	/^am__append_1 = libevent_pthreads.la$/;"	m
am__append_1	test/Makefile	/^am__append_1 = ..\/libevent_pthreads.la$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	include/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	sample/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	test/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	include/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	sample/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	test/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	sample/Makefile	/^am__depfiles_maybe =$/;"	m
am__depfiles_maybe	test/Makefile	/^am__depfiles_maybe =$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	include/Makefile	/^am__include = include$/;"	m
am__include	sample/Makefile	/^am__include = include$/;"	m
am__include	test/Makefile	/^am__include = include$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \\$/;"	m
am__installdirs	include/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	include/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	sample/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	test/Makefile	/^am__leading_dot = .$/;"	m
am__libevent_core_la_SOURCES_DIST	Makefile	/^am__libevent_core_la_SOURCES_DIST = event.c buffer.c bufferevent.c \\$/;"	m
am__libevent_la_SOURCES_DIST	Makefile	/^am__libevent_la_SOURCES_DIST = event.c buffer.c bufferevent.c \\$/;"	m
am__libevent_pthreads_la_SOURCES_DIST	Makefile	/^am__libevent_pthreads_la_SOURCES_DIST = evthread_pthread.c$/;"	m
am__objects_1	test/Makefile	/^am__objects_1 = regress-regress_pthread.$(OBJEXT)$/;"	m
am__objects_2	Makefile	/^am__objects_2 = event.lo buffer.lo bufferevent.lo bufferevent_sock.lo \\$/;"	m
am__objects_3	Makefile	/^am__objects_3 = event_tagging.lo http.lo evdns.lo evrpc.lo$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	include/Makefile	/^am__quote = $/;"	m
am__quote	sample/Makefile	/^am__quote = $/;"	m
am__quote	test/Makefile	/^am__quote = $/;"	m
am__regress_SOURCES_DIST	test/Makefile	/^am__regress_SOURCES_DIST = regress.c regress_buffer.c regress_http.c \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	Makefile	/^am__strip_dir = `echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	include/Makefile	/^am__strip_dir = `echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	include/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	sample/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	test/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	include/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	sample/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	test/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	include/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	include/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_bench_OBJECTS	test/Makefile	/^am_bench_OBJECTS = bench.$(OBJEXT)$/;"	m
am_bench_cascade_OBJECTS	test/Makefile	/^am_bench_cascade_OBJECTS = bench_cascade.$(OBJEXT)$/;"	m
am_bench_http_OBJECTS	test/Makefile	/^am_bench_http_OBJECTS = bench_http.$(OBJEXT)$/;"	m
am_bench_httpclient_OBJECTS	test/Makefile	/^am_bench_httpclient_OBJECTS = bench_httpclient.$(OBJEXT)$/;"	m
am_libevent_core_la_OBJECTS	Makefile	/^am_libevent_core_la_OBJECTS = $(am__objects_2)$/;"	m
am_libevent_extra_la_OBJECTS	Makefile	/^am_libevent_extra_la_OBJECTS = $(am__objects_3)$/;"	m
am_libevent_la_OBJECTS	Makefile	/^am_libevent_la_OBJECTS = $(am__objects_2) $(am__objects_3)$/;"	m
am_libevent_pthreads_la_OBJECTS	Makefile	/^am_libevent_pthreads_la_OBJECTS = evthread_pthread.lo$/;"	m
am_libevent_pthreads_la_rpath	Makefile	/^am_libevent_pthreads_la_rpath = -rpath $(libdir)$/;"	m
am_regress_OBJECTS	test/Makefile	/^am_regress_OBJECTS = regress-regress.$(OBJEXT) \\$/;"	m
am_test_eof_OBJECTS	test/Makefile	/^am_test_eof_OBJECTS = test-eof.$(OBJEXT)$/;"	m
am_test_init_OBJECTS	test/Makefile	/^am_test_init_OBJECTS = test-init.$(OBJEXT)$/;"	m
am_test_time_OBJECTS	test/Makefile	/^am_test_time_OBJECTS = test-time.$(OBJEXT)$/;"	m
am_test_weof_OBJECTS	test/Makefile	/^am_test_weof_OBJECTS = test-weof.$(OBJEXT)$/;"	m
answer	evdns.c	/^	struct server_reply_item *answer; \/* linked list of answer RRs *\/$/;"	m	struct:server_request	typeref:struct:server_request::server_reply_item	file:
arg	defer-internal.h	/^	void *arg;$/;"	m	struct:deferred_cb
arg	event.c	/^	void *arg;$/;"	m	struct:event_once	file:
as_func_failure	configure	/^as_func_failure () {$/;"	f
as_func_ret_failure	configure	/^as_func_ret_failure () {$/;"	f
as_func_ret_success	configure	/^as_func_ret_success () {$/;"	f
as_func_success	configure	/^as_func_success () {$/;"	f
attack_assign	test/regress.gen.h	/^  int (*attack_assign)(struct msg *, const struct kill*);$/;"	m	struct:msg_access_
attack_data	test/regress.gen.h	/^  struct kill* attack_data;$/;"	m	struct:msg	typeref:struct:msg::kill
attack_get	test/regress.gen.h	/^  int (*attack_get)(struct msg *, struct kill* *);$/;"	m	struct:msg_access_
attack_set	test/regress.gen.h	/^  ev_uint8_t attack_set;$/;"	m	struct:msg
attr_recursive	evthread_pthread.c	/^static pthread_mutexattr_t attr_recursive;$/;"	v	file:
authority	evdns.c	/^	struct server_reply_item *authority; \/* linked list of authority RRs *\/$/;"	m	struct:server_request	typeref:struct:server_request::server_reply_item	file:
avoid_method	event-internal.h	/^	const char *avoid_method;$/;"	m	struct:event_config_entry
base	evdns.c	/^	struct evdns_base *base;$/;"	m	struct:evdns_request	typeref:struct:evdns_request::evdns_base	file:
base	evdns.c	/^	struct evdns_base *base;$/;"	m	struct:nameserver	typeref:struct:nameserver::evdns_base	file:
base	evdns.c	/^	struct evdns_server_request base;$/;"	m	struct:server_request	typeref:struct:server_request::evdns_server_request	file:
base	evrpc-internal.h	/^	struct event_base *base;$/;"	m	struct:evrpc_pool	typeref:struct:evrpc_pool::event_base
base	http-internal.h	/^	struct event_base *base;$/;"	m	struct:evhttp	typeref:struct:evhttp::event_base
base	http-internal.h	/^	struct event_base *base;$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::event_base
base	include/event2/rpc_struct.h	/^	struct evrpc_base *base;$/;"	m	struct:evrpc	typeref:struct:evrpc::evrpc_base
base	test/bench_httpclient.c	/^struct event_base *base = NULL;$/;"	v	typeref:struct:event_base
base	test/regress.gen.h	/^  struct kill_access_ *base;$/;"	m	struct:kill	typeref:struct:kill::kill_access_
base	test/regress.gen.h	/^  struct msg_access_ *base;$/;"	m	struct:msg	typeref:struct:msg::msg_access_
base	test/regress.gen.h	/^  struct run_access_ *base;$/;"	m	struct:run	typeref:struct:run::run_access_
base	test/regress.h	/^	struct event_base *base;$/;"	m	struct:basic_test_data	typeref:struct:basic_test_data::event_base
base	test/regress_http.c	/^static struct event_base *base;$/;"	v	typeref:struct:event_base	file:
basic_cb_args	test/regress.c	/^struct basic_cb_args$/;"	s	file:
basic_read_cb	test/regress.c	/^basic_read_cb(int fd, short event, void *data)$/;"	f	file:
basic_setup	test/regress_main.c	/^const struct testcase_setup_t basic_setup = {$/;"	v	typeref:struct:testcase_setup_t
basic_test_cleanup	test/regress_main.c	/^basic_test_cleanup(const struct testcase_t *testcase, void *ptr)$/;"	f	file:
basic_test_data	test/regress.h	/^struct basic_test_data {$/;"	s
basic_test_setup	test/regress_main.c	/^basic_test_setup(const struct testcase_t *testcase)$/;"	f	file:
basic_thread	test/regress_pthread.c	/^basic_thread(void *arg)$/;"	f	file:
basic_timeout	test/regress_pthread.c	/^basic_timeout(int fd, short what, void *arg)$/;"	f	file:
be_async_ctrl	bufferevent_async.c	/^be_async_ctrl(struct bufferevent *bev, enum bufferevent_ctrl_op op,$/;"	f	file:
be_async_destruct	bufferevent_async.c	/^be_async_destruct(struct bufferevent *bev)$/;"	f	file:
be_async_disable	bufferevent_async.c	/^be_async_disable(struct bufferevent *bev, short what)$/;"	f	file:
be_async_enable	bufferevent_async.c	/^be_async_enable(struct bufferevent *buf, short what)$/;"	f	file:
be_async_flush	bufferevent_async.c	/^be_async_flush(struct bufferevent *bev, short what,$/;"	f	file:
be_async_inbuf_callback	bufferevent_async.c	/^be_async_inbuf_callback(struct evbuffer *buf,$/;"	f	file:
be_async_outbuf_callback	bufferevent_async.c	/^be_async_outbuf_callback(struct evbuffer *buf,$/;"	f	file:
be_filter_ctrl	bufferevent_filter.c	/^be_filter_ctrl(struct bufferevent *bev, enum bufferevent_ctrl_op op,$/;"	f	file:
be_filter_destruct	bufferevent_filter.c	/^be_filter_destruct(struct bufferevent *bev)$/;"	f	file:
be_filter_disable	bufferevent_filter.c	/^be_filter_disable(struct bufferevent *bev, short event)$/;"	f	file:
be_filter_enable	bufferevent_filter.c	/^be_filter_enable(struct bufferevent *bev, short event)$/;"	f	file:
be_filter_eventcb	bufferevent_filter.c	/^be_filter_eventcb(struct bufferevent *underlying, short what, void *_me)$/;"	f	file:
be_filter_flush	bufferevent_filter.c	/^be_filter_flush(struct bufferevent *bufev,$/;"	f	file:
be_filter_process_input	bufferevent_filter.c	/^be_filter_process_input(struct bufferevent_filtered *bevf,$/;"	f	file:
be_filter_process_output	bufferevent_filter.c	/^be_filter_process_output(struct bufferevent_filtered *bevf,$/;"	f	file:
be_filter_readcb	bufferevent_filter.c	/^be_filter_readcb(struct bufferevent *underlying, void *_me)$/;"	f	file:
be_filter_writecb	bufferevent_filter.c	/^be_filter_writecb(struct bufferevent *underlying, void *_me)$/;"	f	file:
be_null_filter	bufferevent_filter.c	/^be_null_filter(struct evbuffer *src, struct evbuffer *dst, ev_ssize_t lim,$/;"	f	file:
be_ops	include/event2/bufferevent_struct.h	/^	const struct bufferevent_ops *be_ops;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::bufferevent_ops
be_pair_destruct	bufferevent_pair.c	/^be_pair_destruct(struct bufferevent *bev)$/;"	f	file:
be_pair_disable	bufferevent_pair.c	/^be_pair_disable(struct bufferevent *bev, short events)$/;"	f	file:
be_pair_enable	bufferevent_pair.c	/^be_pair_enable(struct bufferevent *bufev, short events)$/;"	f	file:
be_pair_flush	bufferevent_pair.c	/^be_pair_flush(struct bufferevent *bev, short iotype,$/;"	f	file:
be_pair_outbuf_cb	bufferevent_pair.c	/^be_pair_outbuf_cb(struct evbuffer *outbuf,$/;"	f	file:
be_pair_transfer	bufferevent_pair.c	/^be_pair_transfer(struct bufferevent *src, struct bufferevent *dst,$/;"	f	file:
be_pair_wants_to_talk	bufferevent_pair.c	/^be_pair_wants_to_talk(struct bufferevent_pair *src,$/;"	f	file:
be_readbuf_full	bufferevent_filter.c	/^be_readbuf_full(struct bufferevent_filtered *bevf,$/;"	f	file:
be_socket_add	bufferevent_sock.c	/^be_socket_add(struct event *ev, const struct timeval *tv)$/;"	f	file:
be_socket_adj_timeouts	bufferevent_sock.c	/^be_socket_adj_timeouts(struct bufferevent *bufev)$/;"	f	file:
be_socket_ctrl	bufferevent_sock.c	/^be_socket_ctrl(struct bufferevent *bev, enum bufferevent_ctrl_op op,$/;"	f	file:
be_socket_destruct	bufferevent_sock.c	/^be_socket_destruct(struct bufferevent *bufev)$/;"	f	file:
be_socket_disable	bufferevent_sock.c	/^be_socket_disable(struct bufferevent *bufev, short event)$/;"	f	file:
be_socket_enable	bufferevent_sock.c	/^be_socket_enable(struct bufferevent *bufev, short event)$/;"	f	file:
be_socket_flush	bufferevent_sock.c	/^be_socket_flush(struct bufferevent *bev, short iotype,$/;"	f	file:
be_socket_setfd	bufferevent_sock.c	/^be_socket_setfd(struct bufferevent *bufev, evutil_socket_t fd)$/;"	f	file:
be_underlying_writebuf_full	bufferevent_filter.c	/^be_underlying_writebuf_full(struct bufferevent_filtered *bevf,$/;"	f	file:
bench_DEPENDENCIES	test/Makefile	/^bench_DEPENDENCIES = ..\/libevent.la$/;"	m
bench_LDADD	test/Makefile	/^bench_LDADD = ..\/libevent.la$/;"	m
bench_OBJECTS	test/Makefile	/^bench_OBJECTS = $(am_bench_OBJECTS)$/;"	m
bench_SOURCES	test/Makefile	/^bench_SOURCES = bench.c$/;"	m
bench_cascade_DEPENDENCIES	test/Makefile	/^bench_cascade_DEPENDENCIES = ..\/libevent.la$/;"	m
bench_cascade_LDADD	test/Makefile	/^bench_cascade_LDADD = ..\/libevent.la$/;"	m
bench_cascade_OBJECTS	test/Makefile	/^bench_cascade_OBJECTS = $(am_bench_cascade_OBJECTS)$/;"	m
bench_cascade_SOURCES	test/Makefile	/^bench_cascade_SOURCES = bench_cascade.c$/;"	m
bench_http_DEPENDENCIES	test/Makefile	/^bench_http_DEPENDENCIES = ..\/libevent.la$/;"	m
bench_http_LDADD	test/Makefile	/^bench_http_LDADD = ..\/libevent.la$/;"	m
bench_http_OBJECTS	test/Makefile	/^bench_http_OBJECTS = $(am_bench_http_OBJECTS)$/;"	m
bench_http_SOURCES	test/Makefile	/^bench_http_SOURCES = bench_http.c$/;"	m
bench_httpclient_DEPENDENCIES	test/Makefile	/^bench_httpclient_DEPENDENCIES = ..\/libevent_core.la$/;"	m
bench_httpclient_LDADD	test/Makefile	/^bench_httpclient_LDADD = ..\/libevent_core.la$/;"	m
bench_httpclient_OBJECTS	test/Makefile	/^bench_httpclient_OBJECTS = $(am_bench_httpclient_OBJECTS)$/;"	m
bench_httpclient_SOURCES	test/Makefile	/^bench_httpclient_SOURCES = bench_httpclient.c$/;"	m
bev	bufferevent-internal.h	/^	struct bufferevent bev;$/;"	m	struct:bufferevent_private	typeref:struct:bufferevent_private::bufferevent
bev	bufferevent_async.c	/^	struct bufferevent_private bev;$/;"	m	struct:bufferevent_async	typeref:struct:bufferevent_async::bufferevent_private	file:
bev	bufferevent_filter.c	/^	struct bufferevent_private bev;$/;"	m	struct:bufferevent_filtered	typeref:struct:bufferevent_filtered::bufferevent_private	file:
bev	bufferevent_pair.c	/^	struct bufferevent_private bev;$/;"	m	struct:bufferevent_pair	typeref:struct:bufferevent_pair::bufferevent_private	file:
bev_async_consider_reading	bufferevent_async.c	/^bev_async_consider_reading(struct bufferevent_async *b)$/;"	f	file:
bev_async_consider_writing	bufferevent_async.c	/^bev_async_consider_writing(struct bufferevent_async *b)$/;"	f	file:
binSCRIPT_INSTALL	Makefile	/^binSCRIPT_INSTALL = $(INSTALL_SCRIPT)$/;"	m
bin_SCRIPTS	Makefile	/^bin_SCRIPTS = event_rpcgen.py$/;"	m
bind_address	http-internal.h	/^	char *bind_address;		\/* address to use for binding the src *\/$/;"	m	struct:evhttp_connection
bind_ev	http-internal.h	/^	struct event  bind_ev;$/;"	m	struct:evhttp_bound_socket	typeref:struct:evhttp_bound_socket::event
bind_port	http-internal.h	/^	u_short bind_port;		\/* local port for binding the src *\/$/;"	m	struct:evhttp_connection
bind_socket	http.c	/^bind_socket(const char *address, ev_uint16_t port, int reuse)$/;"	f	file:
bind_socket_ai	http.c	/^bind_socket_ai(struct addrinfo *ai, int reuse)$/;"	f	file:
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	include/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	sample/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	test/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
both	test/regress.c	/^struct both {$/;"	s	file:
break_cb	test/regress.c	/^break_cb(int fd, short events, void *arg)$/;"	f	file:
buf	buffer_iocp.c	/^	struct evbuffer_overlapped *buf;$/;"	m	struct:buffer_overlapped	typeref:struct:buffer_overlapped::evbuffer_overlapped	file:
bufev	http-internal.h	/^	struct bufferevent *bufev;$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::bufferevent
buffer	buffer_iocp.c	/^	struct evbuffer buffer;$/;"	m	struct:evbuffer_overlapped	typeref:struct:evbuffer_overlapped::evbuffer	file:
buffer	evbuffer-internal.h	/^	unsigned char *buffer;$/;"	m	struct:evbuffer_chain
buffer_len	evbuffer-internal.h	/^	size_t buffer_len;$/;"	m	struct:evbuffer_chain
buffer_overlapped	buffer_iocp.c	/^struct buffer_overlapped {$/;"	s	file:
bufferevent	include/event2/bufferevent_struct.h	/^struct bufferevent {$/;"	s
bufferevent_async	bufferevent_async.c	/^struct bufferevent_async {$/;"	s	file:
bufferevent_async_new	bufferevent_async.c	/^bufferevent_async_new(struct event_base *base,$/;"	f
bufferevent_base_set	bufferevent_sock.c	/^bufferevent_base_set(struct event_base *base, struct bufferevent *bufev)$/;"	f
bufferevent_ctrl_data	bufferevent-internal.h	/^union bufferevent_ctrl_data {$/;"	u
bufferevent_ctrl_op	bufferevent-internal.h	/^enum bufferevent_ctrl_op {$/;"	g
bufferevent_data_cb	include/event2/bufferevent.h	/^typedef void (*bufferevent_data_cb)(struct bufferevent *bev, void *ctx);$/;"	t
bufferevent_disable	bufferevent.c	/^bufferevent_disable(struct bufferevent *bufev, short event)$/;"	f
bufferevent_enable	bufferevent.c	/^bufferevent_enable(struct bufferevent *bufev, short event)$/;"	f
bufferevent_enable_locking	bufferevent.c	/^bufferevent_enable_locking(struct bufferevent *bufev, void *lock)$/;"	f
bufferevent_event_cb	include/event2/bufferevent.h	/^typedef void (*bufferevent_event_cb)(struct bufferevent *bev, short what, void *ctx);$/;"	t
bufferevent_filter_cb	include/event2/bufferevent.h	/^typedef enum bufferevent_filter_result (*bufferevent_filter_cb)($/;"	t	typeref:enum:bufferevent_filter_cb
bufferevent_filter_new	bufferevent_filter.c	/^bufferevent_filter_new(struct bufferevent *underlying,$/;"	f
bufferevent_filter_result	include/event2/bufferevent.h	/^enum bufferevent_filter_result {$/;"	g
bufferevent_filtered	bufferevent_filter.c	/^struct bufferevent_filtered {$/;"	s	file:
bufferevent_filtered_outbuf_cb	bufferevent_filter.c	/^bufferevent_filtered_outbuf_cb(struct evbuffer *buf,$/;"	f	file:
bufferevent_flush	bufferevent.c	/^bufferevent_flush(struct bufferevent *bufev,$/;"	f
bufferevent_flush_mode	include/event2/bufferevent.h	/^enum bufferevent_flush_mode {$/;"	g
bufferevent_free	bufferevent.c	/^bufferevent_free(struct bufferevent *bufev)$/;"	f
bufferevent_generic_read_timeout_cb	bufferevent.c	/^bufferevent_generic_read_timeout_cb(evutil_socket_t fd, short event, void *ctx)$/;"	f	file:
bufferevent_generic_write_timeout_cb	bufferevent.c	/^bufferevent_generic_write_timeout_cb(evutil_socket_t fd, short event, void *ctx)$/;"	f	file:
bufferevent_get_input	bufferevent.c	/^bufferevent_get_input(struct bufferevent *bufev)$/;"	f
bufferevent_get_output	bufferevent.c	/^bufferevent_get_output(struct bufferevent *bufev)$/;"	f
bufferevent_get_underlying	bufferevent.c	/^bufferevent_get_underlying(struct bufferevent *bev)$/;"	f
bufferevent_getfd	bufferevent.c	/^bufferevent_getfd(struct bufferevent *bev)$/;"	f
bufferevent_inbuf_wm_cb	bufferevent.c	/^bufferevent_inbuf_wm_cb(struct evbuffer *buf,$/;"	f	file:
bufferevent_incref	bufferevent.c	/^bufferevent_incref(struct bufferevent *bufev)$/;"	f
bufferevent_init_common	bufferevent.c	/^bufferevent_init_common(struct bufferevent_private *bufev_private,$/;"	f
bufferevent_input_filter	test/regress_bufferevent.c	/^bufferevent_input_filter(struct evbuffer *src, struct evbuffer *dst,$/;"	f	file:
bufferevent_new	bufferevent_sock.c	/^bufferevent_new(evutil_socket_t fd,$/;"	f
bufferevent_ops	bufferevent-internal.h	/^struct bufferevent_ops {$/;"	s
bufferevent_ops_async	bufferevent_async.c	/^const struct bufferevent_ops bufferevent_ops_async = {$/;"	v	typeref:struct:bufferevent_ops
bufferevent_ops_filter	bufferevent_filter.c	/^const struct bufferevent_ops bufferevent_ops_filter = {$/;"	v	typeref:struct:bufferevent_ops
bufferevent_ops_pair	bufferevent_pair.c	/^const struct bufferevent_ops bufferevent_ops_pair = {$/;"	v	typeref:struct:bufferevent_ops
bufferevent_ops_socket	bufferevent_sock.c	/^const struct bufferevent_ops bufferevent_ops_socket = {$/;"	v	typeref:struct:bufferevent_ops
bufferevent_options	include/event2/bufferevent.h	/^enum bufferevent_options {$/;"	g
bufferevent_output_filter	test/regress_bufferevent.c	/^bufferevent_output_filter(struct evbuffer *src, struct evbuffer *dst,$/;"	f	file:
bufferevent_pair	bufferevent_pair.c	/^struct bufferevent_pair {$/;"	s	file:
bufferevent_pair_elt_new	bufferevent_pair.c	/^bufferevent_pair_elt_new(struct event_base *base,$/;"	f	file:
bufferevent_pair_new	bufferevent_pair.c	/^bufferevent_pair_new(struct event_base *base, enum bufferevent_options options,$/;"	f
bufferevent_priority_set	bufferevent_sock.c	/^bufferevent_priority_set(struct bufferevent *bufev, int priority)$/;"	f
bufferevent_private	bufferevent-internal.h	/^struct bufferevent_private {$/;"	s
bufferevent_read	bufferevent.c	/^bufferevent_read(struct bufferevent *bufev, void *data, size_t size)$/;"	f
bufferevent_read_buffer	bufferevent.c	/^bufferevent_read_buffer(struct bufferevent *bufev, struct evbuffer *buf)$/;"	f
bufferevent_readcb	bufferevent_sock.c	/^bufferevent_readcb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
bufferevent_run_deferred_callbacks	bufferevent.c	/^bufferevent_run_deferred_callbacks(struct deferred_cb *_, void *arg)$/;"	f	file:
bufferevent_set_timeouts	bufferevent.c	/^bufferevent_set_timeouts(struct bufferevent *bufev,$/;"	f
bufferevent_setcb	bufferevent.c	/^bufferevent_setcb(struct bufferevent *bufev,$/;"	f
bufferevent_setfd	bufferevent.c	/^bufferevent_setfd(struct bufferevent *bev, evutil_socket_t fd)$/;"	f
bufferevent_settimeout	bufferevent.c	/^bufferevent_settimeout(struct bufferevent *bufev,$/;"	f
bufferevent_setwatermark	bufferevent.c	/^bufferevent_setwatermark(struct bufferevent *bufev, short events,$/;"	f
bufferevent_socket_connect	bufferevent_sock.c	/^bufferevent_socket_connect(struct bufferevent *bev,$/;"	f
bufferevent_socket_new	bufferevent_sock.c	/^bufferevent_socket_new(struct event_base *base, evutil_socket_t fd,$/;"	f
bufferevent_socket_outbuf_cb	bufferevent_sock.c	/^bufferevent_socket_outbuf_cb(struct evbuffer *buf,$/;"	f	file:
bufferevent_testcases	test/regress_bufferevent.c	/^struct testcase_t bufferevent_testcases[] = {$/;"	v	typeref:struct:testcase_t
bufferevent_wm_suspend_read	bufferevent.c	/^bufferevent_wm_suspend_read(struct bufferevent *bufev)$/;"	f
bufferevent_wm_unsuspend_read	bufferevent.c	/^bufferevent_wm_unsuspend_read(struct bufferevent *bufev)$/;"	f
bufferevent_write	bufferevent.c	/^bufferevent_write(struct bufferevent *bufev, const void *data, size_t size)$/;"	f
bufferevent_write_buffer	bufferevent.c	/^bufferevent_write_buffer(struct bufferevent *bufev, struct evbuffer *buf)$/;"	f
bufferevent_writecb	bufferevent_sock.c	/^bufferevent_writecb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
buffers	buffer_iocp.c	/^	WSABUF buffers[MAX_WSABUFS];$/;"	m	struct:buffer_overlapped	file:
build	Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	include/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	sample/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	test/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	include/Makefile	/^build_alias = $/;"	m
build_alias	sample/Makefile	/^build_alias = $/;"	m
build_alias	test/Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = i686$/;"	m
build_cpu	include/Makefile	/^build_cpu = i686$/;"	m
build_cpu	sample/Makefile	/^build_cpu = i686$/;"	m
build_cpu	test/Makefile	/^build_cpu = i686$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_os	include/Makefile	/^build_os = linux-gnu$/;"	m
build_os	sample/Makefile	/^build_os = linux-gnu$/;"	m
build_os	test/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	include/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	sample/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	test/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = pc$/;"	m
build_vendor	include/Makefile	/^build_vendor = pc$/;"	m
build_vendor	sample/Makefile	/^build_vendor = pc$/;"	m
build_vendor	test/Makefile	/^build_vendor = pc$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
builddir	include/Makefile	/^builddir = .$/;"	m
builddir	sample/Makefile	/^builddir = .$/;"	m
builddir	test/Makefile	/^builddir = .$/;"	m
call_count	test/regress_iocp.c	/^	int call_count;$/;"	m	struct:dummy_overlapped	file:
callbacks	evbuffer-internal.h	/^	TAILQ_HEAD(evbuffer_cb_queue, evbuffer_cb_entry) callbacks;$/;"	m	struct:evbuffer
callbacks	http-internal.h	/^	TAILQ_HEAD(httpcbq, evhttp_cb) callbacks;$/;"	m	struct:evhttp
callcount	test/regress.c	/^	unsigned int callcount;$/;"	m	struct:basic_cb_args	file:
called	sample/signal-test.c	/^int called = 0;$/;"	v
called	test/regress.c	/^int called;$/;"	v
called	test/test-eof.c	/^int called = 0;$/;"	v
called	test/test-time.c	/^int called = 0;$/;"	v
called	test/test-weof.c	/^int called = 0;$/;"	v
cases	test/tinytest.h	/^	struct testcase_t *cases; \/** Array, ending with END_OF_TESTCASES *\/$/;"	m	struct:testgroup_t	typeref:struct:testgroup_t::testcase_t
cb	defer-internal.h	/^	deferred_cb_fn cb;$/;"	m	struct:deferred_cb
cb	evbuffer-internal.h	/^        } cb;$/;"	m	struct:evbuffer_cb_entry	typeref:union:evbuffer_cb_entry::__anon2
cb	event.c	/^	void (*cb)(evutil_socket_t, short, void *);$/;"	m	struct:event_once	file:
cb	evrpc-internal.h	/^	void (*cb)(struct evrpc_status*, void *request, void *reply, void *arg);$/;"	m	struct:evrpc_request_wrapper
cb	evrpc-internal.h	/^	void (*cb)(void *, enum EVRPC_HOOK_RESULT);$/;"	m	struct:evrpc_hook_ctx
cb	http-internal.h	/^	void (*cb)(struct evhttp_connection *, void *);$/;"	m	struct:evhttp_connection
cb	http-internal.h	/^	void (*cb)(struct evhttp_request *req, void *);$/;"	m	struct:evhttp_cb
cb	include/event2/http_struct.h	/^	void (*cb)(struct evhttp_request *, void *);$/;"	m	struct:evhttp_request
cb	include/event2/rpc_struct.h	/^	void (*cb)(struct evrpc_req_generic *, void *);$/;"	m	struct:evrpc
cb	iocp-internal.h	/^	iocp_callback cb;$/;"	m	struct:event_overlapped
cb	listener.c	/^	evconnlistener_cb cb;$/;"	m	struct:evconnlistener	file:
cb_arg	evrpc-internal.h	/^	void *cb_arg;$/;"	m	struct:evrpc_request_wrapper
cb_arg	http-internal.h	/^	void *cb_arg;$/;"	m	struct:evhttp_connection
cb_arg	include/event2/http_struct.h	/^	void *cb_arg;$/;"	m	struct:evhttp_request
cb_arg	include/event2/rpc_struct.h	/^	void *cb_arg;$/;"	m	struct:evrpc
cb_func	evbuffer-internal.h	/^                evbuffer_cb_func cb_func;$/;"	m	union:evbuffer_cb_entry::__anon2
cb_obsolete	evbuffer-internal.h	/^                evbuffer_cb cb_obsolete;$/;"	m	union:evbuffer_cb_entry::__anon2
cbarg	evbuffer-internal.h	/^	void *cbarg;$/;"	m	struct:evbuffer_cb_entry
cbarg	http-internal.h	/^	void *cbarg;$/;"	m	struct:evhttp_cb
cbarg	include/event2/bufferevent_struct.h	/^	void *cbarg;$/;"	m	struct:bufferevent
chain	buffer.c	/^	struct evbuffer_chain *chain;$/;"	m	struct:evbuffer_iterator	typeref:struct:evbuffer_iterator::evbuffer_chain	file:
chain	include/event2/buffer.h	/^		void *chain;$/;"	m	struct:evbuffer_ptr::__anon6
changes	devpoll.c	/^	struct pollfd *changes;$/;"	m	struct:devpollop	typeref:struct:devpollop::pollfd	file:
changes	kqueue.c	/^	struct kevent *changes;$/;"	m	struct:kqop	typeref:struct:kqop::kevent	file:
check_dummy_mem_ok	test/regress.c	/^check_dummy_mem_ok(void *_mem)$/;"	f	file:
check_event	evport.c	/^check_event(port_event_t* pevt)$/;"	f	file:
check_event	evport.c	203;"	d	file:
check_evportop	evport.c	/^check_evportop(struct evport_data *evpd)$/;"	f	file:
check_evportop	evport.c	202;"	d	file:
check_heap	test/regress_minheap.c	/^check_heap(struct min_heap *heap)$/;"	f	file:
check_selectop	select.c	/^check_selectop(struct selectop *sop)$/;"	f	file:
check_selectop	select.c	111;"	d	file:
child_signal_cb	test/regress.c	/^child_signal_cb(int fd, short event, void *arg)$/;"	f	file:
choked	evdns.c	/^	char choked;  \/* true if we have an EAGAIN from this server's socket *\/$/;"	m	struct:nameserver	file:
choked	evdns.c	/^	char choked; \/* Are we currently blocked from writing? *\/$/;"	m	struct:evdns_server_port	file:
chunk_cb	include/event2/http_struct.h	/^	void (*chunk_cb)(struct evhttp_request *, void *);$/;"	m	struct:evhttp_request
chunk_req_state	test/regress_http.c	/^struct chunk_req_state {$/;"	s	file:
chunked	include/event2/http_struct.h	/^	int chunked;$/;"	m	struct:evhttp_request
class	evdns.c	/^	u16 class; \/* The RR class (usually CLASS_INET) *\/$/;"	m	struct:server_reply_item	file:
cleanup_fn	test/tinytest.h	/^	int (*cleanup_fn)(const struct testcase_t *, void *);$/;"	m	struct:testcase_setup_t
cleanup_passthrough	test/regress_buffer.c	/^cleanup_passthrough(const struct testcase_t *testcase, void *ptr)$/;"	f	file:
cleanup_test	test/regress.c	/^cleanup_test(void)$/;"	f	file:
cleanupfn	evbuffer-internal.h	/^	evbuffer_ref_cleanup_cb cleanupfn;$/;"	m	struct:evbuffer_chain_reference
clockinfo	compat/sys/_time.h	/^struct clockinfo {$/;"	s
close	buffer.c	2274;"	d	file:
close	evdns.c	162;"	d	file:
close_detect_cb	test/regress_http.c	/^close_detect_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
close_detect_done	test/regress_http.c	/^close_detect_done(struct evhttp_request *req, void *arg)$/;"	f	file:
close_detect_launch	test/regress_http.c	/^close_detect_launch(int fd, short what, void *arg)$/;"	f	file:
closecb	http-internal.h	/^	void (*closecb)(struct evhttp_connection *, void *);$/;"	m	struct:evhttp_connection
closecb_arg	http-internal.h	/^	void *closecb_arg;$/;"	m	struct:evhttp_connection
closing	evdns.c	/^	char closing; \/* Are we trying to close this port, pending writes? *\/$/;"	m	struct:evdns_server_port	file:
code	evutil.c	/^static struct { int code; const char *msg; } windows_socket_errors[] = {$/;"	m	struct:__anon1	file:
combined_read_cb	test/regress.c	/^combined_read_cb(int fd, short event, void *arg)$/;"	f	file:
combined_write_cb	test/regress.c	/^combined_write_cb(int fd, short event, void *arg)$/;"	f	file:
commandname	test/tinytest.c	/^static const char *commandname = NULL;$/;"	v	file:
common	evrpc-internal.h	/^	struct _evrpc_hooks common;$/;"	m	struct:evrpc_base	typeref:struct:evrpc_base::_evrpc_hooks
common	evrpc-internal.h	/^	struct _evrpc_hooks common;$/;"	m	struct:evrpc_pool	typeref:struct:evrpc_pool::_evrpc_hooks
cond	test/regress_pthread.c	/^	pthread_cond_t cond;$/;"	m	struct:cond_wait	file:
cond_wait	test/regress_pthread.c	/^struct cond_wait {$/;"	s	file:
config_nameserver_from_reg_key	evdns.c	/^config_nameserver_from_reg_key(struct evdns_base *base, HKEY key, const char *subkey)$/;"	f	file:
connecting	bufferevent-internal.h	/^	unsigned connecting : 1;$/;"	m	struct:bufferevent_private
connections	evrpc-internal.h	/^	struct evconq connections;$/;"	m	struct:evrpc_pool	typeref:struct:evrpc_pool::evconq
connections	http-internal.h	/^        struct evconq connections;$/;"	m	struct:evhttp	typeref:struct:evhttp::evconq
content	test/bench_http.c	/^static char *content;$/;"	v	file:
content_len	test/bench_http.c	/^static size_t content_len;$/;"	v	file:
context	bufferevent_filter.c	/^	void *context;$/;"	m	struct:bufferevent_filtered	file:
count	test/bench.c	/^static int count, writes, fired;$/;"	v	file:
count	test/regress.c	/^	int count;$/;"	m	struct:test_pri_event	file:
count	test/regress_pthread.c	/^static int count;$/;"	v	file:
count_lock	test/regress_pthread.c	/^static pthread_mutex_t count_lock;$/;"	v	file:
ctrl	bufferevent-internal.h	/^	int (*ctrl)(struct bufferevent *, enum bufferevent_ctrl_op, union bufferevent_ctrl_data *);$/;"	m	struct:bufferevent_ops
ctx	evrpc-internal.h	/^	void *ctx;$/;"	m	struct:evrpc_hook_ctx
ctx	test/regress_rpc.c	/^	void *ctx;$/;"	m	struct:_rpc_hook_ctx	file:
cur_test_name	test/tinytest.c	/^const char *cur_test_name = NULL;$/;"	v
cur_test_outcome	test/tinytest.c	/^static enum outcome cur_test_outcome = 0;$/;"	v	typeref:enum:outcome	file:
cur_test_prefix	test/tinytest.c	/^const char *cur_test_prefix = NULL; \/**< prefix of the current test group *\/$/;"	v
current_base	evdns.c	/^static struct evdns_base *current_base = NULL;$/;"	v	typeref:struct:evdns_base	file:
current_base	event.c	/^struct event_base *current_base = NULL;$/;"	v	typeref:struct:event_base
current_event	event-internal.h	/^	struct event *current_event;$/;"	m	struct:event_base	typeref:struct:event_base::event
current_event_lock	event-internal.h	/^	void *current_event_lock;$/;"	m	struct:event_base
data	evdns.c	/^	void *data; \/* The contents of the RR *\/$/;"	m	struct:server_reply_item	file:
data	evdns.c	/^	} data;$/;"	m	struct:reply	typeref:union:reply::__anon7	file:
data	evrpc-internal.h	/^	void *data;$/;"	m	struct:evrpc_meta
data_size	evrpc-internal.h	/^	size_t data_size;$/;"	m	struct:evrpc_meta
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	include/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	sample/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	test/Makefile	/^datadir = ${datarootdir}$/;"	m
datalen	evdns.c	/^	u16 datalen; \/* Length of data; -1 if data is a label *\/$/;"	m	struct:server_reply_item	file:
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	include/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	sample/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	test/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
dc_install_base	Makefile	/^	dc_install_base=`$(am__cd) $(distdir)\/_inst && pwd | sed -e 's,^[^:\\\\\/]:[\\\\\/],\/,'` \\$/;"	m
dealloc	event-internal.h	/^	void (*dealloc)(struct event_base *);$/;"	m	struct:eventop
debug_ntoa	evdns.c	/^debug_ntoa(u32 address)$/;"	f	file:
debug_ntop	evdns.c	/^debug_ntop(const struct sockaddr *sa)$/;"	f	file:
decode_int64_internal	event_tagging.c	/^decode_int64_internal(ev_uint64_t *pnumber, struct evbuffer *evbuf, int offset)$/;"	f	file:
decode_int_internal	event_tagging.c	/^decode_int_internal(ev_uint32_t *pnumber, struct evbuffer *evbuf, int offset)$/;"	f	file:
decode_tag_internal	event_tagging.c	/^decode_tag_internal(ev_uint32_t *ptag, struct evbuffer *evbuf, int dodrain)$/;"	f	file:
decref_and_unlock	bufferevent_pair.c	/^decref_and_unlock(struct bufferevent *b)$/;"	f	file:
default_random_bytes_fn	evdns.c	/^default_random_bytes_fn(char *buf, size_t n)$/;"	f	file:
default_transaction_id_fn	evdns.c	/^default_transaction_id_fn(void)$/;"	f	file:
deferred	bufferevent-internal.h	/^	struct deferred_cb deferred;$/;"	m	struct:bufferevent_private	typeref:struct:bufferevent_private::deferred_cb
deferred	evbuffer-internal.h	/^	struct deferred_cb deferred;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::deferred_cb
deferred	evdns.c	/^	struct deferred_cb deferred;$/;"	m	struct:deferred_reply_callback	typeref:struct:deferred_reply_callback::deferred_cb	file:
deferred_cb	defer-internal.h	/^struct deferred_cb {$/;"	s
deferred_cb_fn	defer-internal.h	/^typedef void (*deferred_cb_fn)(struct deferred_cb *, void *);$/;"	t
deferred_cb_list	event-internal.h	/^	TAILQ_HEAD (deferred_cb_list, deferred_cb) deferred_cb_list;$/;"	m	struct:event_base
deferred_cbs	evbuffer-internal.h	/^	unsigned deferred_cbs : 1;$/;"	m	struct:evbuffer
deferred_reply_callback	evdns.c	/^struct deferred_reply_callback {$/;"	s	file:
del	event-internal.h	/^	int (*del)(struct event_base *, evutil_socket_t fd, short old, short events, void *fdinfo);$/;"	m	struct:eventop
delayed_client	test/regress_http.c	/^static struct evhttp_connection *delayed_client;$/;"	v	typeref:struct:evhttp_connection	file:
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	sample/Makefile	/^depcomp =$/;"	m
depcomp	test/Makefile	/^depcomp =$/;"	m
destruct	bufferevent-internal.h	/^	void (*destruct)(struct bufferevent *);$/;"	m	struct:bufferevent_ops
detect_monotonic	event.c	/^detect_monotonic(void)$/;"	f	file:
devpoll_add	devpoll.c	/^devpoll_add(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
devpoll_commit	devpoll.c	/^devpoll_commit(struct devpollop *devpollop)$/;"	f	file:
devpoll_dealloc	devpoll.c	/^devpoll_dealloc(struct event_base *base)$/;"	f	file:
devpoll_del	devpoll.c	/^devpoll_del(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
devpoll_dispatch	devpoll.c	/^devpoll_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
devpoll_init	devpoll.c	/^devpoll_init(struct event_base *base)$/;"	f	file:
devpoll_queue	devpoll.c	/^devpoll_queue(struct devpollop *devpollop, int fd, int events) {$/;"	f	file:
devpollop	devpoll.c	/^struct devpollop {$/;"	s	file:
devpollops	devpoll.c	/^const struct eventop devpollops = {$/;"	v	typeref:struct:eventop
disable	bufferevent-internal.h	/^	int (*disable)(struct bufferevent *, short);$/;"	m	struct:bufferevent_ops
dispatch	event-internal.h	/^	int (*dispatch)(struct event_base *, struct timeval *);$/;"	m	struct:eventop
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
dns_err	test/regress_dns.c	/^static int dns_err = 0;$/;"	v	file:
dns_gethostbyaddr	test/regress_dns.c	/^dns_gethostbyaddr(void)$/;"	f	file:
dns_gethostbyname	test/regress_dns.c	/^dns_gethostbyname(void)$/;"	f	file:
dns_gethostbyname6	test/regress_dns.c	/^dns_gethostbyname6(void)$/;"	f	file:
dns_gethostbyname_cb	test/regress_dns.c	/^dns_gethostbyname_cb(int result, char type, int count, int ttl,$/;"	f	file:
dns_got_cancel	test/regress_dns.c	/^static int dns_got_cancel = 0;$/;"	v	file:
dns_ok	test/regress_dns.c	/^static int dns_ok = 0;$/;"	v	file:
dns_question_class	include/event2/dns_struct.h	/^	int dns_question_class;$/;"	m	struct:evdns_server_question
dns_question_class	include/event2/dns_struct.h	70;"	d
dns_resolve_reverse	test/regress_dns.c	/^dns_resolve_reverse(void *ptr)$/;"	f	file:
dns_server	test/regress_dns.c	/^dns_server(void)$/;"	f	file:
dns_server_gethostbyname_cb	test/regress_dns.c	/^dns_server_gethostbyname_cb(int result, char type, int count, int ttl,$/;"	f	file:
dns_server_request_cb	test/regress_dns.c	/^dns_server_request_cb(struct evdns_server_request *req, void *data)$/;"	f	file:
dns_testcases	test/regress_dns.c	/^struct testcase_t dns_testcases[] = {$/;"	v	typeref:struct:testcase_t
dnslabel_clear	evdns.c	/^dnslabel_clear(struct dnslabel_table *table)$/;"	f	file:
dnslabel_entry	evdns.c	/^struct dnslabel_entry { char *v; off_t pos; };$/;"	s	file:
dnslabel_table	evdns.c	/^struct dnslabel_table {$/;"	s	file:
dnslabel_table_add	evdns.c	/^dnslabel_table_add(struct dnslabel_table *table, const char *label, off_t pos)$/;"	f	file:
dnslabel_table_get_pos	evdns.c	/^dnslabel_table_get_pos(const struct dnslabel_table *table, const char *label)$/;"	f	file:
dnslabel_table_init	evdns.c	/^dnslabel_table_init(struct dnslabel_table *table)$/;"	f	file:
dnslogcb	test/regress_main.c	/^static void dnslogcb(int w, const char *m)$/;"	f	file:
dnsname_to_labels	evdns.c	/^dnsname_to_labels(u8 *const buf, size_t buf_len, off_t j,$/;"	f	file:
do_fd_clear	WIN32-Code/win32.c	/^do_fd_clear(struct event_base *base,$/;"	f	file:
do_fd_set	WIN32-Code/win32.c	/^do_fd_set(struct win32op *op, struct idx_info *ent, evutil_socket_t s, int read)$/;"	f	file:
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE}$/;"	m
docdir	include/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE}$/;"	m
docdir	sample/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE}$/;"	m
docdir	test/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE}$/;"	m
downcast	bufferevent_filter.c	124;"	d	file:
downcast	bufferevent_pair.c	67;"	d	file:
dpfd	devpoll.c	/^	int dpfd;$/;"	m	struct:devpollop	file:
dummy_cb	test/regress_iocp.c	/^dummy_cb(struct event_overlapped *o, uintptr_t key, ev_ssize_t n)$/;"	f	file:
dummy_free	test/regress.c	/^dummy_free(void *_mem)$/;"	f	file:
dummy_malloc	test/regress.c	/^dummy_malloc(size_t len)$/;"	f	file:
dummy_overlapped	test/regress_iocp.c	/^struct dummy_overlapped {$/;"	s	file:
dummy_read_cb	test/regress.c	/^dummy_read_cb(int fd, short event, void *arg)$/;"	f	file:
dummy_realloc	test/regress.c	/^dummy_realloc(void *_mem, size_t len)$/;"	f	file:
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	include/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	sample/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	test/Makefile	/^dvidir = ${docdir}$/;"	m
eb	test/regress.c	/^	struct event_base *eb;$/;"	m	struct:basic_cb_args	typeref:struct:basic_cb_args::event_base	file:
ed_fds	evport.c	/^	struct fd_info *ed_fds;		\/* allocated fdi table 		 *\/$/;"	m	struct:evport_data	typeref:struct:evport_data::fd_info	file:
ed_nevents	evport.c	/^	int		ed_nevents;	\/* number of allocated fdi's 	 *\/$/;"	m	struct:evport_data	file:
ed_pending	evport.c	/^	int ed_pending[EVENTS_PER_GETN]; \/* fd's with pending events *\/$/;"	m	struct:evport_data	file:
ed_port	evport.c	/^	int 		ed_port;	\/* event port for system events  *\/$/;"	m	struct:evport_data	file:
edgetriggered_testcases	test/regress_et.c	/^struct testcase_t edgetriggered_testcases[] = {$/;"	v	typeref:struct:testcase_t
enable	bufferevent-internal.h	/^	int (*enable)(struct bufferevent *, short);$/;"	m	struct:bufferevent_ops
enabled	include/event2/bufferevent_struct.h	/^	short enabled;$/;"	m	struct:bufferevent
encode_int	include/event2/tag_compat.h	36;"	d
encode_int64	include/event2/tag_compat.h	37;"	d
encode_int64_internal	event_tagging.c	/^encode_int64_internal(ev_uint8_t *data, ev_uint64_t number)$/;"	f	file:
encode_int_internal	event_tagging.c	/^encode_int_internal(ev_uint8_t *data, ev_uint32_t number)$/;"	f	file:
ent	evmap.c	/^	} ent;$/;"	m	struct:event_map_entry	typeref:union:event_map_entry::__anon11	file:
entries	event-internal.h	/^	TAILQ_HEAD(event_configq, event_config_entry) entries;$/;"	m	struct:event_config
entries	event-internal.h	/^	void **entries;$/;"	m	struct:event_signal_map
entry_status	test/regress_util.c	/^enum entry_status { NORMAL, CANONICAL, BAD };$/;"	g	file:
eo	test/regress_iocp.c	/^	struct event_overlapped eo;$/;"	m	struct:dummy_overlapped	typeref:struct:dummy_overlapped::event_overlapped	file:
epfd	epoll.c	/^	int epfd;$/;"	m	struct:epollop	file:
epoll_add	epoll.c	/^epoll_add(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
epoll_create	epoll_sub.c	/^epoll_create(int size)$/;"	f
epoll_ctl	epoll_sub.c	/^epoll_ctl(int epfd, int op, int fd, struct epoll_event *event)$/;"	f
epoll_dealloc	epoll.c	/^epoll_dealloc(struct event_base *base)$/;"	f	file:
epoll_del	epoll.c	/^epoll_del(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
epoll_dispatch	epoll.c	/^epoll_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
epoll_init	epoll.c	/^epoll_init(struct event_base *base)$/;"	f	file:
epoll_wait	epoll_sub.c	/^epoll_wait(int epfd, struct epoll_event *events, int maxevents, int timeout)$/;"	f
epollop	epoll.c	/^struct epollop {$/;"	s	file:
epollops	epoll.c	/^const struct eventop epollops = {$/;"	v	typeref:struct:eventop
eqsocket	evmap.c	/^eqsocket(struct event_map_entry *e1, struct event_map_entry *e2)$/;"	f	file:
err	evdns.c	/^	u32 err;$/;"	m	struct:deferred_reply_callback	file:
errno_pending	bufferevent-internal.h	/^	int errno_pending;$/;"	m	struct:bufferevent_private
error	include/event2/rpc_struct.h	/^	int error;$/;"	m	struct:evrpc_status
errorcb	include/event2/bufferevent_struct.h	/^	bufferevent_event_cb errorcb;$/;"	m	struct:bufferevent
errorcb	test/bench_httpclient.c	/^errorcb(struct bufferevent *b, short what, void *arg)$/;"	f	file:
errorcb	test/regress_bufferevent.c	/^errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
errorcb	test/regress_zlib.c	/^errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
errorcb_invoked	test/regress_zlib.c	/^static int errorcb_invoked;$/;"	v	file:
ev	event.c	/^	struct event ev;$/;"	m	struct:event_once	typeref:struct:event_once::event	file:
ev	test/regress.c	/^	struct event *ev;$/;"	m	struct:basic_cb_args	typeref:struct:basic_cb_args::event	file:
ev	test/regress.c	/^	struct event ev;$/;"	m	struct:both	typeref:struct:both::event	file:
ev	test/regress.c	/^	struct event ev;$/;"	m	struct:test_pri_event	typeref:struct:test_pri_event::event	file:
ev	test/test-time.c	/^struct event *ev[NEVENT];$/;"	v	typeref:struct:event
ev_arg	include/event2/event_struct.h	/^	void *ev_arg;$/;"	m	struct:event
ev_base	evbuffer-internal.h	/^	struct event_base *ev_base;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::event_base
ev_base	include/event2/bufferevent_struct.h	/^	struct event_base *ev_base;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event_base
ev_base	include/event2/event_struct.h	/^	struct event_base *ev_base;$/;"	m	struct:event	typeref:struct:event::event_base
ev_callback	include/event2/event_struct.h	/^	void (*ev_callback)(evutil_socket_t, short, void *arg);$/;"	m	struct:event
ev_closure	include/event2/event_struct.h	/^	ev_uint8_t ev_closure;$/;"	m	struct:event
ev_events	include/event2/event_struct.h	/^	short ev_events;$/;"	m	struct:event
ev_fd	include/event2/event_struct.h	/^	evutil_socket_t ev_fd;$/;"	m	struct:event
ev_flags	include/event2/event_struct.h	/^	short ev_flags;$/;"	m	struct:event
ev_int64_t	include/event2/util.h	71;"	d
ev_int64_t	include/event2/util.h	74;"	d
ev_int64_t	include/event2/util.h	77;"	d
ev_int64_t	include/event2/util.h	80;"	d
ev_io	include/event2/event_struct.h	/^		} ev_io;$/;"	m	union:event::__anon3	typeref:struct:event::__anon3::__anon4
ev_io_next	event-internal.h	46;"	d
ev_io_timeout	event-internal.h	47;"	d
ev_ncalls	event-internal.h	50;"	d
ev_ncalls	include/event2/event_struct.h	/^			short ev_ncalls;$/;"	m	struct:event::__anon3::__anon5
ev_pncalls	event-internal.h	51;"	d
ev_pncalls	include/event2/event_struct.h	/^			short *ev_pncalls;$/;"	m	struct:event::__anon3::__anon5
ev_pri	include/event2/event_struct.h	/^	ev_uint8_t ev_pri;	\/* smaller numbers are higher priority *\/$/;"	m	struct:event
ev_read	include/event2/bufferevent_struct.h	/^	struct event ev_read;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event
ev_res	include/event2/event_struct.h	/^	short ev_res;		\/* result passed to event callback *\/$/;"	m	struct:event
ev_sighandler_t	evsignal-internal.h	/^typedef void (*ev_sighandler_t)(int);$/;"	t
ev_signal	evsignal-internal.h	/^	struct event ev_signal;$/;"	m	struct:evsig_info	typeref:struct:evsig_info::event
ev_signal	include/event2/event_struct.h	/^		} ev_signal;$/;"	m	union:event::__anon3	typeref:struct:event::__anon3::__anon5
ev_signal_added	evsignal-internal.h	/^	int ev_signal_added;$/;"	m	struct:evsig_info
ev_signal_next	event-internal.h	44;"	d
ev_signal_pair	evsignal-internal.h	/^	evutil_socket_t ev_signal_pair[2];$/;"	m	struct:evsig_info
ev_ssize_t	include/event2/util.h	116;"	d
ev_ssize_t	include/event2/util.h	118;"	d
ev_timeout	evrpc-internal.h	/^	struct event ev_timeout;$/;"	m	struct:evrpc_request_wrapper	typeref:struct:evrpc_request_wrapper::event
ev_timeout	include/event2/event_struct.h	/^			struct timeval ev_timeout;$/;"	m	struct:event::__anon3::__anon4	typeref:struct:event::__anon3::__anon4::timeval
ev_timeout	include/event2/event_struct.h	/^	struct timeval ev_timeout;$/;"	m	struct:event	typeref:struct:event::timeval
ev_uint16_t	include/event2/util.h	100;"	d
ev_uint16_t	include/event2/util.h	102;"	d
ev_uint16_t	include/event2/util.h	104;"	d
ev_uint16_t	include/event2/util.h	98;"	d
ev_uint32_t	include/event2/util.h	86;"	d
ev_uint32_t	include/event2/util.h	88;"	d
ev_uint32_t	include/event2/util.h	90;"	d
ev_uint32_t	include/event2/util.h	92;"	d
ev_uint64_t	include/event2/util.h	70;"	d
ev_uint64_t	include/event2/util.h	73;"	d
ev_uint64_t	include/event2/util.h	76;"	d
ev_uint64_t	include/event2/util.h	79;"	d
ev_uint8_t	include/event2/util.h	110;"	d
ev_uint8_t	include/event2/util.h	112;"	d
ev_write	include/event2/bufferevent_struct.h	/^	struct event ev_write;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event
evbase	event-internal.h	/^	void *evbase;$/;"	m	struct:event_base
evbuffer	evbuffer-internal.h	/^struct evbuffer {$/;"	s
evbuffer_add	buffer.c	/^evbuffer_add(struct evbuffer *buf, const void *data_in, size_t datlen)$/;"	f
evbuffer_add_buffer	buffer.c	/^evbuffer_add_buffer(struct evbuffer *outbuf, struct evbuffer *inbuf)$/;"	f
evbuffer_add_cb	buffer.c	/^evbuffer_add_cb(struct evbuffer *buffer, evbuffer_cb_func cb, void *cbarg)$/;"	f
evbuffer_add_file	buffer.c	/^evbuffer_add_file(struct evbuffer *outbuf, int fd,$/;"	f
evbuffer_add_printf	buffer.c	/^evbuffer_add_printf(struct evbuffer *buf, const char *fmt, ...)$/;"	f
evbuffer_add_reference	buffer.c	/^evbuffer_add_reference(struct evbuffer *outbuf,$/;"	f
evbuffer_add_vprintf	buffer.c	/^evbuffer_add_vprintf(struct evbuffer *buf, const char *fmt, va_list ap)$/;"	f
evbuffer_cb	include/event2/buffer_compat.h	/^typedef void (*evbuffer_cb)(struct evbuffer *buffer, size_t old_len, size_t new_len, void *arg);$/;"	t
evbuffer_cb_clear_flags	buffer.c	/^evbuffer_cb_clear_flags(struct evbuffer *buffer,$/;"	f
evbuffer_cb_entry	evbuffer-internal.h	/^struct evbuffer_cb_entry {$/;"	s
evbuffer_cb_func	include/event2/buffer.h	/^typedef void (*evbuffer_cb_func)(struct evbuffer *buffer, const struct evbuffer_cb_info *info, void *arg);$/;"	t
evbuffer_cb_info	include/event2/buffer.h	/^struct evbuffer_cb_info {$/;"	s
evbuffer_cb_set_flags	buffer.c	/^evbuffer_cb_set_flags(struct evbuffer *buffer,$/;"	f
evbuffer_chain	evbuffer-internal.h	/^struct evbuffer_chain {$/;"	s
evbuffer_chain_align	buffer.c	/^evbuffer_chain_align(struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_chain_fd	evbuffer-internal.h	/^struct evbuffer_chain_fd {$/;"	s
evbuffer_chain_free	buffer.c	/^evbuffer_chain_free(struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_chain_insert	buffer.c	/^evbuffer_chain_insert(struct evbuffer *buf, struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_chain_new	buffer.c	/^evbuffer_chain_new(size_t size)$/;"	f	file:
evbuffer_chain_reference	evbuffer-internal.h	/^struct evbuffer_chain_reference {$/;"	s
evbuffer_commit_space	buffer.c	/^evbuffer_commit_space(struct evbuffer *buf,$/;"	f
evbuffer_defer_callbacks	buffer.c	/^evbuffer_defer_callbacks(struct evbuffer *buffer, struct event_base *base)$/;"	f
evbuffer_deferred_callback	buffer.c	/^evbuffer_deferred_callback(struct deferred_cb *cb, void *arg)$/;"	f	file:
evbuffer_drain	buffer.c	/^evbuffer_drain(struct evbuffer *buf, size_t len)$/;"	f
evbuffer_enable_locking	buffer.c	/^evbuffer_enable_locking(struct evbuffer *buf, void *lock)$/;"	f
evbuffer_eol_style	include/event2/buffer.h	/^enum evbuffer_eol_style {$/;"	g
evbuffer_expand	buffer.c	/^evbuffer_expand(struct evbuffer *buf, size_t datlen)$/;"	f
evbuffer_find	buffer.c	/^evbuffer_find(struct evbuffer *buffer, const unsigned char *what, size_t len)$/;"	f
evbuffer_free	buffer.c	/^evbuffer_free(struct evbuffer *buffer)$/;"	f
evbuffer_freeze	buffer.c	/^evbuffer_freeze(struct evbuffer *buffer, int start)$/;"	f
evbuffer_get_contiguous_space	buffer.c	/^evbuffer_get_contiguous_space(const struct evbuffer *buf)$/;"	f
evbuffer_get_length	buffer.c	/^evbuffer_get_length(const struct evbuffer *buffer)$/;"	f
evbuffer_getchr	buffer.c	/^evbuffer_getchr(struct evbuffer_iterator *it, char *pchr)$/;"	f	file:
evbuffer_invoke_callbacks	buffer.c	/^evbuffer_invoke_callbacks(struct evbuffer *buffer)$/;"	f	file:
evbuffer_iovec	include/event2/buffer.h	/^struct evbuffer_iovec {$/;"	s
evbuffer_iovec	include/event2/buffer.h	101;"	d
evbuffer_iterator	buffer.c	/^struct evbuffer_iterator {$/;"	s	file:
evbuffer_launch_read	buffer_iocp.c	/^evbuffer_launch_read(struct evbuffer *buf, size_t at_most)$/;"	f
evbuffer_launch_write	buffer_iocp.c	/^evbuffer_launch_write(struct evbuffer *buf, ev_ssize_t at_most)$/;"	f
evbuffer_lock	buffer.c	/^evbuffer_lock(struct evbuffer *buf)$/;"	f
evbuffer_new	buffer.c	/^evbuffer_new(void)$/;"	f
evbuffer_overlapped	buffer_iocp.c	/^struct evbuffer_overlapped {$/;"	s	file:
evbuffer_overlapped_new	buffer_iocp.c	/^evbuffer_overlapped_new(evutil_socket_t fd)$/;"	f
evbuffer_peek	buffer.c	/^evbuffer_peek(struct evbuffer *buffer, ev_ssize_t len,$/;"	f
evbuffer_prepend	buffer.c	/^evbuffer_prepend(struct evbuffer *buf, const void *data, size_t datlen)$/;"	f
evbuffer_prepend_buffer	buffer.c	/^evbuffer_prepend_buffer(struct evbuffer *outbuf, struct evbuffer *inbuf)$/;"	f
evbuffer_ptr	include/event2/buffer.h	/^struct evbuffer_ptr {$/;"	s
evbuffer_ptr_how	include/event2/buffer.h	/^enum evbuffer_ptr_how {$/;"	g
evbuffer_ptr_memcmp	buffer.c	/^evbuffer_ptr_memcmp(const struct evbuffer *buf, const struct evbuffer_ptr *pos,$/;"	f	file:
evbuffer_ptr_set	buffer.c	/^evbuffer_ptr_set(struct evbuffer *buf, struct evbuffer_ptr *pos,$/;"	f
evbuffer_pullup	buffer.c	/^evbuffer_pullup(struct evbuffer *buf, ev_ssize_t size)$/;"	f
evbuffer_read	buffer.c	/^evbuffer_read(struct evbuffer *buf, evutil_socket_t fd, int howmuch)$/;"	f
evbuffer_readline	buffer.c	/^evbuffer_readline(struct evbuffer *buffer)$/;"	f
evbuffer_readln	buffer.c	/^evbuffer_readln(struct evbuffer *buffer, size_t *n_read_out,$/;"	f
evbuffer_ref_cleanup_cb	include/event2/buffer.h	/^typedef void (*evbuffer_ref_cleanup_cb)(const void *data,$/;"	t
evbuffer_remove	buffer.c	/^evbuffer_remove(struct evbuffer *buf, void *data_out, size_t datlen)$/;"	f
evbuffer_remove_all_callbacks	buffer.c	/^evbuffer_remove_all_callbacks(struct evbuffer *buffer)$/;"	f	file:
evbuffer_remove_buffer	buffer.c	/^evbuffer_remove_buffer(struct evbuffer *src, struct evbuffer *dst,$/;"	f
evbuffer_remove_cb	buffer.c	/^evbuffer_remove_cb(struct evbuffer *buffer, evbuffer_cb_func cb, void *cbarg)$/;"	f
evbuffer_remove_cb_entry	buffer.c	/^evbuffer_remove_cb_entry(struct evbuffer *buffer,$/;"	f
evbuffer_reserve_space	buffer.c	/^evbuffer_reserve_space(struct evbuffer *buf, ev_ssize_t size,$/;"	f
evbuffer_run_callbacks	buffer.c	/^evbuffer_run_callbacks(struct evbuffer *buffer)$/;"	f	file:
evbuffer_search	buffer.c	/^evbuffer_search(struct evbuffer *buffer, const char *what, size_t len, const struct evbuffer_ptr *start)$/;"	f
evbuffer_setcb	buffer.c	/^evbuffer_setcb(struct evbuffer *buffer, evbuffer_cb cb, void *cbarg)$/;"	f
evbuffer_strchr	buffer.c	/^evbuffer_strchr(struct evbuffer_iterator *it, const char chr)$/;"	f	file:
evbuffer_strpbrk	buffer.c	/^evbuffer_strpbrk(struct evbuffer_iterator *it, const char *chrset)$/;"	f	file:
evbuffer_strspn	buffer.c	/^evbuffer_strspn($/;"	f	file:
evbuffer_testcases	test/regress_buffer.c	/^struct testcase_t evbuffer_testcases[] = {$/;"	v	typeref:struct:testcase_t
evbuffer_unfreeze	buffer.c	/^evbuffer_unfreeze(struct evbuffer *buffer, int start)$/;"	f
evbuffer_unlock	buffer.c	/^evbuffer_unlock(struct evbuffer *buf)$/;"	f
evbuffer_validate	test/regress_buffer.c	102;"	d	file:
evbuffer_write	buffer.c	/^evbuffer_write(struct evbuffer *buffer, evutil_socket_t fd)$/;"	f
evbuffer_write_atmost	buffer.c	/^evbuffer_write_atmost(struct evbuffer *buffer, evutil_socket_t fd,$/;"	f
evbuffer_write_iovec	buffer.c	/^evbuffer_write_iovec(struct evbuffer *buffer, evutil_socket_t fd,$/;"	f	file:
evbuffer_write_sendfile	buffer.c	/^evbuffer_write_sendfile(struct evbuffer *buffer, evutil_socket_t fd,$/;"	f	file:
evbuffercb	include/event2/bufferevent_compat.h	31;"	d
evcon	evrpc-internal.h	/^	struct evhttp_connection *evcon;$/;"	m	struct:evrpc_hook_meta	typeref:struct:evrpc_hook_meta::evhttp_connection
evcon	evrpc-internal.h	/^	struct evhttp_connection *evcon;$/;"	m	struct:evrpc_request_wrapper	typeref:struct:evrpc_request_wrapper::evhttp_connection
evcon	include/event2/http_struct.h	/^	struct evhttp_connection *evcon;$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evhttp_connection
evconnlistener	listener.c	/^struct evconnlistener {$/;"	s	file:
evconnlistener_cb	include/event2/listener.h	/^typedef void (*evconnlistener_cb)(struct evconnlistener *, evutil_socket_t, struct sockaddr *, int socklen, void *);$/;"	t
evconnlistener_disable	listener.c	/^evconnlistener_disable(struct evconnlistener *lev)$/;"	f
evconnlistener_enable	listener.c	/^evconnlistener_enable(struct evconnlistener *lev)$/;"	f
evconnlistener_free	listener.c	/^evconnlistener_free(struct evconnlistener *lev)$/;"	f
evconnlistener_get_base	listener.c	/^evconnlistener_get_base(struct evconnlistener *lev)$/;"	f
evconnlistener_new	listener.c	/^evconnlistener_new(struct event_base *base,$/;"	f
evconnlistener_new_bind	listener.c	/^evconnlistener_new_bind(struct event_base *base, evconnlistener_cb cb, void *ptr,$/;"	f
evdns_add_server_port	evdns.c	/^evdns_add_server_port(evutil_socket_t socket, int is_tcp, evdns_request_callback_fn_type cb, void *user_data)$/;"	f
evdns_add_server_port_with_base	evdns.c	/^evdns_add_server_port_with_base(struct event_base *base, evutil_socket_t socket, int is_tcp, evdns_request_callback_fn_type cb, void *user_data)$/;"	f
evdns_base	evdns.c	/^struct evdns_base {$/;"	s	file:
evdns_base_clear_nameservers_and_suspend	evdns.c	/^evdns_base_clear_nameservers_and_suspend(struct evdns_base *base)$/;"	f
evdns_base_config_windows_nameservers	evdns.c	/^evdns_base_config_windows_nameservers(struct evdns_base *base)$/;"	f
evdns_base_count_nameservers	evdns.c	/^evdns_base_count_nameservers(struct evdns_base *base)$/;"	f
evdns_base_free	evdns.c	/^evdns_base_free(struct evdns_base *base, int fail_requests)$/;"	f
evdns_base_nameserver_add	evdns.c	/^evdns_base_nameserver_add(struct evdns_base *base,$/;"	f
evdns_base_nameserver_ip_add	evdns.c	/^evdns_base_nameserver_ip_add(struct evdns_base *base, const char *ip_as_string) {$/;"	f
evdns_base_new	evdns.c	/^evdns_base_new(struct event_base *event_base, int initialize_nameservers)$/;"	f
evdns_base_resolv_conf_parse	evdns.c	/^evdns_base_resolv_conf_parse(struct evdns_base *base, int flags, const char *const filename) {$/;"	f
evdns_base_resolv_conf_parse_impl	evdns.c	/^evdns_base_resolv_conf_parse_impl(struct evdns_base *base, int flags, const char *const filename) {$/;"	f	file:
evdns_base_resolve_ipv4	evdns.c	/^evdns_base_resolve_ipv4(struct evdns_base *base, const char *name, int flags,$/;"	f
evdns_base_resolve_ipv6	evdns.c	/^evdns_base_resolve_ipv6(struct evdns_base *base,$/;"	f
evdns_base_resolve_reverse	evdns.c	/^evdns_base_resolve_reverse(struct evdns_base *base, const struct in_addr *in, int flags, evdns_callback_type callback, void *ptr) {$/;"	f
evdns_base_resolve_reverse_ipv6	evdns.c	/^evdns_base_resolve_reverse_ipv6(struct evdns_base *base, const struct in6_addr *in, int flags, evdns_callback_type callback, void *ptr) {$/;"	f
evdns_base_resume	evdns.c	/^evdns_base_resume(struct evdns_base *base)$/;"	f
evdns_base_search_add	evdns.c	/^evdns_base_search_add(struct evdns_base *base, const char *domain) {$/;"	f
evdns_base_search_clear	evdns.c	/^evdns_base_search_clear(struct evdns_base *base)$/;"	f
evdns_base_search_ndots_set	evdns.c	/^evdns_base_search_ndots_set(struct evdns_base *base, const int ndots) {$/;"	f
evdns_base_set_max_requests_inflight	evdns.c	/^evdns_base_set_max_requests_inflight(struct evdns_base *base, int maxinflight)$/;"	f	file:
evdns_base_set_option	evdns.c	/^evdns_base_set_option(struct evdns_base *base,$/;"	f
evdns_base_set_option_impl	evdns.c	/^evdns_base_set_option_impl(struct evdns_base *base,$/;"	f	file:
evdns_callback_type	include/event2/dns.h	/^typedef void (*evdns_callback_type) (int result, char type, int count, int ttl, void *addresses, void *arg);$/;"	t
evdns_cancel_request	evdns.c	/^evdns_cancel_request(struct evdns_base *base, struct evdns_request *req)$/;"	f
evdns_clear_nameservers_and_suspend	evdns.c	/^evdns_clear_nameservers_and_suspend(void)$/;"	f
evdns_close_server_port	evdns.c	/^evdns_close_server_port(struct evdns_server_port *port)$/;"	f
evdns_config_windows_nameservers	evdns.c	/^evdns_config_windows_nameservers(void)$/;"	f
evdns_count_nameservers	evdns.c	/^evdns_count_nameservers(void)$/;"	f
evdns_debug_log_fn_type	include/event2/dns.h	/^typedef void (*evdns_debug_log_fn_type)(int is_warning, const char *msg);$/;"	t
evdns_err_to_string	evdns.c	/^evdns_err_to_string(int err)$/;"	f
evdns_init	evdns.c	/^evdns_init(void)$/;"	f
evdns_log_fn	evdns.c	/^static evdns_debug_log_fn_type evdns_log_fn = NULL;$/;"	v	file:
evdns_nameserver_add	evdns.c	/^evdns_nameserver_add(unsigned long int address) {$/;"	f
evdns_nameserver_ip_add	evdns.c	/^evdns_nameserver_ip_add(const char *ip_as_string) {$/;"	f
evdns_nameserver_ip_add_line	evdns.c	/^evdns_nameserver_ip_add_line(struct evdns_base *base, const char *ips) {$/;"	f	file:
evdns_request	evdns.c	/^struct evdns_request {$/;"	s	file:
evdns_request_callback_fn_type	include/event2/dns.h	/^typedef void (*evdns_request_callback_fn_type)(struct evdns_server_request *, void *);$/;"	t
evdns_request_data_build	evdns.c	/^evdns_request_data_build(const char *const name, const int name_len,$/;"	f	file:
evdns_request_insert	evdns.c	/^evdns_request_insert(struct evdns_request *req, struct evdns_request **head) {$/;"	f	file:
evdns_request_len	evdns.c	/^evdns_request_len(const size_t name_len) {$/;"	f	file:
evdns_request_remove	evdns.c	/^evdns_request_remove(struct evdns_request *req, struct evdns_request **head)$/;"	f	file:
evdns_request_timeout_callback	evdns.c	/^evdns_request_timeout_callback(evutil_socket_t fd, short events, void *arg) {$/;"	f	file:
evdns_request_transmit	evdns.c	/^evdns_request_transmit(struct evdns_request *req) {$/;"	f	file:
evdns_request_transmit_to	evdns.c	/^evdns_request_transmit_to(struct evdns_request *req, struct nameserver *server) {$/;"	f	file:
evdns_requests_pump_waiting_queue	evdns.c	/^evdns_requests_pump_waiting_queue(struct evdns_base *base) {$/;"	f	file:
evdns_resolv_conf_parse	evdns.c	/^evdns_resolv_conf_parse(int flags, const char *const filename) {$/;"	f
evdns_resolv_set_defaults	evdns.c	/^evdns_resolv_set_defaults(struct evdns_base *base, int flags) {$/;"	f	file:
evdns_resolve_ipv4	evdns.c	/^int evdns_resolve_ipv4(const char *name, int flags,$/;"	f
evdns_resolve_ipv6	evdns.c	/^int evdns_resolve_ipv6(const char *name, int flags,$/;"	f
evdns_resolve_reverse	evdns.c	/^int evdns_resolve_reverse(const struct in_addr *in, int flags, evdns_callback_type callback, void *ptr) {$/;"	f
evdns_resolve_reverse_ipv6	evdns.c	/^int evdns_resolve_reverse_ipv6(const struct in6_addr *in, int flags, evdns_callback_type callback, void *ptr) {$/;"	f
evdns_resume	evdns.c	/^evdns_resume(void)$/;"	f
evdns_search_add	evdns.c	/^evdns_search_add(const char *domain) {$/;"	f
evdns_search_clear	evdns.c	/^evdns_search_clear(void) {$/;"	f
evdns_search_ndots_set	evdns.c	/^evdns_search_ndots_set(const int ndots) {$/;"	f
evdns_server_callback	evdns.c	/^evdns_server_callback(struct evdns_server_request *req, void *data)$/;"	f
evdns_server_port	evdns.c	/^struct evdns_server_port {$/;"	s	file:
evdns_server_question	include/event2/dns_struct.h	/^struct evdns_server_question {$/;"	s
evdns_server_request	include/event2/dns_struct.h	/^struct evdns_server_request {$/;"	s
evdns_server_request_add_a_reply	evdns.c	/^evdns_server_request_add_a_reply(struct evdns_server_request *req, const char *name, int n, void *addrs, int ttl)$/;"	f
evdns_server_request_add_aaaa_reply	evdns.c	/^evdns_server_request_add_aaaa_reply(struct evdns_server_request *req, const char *name, int n, void *addrs, int ttl)$/;"	f
evdns_server_request_add_cname_reply	evdns.c	/^evdns_server_request_add_cname_reply(struct evdns_server_request *req, const char *name, const char *cname, int ttl)$/;"	f
evdns_server_request_add_ptr_reply	evdns.c	/^evdns_server_request_add_ptr_reply(struct evdns_server_request *req, struct in_addr *in, const char *inaddr_name, const char *hostname, int ttl)$/;"	f
evdns_server_request_add_reply	evdns.c	/^evdns_server_request_add_reply(struct evdns_server_request *_req, int section, const char *name, int type, int class, int ttl, int datalen, int is_name, const char *data)$/;"	f
evdns_server_request_drop	evdns.c	/^evdns_server_request_drop(struct evdns_server_request *_req)$/;"	f
evdns_server_request_format_response	evdns.c	/^evdns_server_request_format_response(struct server_request *req, int err)$/;"	f	file:
evdns_server_request_get_requesting_addr	evdns.c	/^evdns_server_request_get_requesting_addr(struct evdns_server_request *_req, struct sockaddr *sa, int addr_len)$/;"	f
evdns_server_request_respond	evdns.c	/^evdns_server_request_respond(struct evdns_server_request *_req, int err)$/;"	f
evdns_server_request_set_flags	evdns.c	/^evdns_server_request_set_flags(struct evdns_server_request *exreq, int flags)$/;"	f
evdns_set_log_fn	evdns.c	/^evdns_set_log_fn(evdns_debug_log_fn_type fn)$/;"	f
evdns_set_option	evdns.c	/^evdns_set_option(const char *option, const char *val, int flags)$/;"	f
evdns_set_random_bytes_fn	evdns.c	/^evdns_set_random_bytes_fn(void (*fn)(char *, size_t))$/;"	f
evdns_set_transaction_id_fn	evdns.c	/^evdns_set_transaction_id_fn(ev_uint16_t (*fn)(void))$/;"	f
evdns_shutdown	evdns.c	/^evdns_shutdown(int fail_requests)$/;"	f
evdns_transmit	evdns.c	/^evdns_transmit(struct evdns_base *base) {$/;"	f	file:
event	evdns.c	/^	struct event event; \/* Read\/write event *\/$/;"	m	struct:evdns_server_port	typeref:struct:evdns_server_port::event	file:
event	evdns.c	/^	struct event event;$/;"	m	struct:nameserver	typeref:struct:nameserver::event	file:
event	include/event2/event_struct.h	/^struct event {$/;"	s
event_active	event.c	/^event_active(struct event *ev, int res, short ncalls)$/;"	f
event_active_internal	event.c	/^event_active_internal(struct event *ev, int res, short ncalls)$/;"	f	file:
event_add	event.c	/^event_add(struct event *ev, const struct timeval *tv)$/;"	f
event_add_internal	event.c	/^event_add_internal(struct event *ev, const struct timeval *tv)$/;"	f	file:
event_assign	event.c	/^event_assign(struct event *ev, struct event_base *base, evutil_socket_t fd, short events, void (*cb)(evutil_socket_t, short, void *), void *arg)$/;"	f
event_base	evdns.c	/^	struct event_base *event_base;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::event_base	file:
event_base	evdns.c	/^	struct event_base *event_base;$/;"	m	struct:evdns_server_port	typeref:struct:evdns_server_port::event_base	file:
event_base	event-internal.h	/^struct event_base {$/;"	s
event_base_config_flag	include/event2/event.h	/^enum event_base_config_flag {$/;"	g
event_base_dispatch	event.c	/^event_base_dispatch(struct event_base *event_base)$/;"	f
event_base_dump_events	event.c	/^event_base_dump_events(struct event_base *base, FILE *output)$/;"	f
event_base_free	event.c	/^event_base_free(struct event_base *base)$/;"	f
event_base_get_features	event.c	/^event_base_get_features(struct event_base *base)$/;"	f
event_base_get_iocp	event_iocp.c	/^event_base_get_iocp(struct event_base *base)$/;"	f
event_base_get_method	event.c	/^event_base_get_method(struct event_base *base)$/;"	f
event_base_loop	event.c	/^event_base_loop(struct event_base *base, int flags)$/;"	f
event_base_loopbreak	event.c	/^event_base_loopbreak(struct event_base *event_base)$/;"	f
event_base_loopexit	event.c	/^event_base_loopexit(struct event_base *event_base, const struct timeval *tv)$/;"	f
event_base_new	event.c	/^event_base_new(void)$/;"	f
event_base_new_with_config	event.c	/^event_base_new_with_config(struct event_config *cfg)$/;"	f
event_base_once	event.c	/^event_base_once(struct event_base *base, evutil_socket_t fd, short events,$/;"	f
event_base_priority_init	event.c	/^event_base_priority_init(struct event_base *base, int npriorities)$/;"	f
event_base_set	event.c	/^event_base_set(struct event_base *base, struct event *ev)$/;"	f
event_break	event-internal.h	/^	int event_break;		\/**< Set to exit loop immediately *\/$/;"	m	struct:event_base
event_config	event-internal.h	/^struct event_config {$/;"	s
event_config_avoid_method	event.c	/^event_config_avoid_method(struct event_config *cfg, const char *method)$/;"	f
event_config_entry	event-internal.h	/^struct event_config_entry {$/;"	s
event_config_entry_free	event.c	/^event_config_entry_free(struct event_config_entry *entry)$/;"	f	file:
event_config_free	event.c	/^event_config_free(struct event_config *cfg)$/;"	f
event_config_is_avoided_method	event.c	/^event_config_is_avoided_method(struct event_config *cfg, const char *method)$/;"	f	file:
event_config_new	event.c	/^event_config_new(void)$/;"	f
event_config_require_features	event.c	/^event_config_require_features(struct event_config *cfg,$/;"	f
event_config_set_flag	event.c	/^event_config_set_flag(struct event_config *cfg,$/;"	f
event_count	event-internal.h	/^	int event_count;		\/**< counts number of total events *\/$/;"	m	struct:event_base
event_count	poll.c	/^	int event_count;		\/* Highest number alloc *\/$/;"	m	struct:pollop	file:
event_count_active	event-internal.h	/^	int event_count_active;		\/**< counts number of active events *\/$/;"	m	struct:event_base
event_debug	log-internal.h	46;"	d
event_debug	log-internal.h	48;"	d
event_deferred_cb_cancel	event.c	/^event_deferred_cb_cancel(struct event_base *base, struct deferred_cb *cb)$/;"	f
event_deferred_cb_init	event.c	/^event_deferred_cb_init(struct deferred_cb *cb, deferred_cb_fn fn, void *arg)$/;"	f
event_deferred_cb_schedule	event.c	/^event_deferred_cb_schedule(struct event_base *base, struct deferred_cb *cb)$/;"	f
event_del	event.c	/^event_del(struct event *ev)$/;"	f
event_del_internal	event.c	/^event_del_internal(struct event *ev)$/;"	f	file:
event_dispatch	event.c	/^event_dispatch(void)$/;"	f
event_err	log.c	/^event_err(int eval, const char *fmt, ...)$/;"	f
event_errx	log.c	/^event_errx(int eval, const char *fmt, ...)$/;"	f
event_fds	select.c	/^	int event_fds;		\/* Highest fd in fd set *\/$/;"	m	struct:selectop	file:
event_fdsz	select.c	/^	int event_fdsz;$/;"	m	struct:selectop	file:
event_free	event.c	/^event_free(struct event *ev)$/;"	f
event_get_base	event.c	/^event_get_base(struct event *ev)$/;"	f
event_get_fd	event.c	/^event_get_fd(struct event *ev)$/;"	f
event_get_method	event.c	/^event_get_method(void)$/;"	f
event_get_signal	include/event2/event.h	499;"	d
event_get_supported_methods	event.c	/^event_get_supported_methods(void)$/;"	f
event_get_version	event.c	/^event_get_version(void)$/;"	f
event_get_version_number	event.c	/^event_get_version_number(void)$/;"	f
event_gotterm	event-internal.h	/^	int event_gotterm;		\/**< Set to terminate loop once done$/;"	m	struct:event_base
event_haveevents	event.c	/^event_haveevents(struct event_base *base)$/;"	f	file:
event_init	event.c	/^event_init(void)$/;"	f
event_initialized	include/event2/event.h	492;"	d
event_io_map	event-internal.h	98;"	d
event_iocp_activate_overlapped	event_iocp.c	/^event_iocp_activate_overlapped($/;"	f
event_iocp_notify_all	event_iocp.c	/^event_iocp_notify_all(struct event_iocp_port *port)$/;"	f	file:
event_iocp_port	iocp-internal.h	/^struct event_iocp_port {$/;"	s
event_iocp_port_associate	event_iocp.c	/^event_iocp_port_associate(struct event_iocp_port *port, evutil_socket_t fd,$/;"	f
event_iocp_port_launch	event_iocp.c	/^event_iocp_port_launch(void)$/;"	f
event_iocp_shutdown	event_iocp.c	/^event_iocp_shutdown(struct event_iocp_port *port, long waitMsec)$/;"	f
event_is_method_disabled	event.c	/^event_is_method_disabled(const char *name)$/;"	f	file:
event_log	log.c	/^event_log(int severity, const char *msg)$/;"	f	file:
event_log_cb	include/event2/event.h	/^typedef void (*event_log_cb)(int severity, const char *msg);$/;"	t
event_loop	event.c	/^event_loop(int flags)$/;"	f
event_loopbreak	event.c	/^event_loopbreak(void)$/;"	f
event_loopexit	event.c	/^event_loopexit(const struct timeval *tv)$/;"	f
event_loopexit_cb	event.c	/^event_loopexit_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
event_map_entry	evmap.c	/^struct event_map_entry {$/;"	s	file:
event_method_feature	include/event2/event.h	/^enum event_method_feature {$/;"	g
event_msgx	log.c	/^event_msgx(const char *fmt, ...)$/;"	f
event_new	event.c	/^event_new(struct event_base *base, evutil_socket_t fd, short events, void (*cb)(evutil_socket_t, short, void *), void *arg)$/;"	f
event_once	event.c	/^event_once(evutil_socket_t fd, short events,$/;"	f
event_once	event.c	/^struct event_once {$/;"	s	file:
event_once_cb	event.c	/^event_once_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
event_overlapped	buffer_iocp.c	/^	struct event_overlapped event_overlapped;$/;"	m	struct:buffer_overlapped	typeref:struct:buffer_overlapped::event_overlapped	file:
event_overlapped	iocp-internal.h	/^struct event_overlapped {$/;"	s
event_overlapped_init	event_iocp.c	/^event_overlapped_init(struct event_overlapped *o, iocp_callback cb)$/;"	f
event_pending	event.c	/^event_pending(struct event *ev, short event, struct timeval *tv)$/;"	f
event_persist_closure	event.c	/^event_persist_closure(struct event_base *base, struct event *ev)$/;"	f	file:
event_priority_init	event.c	/^event_priority_init(int npriorities)$/;"	f
event_priority_set	event.c	/^event_priority_set(struct event *ev, int pri)$/;"	f
event_process_active	event.c	/^event_process_active(struct event_base *base)$/;"	f	file:
event_process_active_single_queue	event.c	/^event_process_active_single_queue(struct event_base *base,$/;"	f	file:
event_process_deferred_callbacks	event.c	/^event_process_deferred_callbacks(struct event_base *base)$/;"	f	file:
event_queue_insert	event.c	/^event_queue_insert(struct event_base *base, struct event *ev, int queue)$/;"	f	file:
event_queue_remove	event.c	/^event_queue_remove(struct event_base *base, struct event *ev, int queue)$/;"	f	file:
event_readset_in	select.c	/^	fd_set *event_readset_in;$/;"	m	struct:selectop	file:
event_readset_out	select.c	/^	fd_set *event_readset_out;$/;"	m	struct:selectop	file:
event_reinit	event.c	/^event_reinit(struct event_base *base)$/;"	f
event_set	event.c	/^event_set(struct event *ev, evutil_socket_t fd, short events,$/;"	f
event_set	poll.c	/^	struct pollfd *event_set;$/;"	m	struct:pollop	typeref:struct:pollop::pollfd	file:
event_set_log_callback	log.c	/^event_set_log_callback(event_log_cb cb)$/;"	f
event_set_mem_functions	event.c	/^event_set_mem_functions(void *(*malloc_fn)(size_t sz),$/;"	f
event_signal_closure	event.c	/^event_signal_closure(struct event_base *base, struct event *ev)$/;"	f	file:
event_signal_map	event-internal.h	/^struct event_signal_map {$/;"	s
event_sock_err	log.c	/^event_sock_err(int eval, evutil_socket_t sock, const char *fmt, ...)$/;"	f
event_sock_warn	log.c	/^event_sock_warn(int sock, const char *fmt, ...)$/;"	f
event_test_DEPENDENCIES	sample/Makefile	/^event_test_DEPENDENCIES = ..\/libevent.la$/;"	m
event_test_LDADD	sample/Makefile	/^event_test_LDADD = $(LDADD)$/;"	m
event_test_OBJECTS	sample/Makefile	/^event_test_OBJECTS = event-test.$(OBJEXT)$/;"	m
event_test_SOURCES	sample/Makefile	/^event_test_SOURCES = event-test.c$/;"	m
event_test_sources	sample/Makefile	/^event_test_sources = event-test.c$/;"	m
event_tv	event-internal.h	/^	struct timeval event_tv;$/;"	m	struct:event_base	typeref:struct:event_base::timeval
event_warn	log.c	/^event_warn(const char *fmt, ...)$/;"	f
event_warnx	log.c	/^event_warnx(const char *fmt, ...)$/;"	f
event_watermark	include/event2/bufferevent_struct.h	/^struct event_watermark {$/;"	s
event_writeset_in	select.c	/^	fd_set *event_writeset_in;$/;"	m	struct:selectop	file:
event_writeset_out	select.c	/^	fd_set *event_writeset_out;$/;"	m	struct:selectop	file:
eventcb_pending	bufferevent-internal.h	/^	short eventcb_pending;$/;"	m	struct:bufferevent_private
eventop	event-internal.h	/^struct eventop {$/;"	s
eventops	event.c	/^static const struct eventop *eventops[] = {$/;"	v	typeref:struct:eventop	file:
eventqueue	event-internal.h	/^	struct event_list eventqueue;$/;"	m	struct:event_base	typeref:struct:event_base::event_list
events	devpoll.c	/^	struct pollfd *events;$/;"	m	struct:devpollop	typeref:struct:devpollop::pollfd	file:
events	epoll.c	/^	struct epoll_event *events;$/;"	m	struct:epollop	typeref:struct:epollop::epoll_event	file:
events	evmap.c	/^	struct event_list events;$/;"	m	struct:evmap_io	typeref:struct:evmap_io::event_list	file:
events	evmap.c	/^	struct event_list events;$/;"	m	struct:evmap_signal	typeref:struct:evmap_signal::event_list	file:
events	kqueue.c	/^	struct kevent *events;$/;"	m	struct:kqop	typeref:struct:kqop::kevent	file:
events	test/bench.c	/^static struct event *events;$/;"	v	typeref:struct:event	file:
events	test/bench_cascade.c	/^static struct event *events;$/;"	v	typeref:struct:event	file:
everrorcb	include/event2/bufferevent_compat.h	32;"	d
evhttp	http-internal.h	/^struct evhttp {$/;"	s
evhttp_accept_socket	http.c	/^evhttp_accept_socket(struct evhttp *http, evutil_socket_t fd)$/;"	f
evhttp_add_event	http.c	/^evhttp_add_event(struct event *ev, int timeout, int default_timeout)$/;"	f	file:
evhttp_add_header	http.c	/^evhttp_add_header(struct evkeyvalq *headers,$/;"	f
evhttp_add_header_internal	http.c	/^evhttp_add_header_internal(struct evkeyvalq *headers,$/;"	f	file:
evhttp_add_virtual_host	http.c	/^evhttp_add_virtual_host(struct evhttp* http, const char *pattern,$/;"	f
evhttp_append_to_last_header	http.c	/^evhttp_append_to_last_header(struct evkeyvalq *headers, const char *line)$/;"	f	file:
evhttp_associate_new_request_with_connection	http.c	/^evhttp_associate_new_request_with_connection(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_bind_socket	http.c	/^evhttp_bind_socket(struct evhttp *http, const char *address, ev_uint16_t port)$/;"	f
evhttp_bound_socket	http-internal.h	/^struct evhttp_bound_socket {$/;"	s
evhttp_cancel_request	http.c	/^evhttp_cancel_request(struct evhttp_request *req)$/;"	f
evhttp_cb	http-internal.h	/^struct evhttp_cb {$/;"	s
evhttp_clear_headers	http.c	/^evhttp_clear_headers(struct evkeyvalq *headers)$/;"	f
evhttp_cmd_type	include/event2/http.h	/^enum evhttp_cmd_type {$/;"	g
evhttp_connected	http.c	/^evhttp_connected(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_connection	http-internal.h	/^struct evhttp_connection {$/;"	s
evhttp_connection_base_new	http.c	/^evhttp_connection_base_new(struct event_base *base,$/;"	f
evhttp_connection_cb	http.c	/^evhttp_connection_cb(struct bufferevent *bufev, void *arg)$/;"	f	file:
evhttp_connection_cb_cleanup	http.c	/^evhttp_connection_cb_cleanup(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_connection_connect	http.c	/^evhttp_connection_connect(struct evhttp_connection *evcon)$/;"	f
evhttp_connection_done	http.c	/^evhttp_connection_done(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_connection_error	http-internal.h	/^enum evhttp_connection_error {$/;"	g
evhttp_connection_fail	http.c	/^evhttp_connection_fail(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_free	http.c	/^evhttp_connection_free(struct evhttp_connection *evcon)$/;"	f
evhttp_connection_get_peer	http.c	/^evhttp_connection_get_peer(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_incoming_fail	http.c	/^evhttp_connection_incoming_fail(struct evhttp_request *req,$/;"	f	file:
evhttp_connection_new	http.c	/^evhttp_connection_new(const char *address, unsigned short port)$/;"	f
evhttp_connection_reset	http.c	/^evhttp_connection_reset(struct evhttp_connection *evcon)$/;"	f
evhttp_connection_retry	http.c	/^evhttp_connection_retry(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
evhttp_connection_set_base	http.c	/^evhttp_connection_set_base(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_closecb	http.c	/^evhttp_connection_set_closecb(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_local_address	http.c	/^evhttp_connection_set_local_address(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_local_port	http.c	/^evhttp_connection_set_local_port(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_retries	http.c	/^evhttp_connection_set_retries(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_timeout	http.c	/^evhttp_connection_set_timeout(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_start_detectclose	http.c	/^evhttp_connection_start_detectclose(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_connection_state	http-internal.h	/^enum evhttp_connection_state {$/;"	g
evhttp_connection_stop_detectclose	http.c	/^evhttp_connection_stop_detectclose(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_decode_uri	http.c	/^evhttp_decode_uri(const char *uri)$/;"	f
evhttp_decode_uri_internal	http.c	/^evhttp_decode_uri_internal($/;"	f	file:
evhttp_del_cb	http.c	/^evhttp_del_cb(struct evhttp *http, const char *uri)$/;"	f
evhttp_dispatch_callback	http.c	/^evhttp_dispatch_callback(struct httpcbq *callbacks, struct evhttp_request *req)$/;"	f	file:
evhttp_encode_uri	http.c	/^evhttp_encode_uri(const char *uri)$/;"	f
evhttp_error_cb	http.c	/^evhttp_error_cb(struct bufferevent *bufev, short what, void *arg)$/;"	f	file:
evhttp_find_header	http.c	/^evhttp_find_header(const struct evkeyvalq *headers, const char *key)$/;"	f
evhttp_free	http.c	/^evhttp_free(struct evhttp* http)$/;"	f
evhttp_get_body	http.c	/^evhttp_get_body(struct evhttp_connection *evcon, struct evhttp_request *req)$/;"	f	file:
evhttp_get_body_length	http.c	/^evhttp_get_body_length(struct evhttp_request *req)$/;"	f	file:
evhttp_get_request	http.c	/^evhttp_get_request(struct evhttp *http, evutil_socket_t fd,$/;"	f
evhttp_get_request_connection	http.c	/^evhttp_get_request_connection($/;"	f	file:
evhttp_handle_chunked_read	http.c	/^evhttp_handle_chunked_read(struct evhttp_request *req, struct evbuffer *buf)$/;"	f	file:
evhttp_handle_request	http.c	/^evhttp_handle_request(struct evhttp_request *req, void *arg)$/;"	f	file:
evhttp_header_is_valid_value	http.c	/^evhttp_header_is_valid_value(const char *value)$/;"	f	file:
evhttp_htmlescape	http.c	/^evhttp_htmlescape(const char *html)$/;"	f
evhttp_is_connection_close	http.c	/^evhttp_is_connection_close(int flags, struct evkeyvalq* headers)$/;"	f	file:
evhttp_is_connection_keepalive	http.c	/^evhttp_is_connection_keepalive(struct evkeyvalq* headers)$/;"	f	file:
evhttp_make_header	http.c	/^evhttp_make_header(struct evhttp_connection *evcon, struct evhttp_request *req)$/;"	f
evhttp_make_header_request	http.c	/^evhttp_make_header_request(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_make_header_response	http.c	/^evhttp_make_header_response(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_make_request	http.c	/^evhttp_make_request(struct evhttp_connection *evcon,$/;"	f
evhttp_maybe_add_content_length_header	http.c	/^evhttp_maybe_add_content_length_header(struct evkeyvalq *headers,$/;"	f	file:
evhttp_maybe_add_date_header	http.c	/^evhttp_maybe_add_date_header(struct evkeyvalq *headers)$/;"	f	file:
evhttp_method	http.c	/^evhttp_method(enum evhttp_cmd_type type)$/;"	f	file:
evhttp_new	http.c	/^evhttp_new(struct event_base *base)$/;"	f
evhttp_new_object	http.c	/^evhttp_new_object(void)$/;"	f	file:
evhttp_parse_firstline	http.c	/^evhttp_parse_firstline(struct evhttp_request *req, struct evbuffer *buffer)$/;"	f
evhttp_parse_headers	http.c	/^evhttp_parse_headers(struct evhttp_request *req, struct evbuffer* buffer)$/;"	f
evhttp_parse_query	http.c	/^evhttp_parse_query(const char *uri, struct evkeyvalq *headers)$/;"	f
evhttp_parse_request_line	http.c	/^evhttp_parse_request_line(struct evhttp_request *req, char *line)$/;"	f	file:
evhttp_parse_response_line	http.c	/^evhttp_parse_response_line(struct evhttp_request *req, char *line)$/;"	f	file:
evhttp_read_body	http.c	/^evhttp_read_body(struct evhttp_connection *evcon, struct evhttp_request *req)$/;"	f	file:
evhttp_read_cb	http.c	/^evhttp_read_cb(struct bufferevent *bufev, void *arg)$/;"	f	file:
evhttp_read_firstline	http.c	/^evhttp_read_firstline(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_read_header	http.c	/^evhttp_read_header(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_read_trailer	http.c	/^evhttp_read_trailer(struct evhttp_connection *evcon, struct evhttp_request *req)$/;"	f	file:
evhttp_remove_header	http.c	/^evhttp_remove_header(struct evkeyvalq *headers, const char *key)$/;"	f
evhttp_remove_virtual_host	http.c	/^evhttp_remove_virtual_host(struct evhttp* http, struct evhttp* vhost)$/;"	f
evhttp_request	include/event2/http_struct.h	/^struct evhttp_request {$/;"	s
evhttp_request_dispatch	http.c	/^evhttp_request_dispatch(struct evhttp_connection* evcon)$/;"	f	file:
evhttp_request_free	http.c	/^evhttp_request_free(struct evhttp_request *req)$/;"	f
evhttp_request_get_input_buffer	http.c	/^struct evbuffer *evhttp_request_get_input_buffer(struct evhttp_request *req)$/;"	f
evhttp_request_get_input_headers	http.c	/^struct evkeyvalq *evhttp_request_get_input_headers(struct evhttp_request *req)$/;"	f
evhttp_request_get_output_buffer	http.c	/^struct evbuffer *evhttp_request_get_output_buffer(struct evhttp_request *req)$/;"	f
evhttp_request_get_output_headers	http.c	/^struct evkeyvalq *evhttp_request_get_output_headers(struct evhttp_request *req)$/;"	f
evhttp_request_get_uri	http.c	/^evhttp_request_get_uri(struct evhttp_request *req) {$/;"	f
evhttp_request_is_owned	http.c	/^evhttp_request_is_owned(struct evhttp_request *req)$/;"	f
evhttp_request_kind	include/event2/http.h	/^enum evhttp_request_kind { EVHTTP_REQUEST, EVHTTP_RESPONSE };$/;"	g
evhttp_request_new	http.c	/^evhttp_request_new(void (*cb)(struct evhttp_request *, void *), void *arg)$/;"	f
evhttp_request_own	http.c	/^evhttp_request_own(struct evhttp_request *req)$/;"	f
evhttp_request_set_chunked_cb	http.c	/^evhttp_request_set_chunked_cb(struct evhttp_request *req,$/;"	f
evhttp_request_uri	include/event2/http_compat.h	90;"	d
evhttp_response_code	http.c	/^evhttp_response_code(struct evhttp_request *req, int code, const char *reason)$/;"	f
evhttp_response_needs_body	http.c	/^evhttp_response_needs_body(struct evhttp_request *req)$/;"	f	file:
evhttp_send	http.c	/^evhttp_send(struct evhttp_request *req, struct evbuffer *databuf)$/;"	f	file:
evhttp_send_done	http.c	/^evhttp_send_done(struct evhttp_connection *evcon, void *arg)$/;"	f	file:
evhttp_send_error	http.c	/^evhttp_send_error(struct evhttp_request *req, int error, const char *reason)$/;"	f
evhttp_send_page	http.c	/^evhttp_send_page(struct evhttp_request *req, struct evbuffer *databuf)$/;"	f
evhttp_send_reply	http.c	/^evhttp_send_reply(struct evhttp_request *req, int code, const char *reason,$/;"	f
evhttp_send_reply_chunk	http.c	/^evhttp_send_reply_chunk(struct evhttp_request *req, struct evbuffer *databuf)$/;"	f
evhttp_send_reply_end	http.c	/^evhttp_send_reply_end(struct evhttp_request *req)$/;"	f
evhttp_send_reply_start	http.c	/^evhttp_send_reply_start(struct evhttp_request *req, int code,$/;"	f
evhttp_set_cb	http.c	/^evhttp_set_cb(struct evhttp *http, const char *uri,$/;"	f
evhttp_set_gencb	http.c	/^evhttp_set_gencb(struct evhttp *http,$/;"	f
evhttp_set_timeout	http.c	/^evhttp_set_timeout(struct evhttp* http, int timeout_in_secs)$/;"	f
evhttp_start	http.c	/^evhttp_start(const char *address, unsigned short port)$/;"	f
evhttp_start_read	http.c	/^evhttp_start_read(struct evhttp_connection *evcon)$/;"	f
evhttp_valid_response_code	http.c	/^evhttp_valid_response_code(int code)$/;"	f	file:
evhttp_write_buffer	http.c	/^evhttp_write_buffer(struct evhttp_connection *evcon,$/;"	f
evhttp_write_cb	http.c	/^evhttp_write_cb(struct bufferevent *bufev, void *arg)$/;"	f	file:
evhttp_write_connectioncb	http.c	/^evhttp_write_connectioncb(struct evhttp_connection *evcon, void *arg)$/;"	f	file:
evkeyval	include/event2/event_struct.h	/^struct evkeyval {$/;"	s
evmap_io	evmap.c	/^		struct evmap_io evmap_io;$/;"	m	union:event_map_entry::__anon11	typeref:struct:event_map_entry::__anon11::evmap_io	file:
evmap_io	evmap.c	/^struct evmap_io {$/;"	s	file:
evmap_io_active	evmap.c	/^evmap_io_active(struct event_base *base, int fd, short events)$/;"	f
evmap_io_add	evmap.c	/^evmap_io_add(struct event_base *base, int fd, struct event *ev)$/;"	f
evmap_io_clear	evmap.c	/^evmap_io_clear(struct event_io_map* ctx)$/;"	f
evmap_io_clear	evmap.c	/^void evmap_io_clear(struct event_io_map *ctx)$/;"	f
evmap_io_del	evmap.c	/^evmap_io_del(struct event_base *base, int fd, struct event *ev)$/;"	f
evmap_io_get_fdinfo	evmap.c	/^evmap_io_get_fdinfo(struct event_io_map *map, evutil_socket_t fd)$/;"	f
evmap_io_init	evmap.c	/^evmap_io_init(struct evmap_io *entry)$/;"	f	file:
evmap_io_initmap	evmap.c	/^evmap_io_initmap(struct event_io_map* ctx)$/;"	f
evmap_io_initmap	evmap.c	/^void evmap_io_initmap(struct event_io_map *ctx)$/;"	f
evmap_make_space	evmap.c	/^evmap_make_space(struct event_signal_map *map, int slot, int msize)$/;"	f	file:
evmap_signal	evmap.c	/^struct evmap_signal {$/;"	s	file:
evmap_signal_active	evmap.c	/^evmap_signal_active(struct event_base *base, int sig, int ncalls)$/;"	f
evmap_signal_add	evmap.c	/^evmap_signal_add(struct event_base *base, int sig, struct event *ev)$/;"	f
evmap_signal_clear	evmap.c	/^evmap_signal_clear(struct event_signal_map *ctx)$/;"	f
evmap_signal_del	evmap.c	/^evmap_signal_del(struct event_base *base, int sig, struct event *ev)$/;"	f
evmap_signal_init	evmap.c	/^evmap_signal_init(struct evmap_signal *entry)$/;"	f	file:
evmap_signal_initmap	evmap.c	/^evmap_signal_initmap(struct event_signal_map *ctx)$/;"	f
evport_add	evport.c	/^evport_add(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
evport_data	evport.c	/^struct evport_data {$/;"	s	file:
evport_dealloc	evport.c	/^evport_dealloc(struct event_base *base)$/;"	f	file:
evport_del	evport.c	/^evport_del(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
evport_dispatch	evport.c	/^evport_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
evport_init	evport.c	/^evport_init(struct event_base *base)$/;"	f	file:
evportops	evport.c	/^const struct eventop evportops = {$/;"	v	typeref:struct:eventop
evrpc	include/event2/rpc_struct.h	/^struct evrpc {$/;"	s
evrpc_add_hook	evrpc.c	/^evrpc_add_hook(void *vbase,$/;"	f
evrpc_base	evrpc-internal.h	/^struct evrpc_base {$/;"	s
evrpc_construct_uri	evrpc.c	/^evrpc_construct_uri(const char *uri)$/;"	f	file:
evrpc_free	evrpc.c	/^evrpc_free(struct evrpc_base *base)$/;"	f
evrpc_hook	evrpc-internal.h	/^struct evrpc_hook {$/;"	s
evrpc_hook_add_meta	evrpc.c	/^evrpc_hook_add_meta(void *ctx, const char *key,$/;"	f
evrpc_hook_associate_meta	evrpc.c	/^evrpc_hook_associate_meta(struct evrpc_hook_meta **pctx,$/;"	f	file:
evrpc_hook_context_free	evrpc.c	/^evrpc_hook_context_free(struct evrpc_hook_meta *ctx)$/;"	f	file:
evrpc_hook_ctx	evrpc-internal.h	/^struct evrpc_hook_ctx {$/;"	s
evrpc_hook_find_meta	evrpc.c	/^evrpc_hook_find_meta(void *ctx, const char *key, void **data, size_t *data_size)$/;"	f
evrpc_hook_get_connection	evrpc.c	/^evrpc_hook_get_connection(void *ctx)$/;"	f
evrpc_hook_meta	evrpc-internal.h	/^struct evrpc_hook_meta {$/;"	s
evrpc_hook_meta_new	evrpc.c	/^evrpc_hook_meta_new(void)$/;"	f	file:
evrpc_init	evrpc.c	/^evrpc_init(struct evhttp *http_server)$/;"	f
evrpc_make_request	evrpc.c	/^evrpc_make_request(struct evrpc_request_wrapper *ctx)$/;"	f
evrpc_make_request_ctx	evrpc.c	/^evrpc_make_request_ctx($/;"	f
evrpc_meta	evrpc-internal.h	/^struct evrpc_meta {$/;"	s
evrpc_meta_data_free	evrpc.c	/^evrpc_meta_data_free(struct evrpc_meta_list *meta_data)$/;"	f	file:
evrpc_pause_request	evrpc.c	/^evrpc_pause_request(void *vbase, void *ctx,$/;"	f	file:
evrpc_pool	evrpc-internal.h	/^struct evrpc_pool {$/;"	s
evrpc_pool_add_connection	evrpc.c	/^evrpc_pool_add_connection(struct evrpc_pool *pool,$/;"	f
evrpc_pool_find_connection	evrpc.c	/^evrpc_pool_find_connection(struct evrpc_pool *pool)$/;"	f	file:
evrpc_pool_free	evrpc.c	/^evrpc_pool_free(struct evrpc_pool *pool)$/;"	f
evrpc_pool_new	evrpc.c	/^evrpc_pool_new(struct event_base *base)$/;"	f
evrpc_pool_remove_connection	evrpc.c	/^evrpc_pool_remove_connection(struct evrpc_pool *pool,$/;"	f
evrpc_pool_schedule	evrpc.c	/^evrpc_pool_schedule(struct evrpc_pool *pool)$/;"	f	file:
evrpc_pool_set_timeout	evrpc.c	/^evrpc_pool_set_timeout(struct evrpc_pool *pool, int timeout_in_secs)$/;"	f
evrpc_process_hooks	evrpc.c	/^evrpc_process_hooks(struct evrpc_hook_list *head, void *ctx,$/;"	f	file:
evrpc_register_generic	evrpc.c	/^evrpc_register_generic(struct evrpc_base *base, const char *name,$/;"	f
evrpc_register_object	evrpc.c	/^evrpc_register_object(const char *name,$/;"	f	file:
evrpc_register_rpc	evrpc.c	/^evrpc_register_rpc(struct evrpc_base *base, struct evrpc *rpc,$/;"	f
evrpc_remove_hook	evrpc.c	/^evrpc_remove_hook(void *vbase, enum EVRPC_HOOK_TYPE hook_type, void *handle)$/;"	f
evrpc_remove_hook_internal	evrpc.c	/^evrpc_remove_hook_internal(struct evrpc_hook_list *head, void *handle)$/;"	f	file:
evrpc_reply_done	evrpc.c	/^evrpc_reply_done(struct evhttp_request *req, void *arg)$/;"	f	file:
evrpc_reply_done_closure	evrpc.c	/^evrpc_reply_done_closure(void *arg, enum EVRPC_HOOK_RESULT hook_res)$/;"	f	file:
evrpc_req_generic	evrpc-internal.h	/^struct evrpc_req_generic {$/;"	s
evrpc_reqstate_free	evrpc.c	/^evrpc_reqstate_free(struct evrpc_req_generic* rpc_state)$/;"	f
evrpc_request_cb	evrpc.c	/^evrpc_request_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
evrpc_request_cb_closure	evrpc.c	/^evrpc_request_cb_closure(void *arg, enum EVRPC_HOOK_RESULT hook_res)$/;"	f	file:
evrpc_request_done	evrpc.c	/^evrpc_request_done(struct evrpc_req_generic *rpc_state)$/;"	f
evrpc_request_done_closure	evrpc.c	/^evrpc_request_done_closure(void *arg, enum EVRPC_HOOK_RESULT hook_res)$/;"	f	file:
evrpc_request_get_pool	evrpc.c	/^evrpc_request_get_pool(struct evrpc_request_wrapper *ctx)$/;"	f
evrpc_request_set_cb	evrpc.c	/^evrpc_request_set_cb(struct evrpc_request_wrapper *ctx,$/;"	f
evrpc_request_set_pool	evrpc.c	/^evrpc_request_set_pool(struct evrpc_request_wrapper *ctx,$/;"	f
evrpc_request_timeout	evrpc.c	/^evrpc_request_timeout(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
evrpc_request_wrapper	evrpc-internal.h	/^struct evrpc_request_wrapper {$/;"	s
evrpc_request_wrapper_free	evrpc.c	/^evrpc_request_wrapper_free(struct evrpc_request_wrapper *request)$/;"	f	file:
evrpc_resume_request	evrpc.c	/^evrpc_resume_request(void *vbase, void *ctx, enum EVRPC_HOOK_RESULT res)$/;"	f
evrpc_schedule_request	evrpc.c	/^evrpc_schedule_request(struct evhttp_connection *connection,$/;"	f	file:
evrpc_schedule_request_closure	evrpc.c	/^evrpc_schedule_request_closure(void *arg, enum EVRPC_HOOK_RESULT hook_res)$/;"	f	file:
evrpc_send_request_generic	evrpc.c	/^evrpc_send_request_generic(struct evrpc_pool *pool,$/;"	f
evrpc_status	include/event2/rpc_struct.h	/^struct evrpc_status {$/;"	s
evrpc_unregister_rpc	evrpc.c	/^evrpc_unregister_rpc(struct evrpc_base *base, const char *name)$/;"	f
evsel	event-internal.h	/^	const struct eventop *evsel;$/;"	m	struct:event_base	typeref:struct:event_base::eventop
evsig_add	signal.c	/^evsig_add(struct event_base *base, int evsignal, short old, short events, void *p)$/;"	f	file:
evsig_base	signal.c	/^struct event_base *evsig_base = NULL;$/;"	v	typeref:struct:event_base
evsig_caught	evsignal-internal.h	/^	volatile sig_atomic_t evsig_caught;$/;"	m	struct:evsig_info
evsig_cb	signal.c	/^evsig_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
evsig_dealloc	signal.c	/^evsig_dealloc(struct event_base *base)$/;"	f
evsig_del	signal.c	/^evsig_del(struct event_base *base, int evsignal, short old, short events, void *p)$/;"	f	file:
evsig_handler	signal.c	/^evsig_handler(int sig)$/;"	f	file:
evsig_info	evsignal-internal.h	/^struct evsig_info {$/;"	s
evsig_init	signal.c	/^evsig_init(struct event_base *base)$/;"	f
evsig_process	signal.c	/^evsig_process(struct event_base *base)$/;"	f
evsigbase	event-internal.h	/^	void *evsigbase;$/;"	m	struct:event_base
evsigcaught	evsignal-internal.h	/^	sig_atomic_t evsigcaught[NSIG];$/;"	m	struct:evsig_info
evsignal_add	include/event2/event.h	343;"	d
evsignal_assign	include/event2/event.h	344;"	d
evsignal_del	include/event2/event.h	348;"	d
evsignal_initialized	include/event2/event.h	350;"	d
evsignal_new	include/event2/event.h	346;"	d
evsignal_pending	include/event2/event.h	349;"	d
evsignal_set	include/event2/event_compat.h	244;"	d
evsigops	signal.c	/^static const struct eventop evsigops = {$/;"	v	typeref:struct:eventop	file:
evsigsel	event-internal.h	/^	const struct eventop *evsigsel;$/;"	m	struct:event_base	typeref:struct:event_base::eventop
evtag_consume	event_tagging.c	/^evtag_consume(struct evbuffer *evbuf)$/;"	f
evtag_decode_int	event_tagging.c	/^evtag_decode_int(ev_uint32_t *pnumber, struct evbuffer *evbuf)$/;"	f
evtag_decode_int64	event_tagging.c	/^evtag_decode_int64(ev_uint64_t *pnumber, struct evbuffer *evbuf)$/;"	f
evtag_decode_tag	event_tagging.c	/^evtag_decode_tag(ev_uint32_t *ptag, struct evbuffer *evbuf)$/;"	f
evtag_encode_int	event_tagging.c	/^evtag_encode_int(struct evbuffer *evbuf, ev_uint32_t number)$/;"	f
evtag_encode_int64	event_tagging.c	/^evtag_encode_int64(struct evbuffer *evbuf, ev_uint64_t number)$/;"	f
evtag_encode_tag	event_tagging.c	/^evtag_encode_tag(struct evbuffer *evbuf, ev_uint32_t tag)$/;"	f
evtag_fuzz	test/regress.c	/^evtag_fuzz(void *ptr)$/;"	f	file:
evtag_init	event_tagging.c	/^evtag_init(void)$/;"	f
evtag_int_test	test/regress.c	/^evtag_int_test(void *ptr)$/;"	f	file:
evtag_marshal	event_tagging.c	/^evtag_marshal(struct evbuffer *evbuf, ev_uint32_t tag,$/;"	f
evtag_marshal_buffer	event_tagging.c	/^evtag_marshal_buffer(struct evbuffer *evbuf, ev_uint32_t tag,$/;"	f
evtag_marshal_int	event_tagging.c	/^evtag_marshal_int(struct evbuffer *evbuf, ev_uint32_t tag, ev_uint32_t integer)$/;"	f
evtag_marshal_int64	event_tagging.c	/^evtag_marshal_int64(struct evbuffer *evbuf, ev_uint32_t tag,$/;"	f
evtag_marshal_kill	test/regress.gen.c	/^evtag_marshal_kill(struct evbuffer *evbuf, ev_uint32_t tag, const struct kill *msg)$/;"	f
evtag_marshal_msg	test/regress.gen.c	/^evtag_marshal_msg(struct evbuffer *evbuf, ev_uint32_t tag, const struct msg *msg)$/;"	f
evtag_marshal_run	test/regress.gen.c	/^evtag_marshal_run(struct evbuffer *evbuf, ev_uint32_t tag, const struct run *msg)$/;"	f
evtag_marshal_string	event_tagging.c	/^evtag_marshal_string(struct evbuffer *buf, ev_uint32_t tag, const char *string)$/;"	f
evtag_marshal_timeval	event_tagging.c	/^evtag_marshal_timeval(struct evbuffer *evbuf, ev_uint32_t tag, struct timeval *tv)$/;"	f
evtag_payload_length	event_tagging.c	/^evtag_payload_length(struct evbuffer *evbuf, ev_uint32_t *plength)$/;"	f
evtag_peek	event_tagging.c	/^evtag_peek(struct evbuffer *evbuf, ev_uint32_t *ptag)$/;"	f
evtag_peek_length	event_tagging.c	/^evtag_peek_length(struct evbuffer *evbuf, ev_uint32_t *plength)$/;"	f
evtag_tag_encoding	test/regress.c	/^evtag_tag_encoding(void *ptr)$/;"	f	file:
evtag_testcases	test/regress.c	/^struct testcase_t evtag_testcases[] = {$/;"	v	typeref:struct:testcase_t
evtag_unmarshal	event_tagging.c	/^evtag_unmarshal(struct evbuffer *src, ev_uint32_t *ptag, struct evbuffer *dst)$/;"	f
evtag_unmarshal_fixed	event_tagging.c	/^evtag_unmarshal_fixed(struct evbuffer *src, ev_uint32_t need_tag, void *data,$/;"	f
evtag_unmarshal_header	event_tagging.c	/^evtag_unmarshal_header(struct evbuffer *evbuf, ev_uint32_t *ptag)$/;"	f
evtag_unmarshal_int	event_tagging.c	/^evtag_unmarshal_int(struct evbuffer *evbuf, ev_uint32_t need_tag,$/;"	f
evtag_unmarshal_int64	event_tagging.c	/^evtag_unmarshal_int64(struct evbuffer *evbuf, ev_uint32_t need_tag,$/;"	f
evtag_unmarshal_kill	test/regress.gen.c	/^evtag_unmarshal_kill(struct evbuffer *evbuf, ev_uint32_t need_tag, struct kill *msg)$/;"	f
evtag_unmarshal_msg	test/regress.gen.c	/^evtag_unmarshal_msg(struct evbuffer *evbuf, ev_uint32_t need_tag, struct msg *msg)$/;"	f
evtag_unmarshal_run	test/regress.gen.c	/^evtag_unmarshal_run(struct evbuffer *evbuf, ev_uint32_t need_tag, struct run *msg)$/;"	f
evtag_unmarshal_string	event_tagging.c	/^evtag_unmarshal_string(struct evbuffer *evbuf, ev_uint32_t need_tag,$/;"	f
evtag_unmarshal_timeval	event_tagging.c	/^evtag_unmarshal_timeval(struct evbuffer *evbuf, ev_uint32_t need_tag,$/;"	f
evthread_make_base_notifiable	event.c	/^evthread_make_base_notifiable(struct event_base *base)$/;"	f
evthread_notify_base	event.c	/^evthread_notify_base(struct event_base *base)$/;"	f	file:
evthread_notify_base_default	event.c	/^evthread_notify_base_default(struct event_base *base)$/;"	f	file:
evthread_notify_base_eventfd	event.c	/^evthread_notify_base_eventfd(struct event_base *base)$/;"	f	file:
evthread_notify_drain_default	event.c	/^evthread_notify_drain_default(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
evthread_notify_drain_eventfd	event.c	/^evthread_notify_drain_eventfd(int fd, short what, void *arg)$/;"	f	file:
evthread_posix_get_id	evthread_pthread.c	/^evthread_posix_get_id(void)$/;"	f	file:
evthread_posix_lock	evthread_pthread.c	/^evthread_posix_lock(int mode, void *_lock)$/;"	f	file:
evthread_posix_lock_create	evthread_pthread.c	/^evthread_posix_lock_create(void)$/;"	f	file:
evthread_posix_lock_free	evthread_pthread.c	/^evthread_posix_lock_free(void *_lock)$/;"	f	file:
evthread_set_id_callback	event.c	/^evthread_set_id_callback(unsigned long (*id_fn)(void))$/;"	f
evthread_set_lock_create_callbacks	event.c	/^evthread_set_lock_create_callbacks(void *(*alloc_fn)(void),$/;"	f
evthread_set_locking_callback	event.c	/^evthread_set_locking_callback(void (*locking_fn)(int mode, void *lock))$/;"	f
evthread_use_pthreads	evthread_pthread.c	/^evthread_use_pthreads(void)$/;"	f
evthread_use_windows_threads	evthread_win32.c	/^evthread_use_windows_threads(void)$/;"	f
evthread_win32_get_id	evthread_win32.c	/^evthread_win32_get_id(void)$/;"	f	file:
evthread_win32_lock	evthread_win32.c	/^evthread_win32_lock(int mode, void *_lock)$/;"	f	file:
evthread_win32_lock_create	evthread_win32.c	/^evthread_win32_lock_create(void)$/;"	f	file:
evthread_win32_lock_free	evthread_win32.c	/^evthread_win32_lock_free(void *_lock)$/;"	f	file:
evtimer_add	include/event2/event.h	332;"	d
evtimer_assign	include/event2/event.h	323;"	d
evtimer_del	include/event2/event.h	339;"	d
evtimer_initialized	include/event2/event.h	341;"	d
evtimer_new	include/event2/event.h	324;"	d
evtimer_pending	include/event2/event.h	340;"	d
evtimer_set	include/event2/event_compat.h	243;"	d
evutil_gettimeofday	evutil.c	/^evutil_gettimeofday(struct timeval *tv, struct timezone *tz)$/;"	f
evutil_gettimeofday	include/event2/util.h	249;"	d
evutil_inet_ntop	evutil.c	/^evutil_inet_ntop(int af, const void *src, char *dst, size_t len)$/;"	f
evutil_inet_pton	evutil.c	/^evutil_inet_pton(int af, const char *src, void *dst)$/;"	f
evutil_make_listen_socket_reuseable	evutil.c	/^evutil_make_listen_socket_reuseable(evutil_socket_t sock)$/;"	f
evutil_make_socket_nonblocking	evutil.c	/^evutil_make_socket_nonblocking(evutil_socket_t fd)$/;"	f
evutil_offsetof	include/event2/util.h	238;"	d
evutil_offsetof	include/event2/util.h	240;"	d
evutil_parse_sockaddr_port	evutil.c	/^evutil_parse_sockaddr_port(const char *ip_as_string, struct sockaddr *out, int *outlen)$/;"	f
evutil_snprintf	evutil.c	/^evutil_snprintf(char *buf, size_t buflen, const char *format, ...)$/;"	f
evutil_socket_error_to_string	evutil.c	/^evutil_socket_error_to_string(int errcode)$/;"	f
evutil_socket_error_to_string	include/event2/util.h	186;"	d
evutil_socket_geterror	evutil.c	/^evutil_socket_geterror(evutil_socket_t sock)$/;"	f
evutil_socket_geterror	include/event2/util.h	185;"	d
evutil_socket_t	include/event2/util.h	124;"	d
evutil_socket_t	include/event2/util.h	126;"	d
evutil_socketpair	evutil.c	/^evutil_socketpair(int family, int type, int protocol, evutil_socket_t fd[2])$/;"	f
evutil_strcasecmp	evutil.c	/^evutil_strcasecmp(const char *s1, const char *s2)$/;"	f
evutil_strncasecmp	evutil.c	/^int evutil_strncasecmp(const char *s1, const char *s2, size_t n)$/;"	f
evutil_strtoll	evutil.c	/^evutil_strtoll(const char *s, char **endptr, int base)$/;"	f
evutil_timeradd	include/event2/util.h	194;"	d
evutil_timeradd	include/event2/util.h	197;"	d
evutil_timerclear	include/event2/util.h	218;"	d
evutil_timerclear	include/event2/util.h	220;"	d
evutil_timercmp	include/event2/util.h	225;"	d
evutil_timerisset	include/event2/util.h	231;"	d
evutil_timerisset	include/event2/util.h	233;"	d
evutil_timersub	include/event2/util.h	195;"	d
evutil_timersub	include/event2/util.h	206;"	d
evutil_vsnprintf	evutil.c	/^evutil_vsnprintf(char *buf, size_t buflen, const char *format, va_list ap)$/;"	f
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	include/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	sample/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	test/Makefile	/^exec_prefix = ${prefix}$/;"	m
exset_out	WIN32-Code/win32.c	/^	struct win_fd_set *exset_out;$/;"	m	struct:win32op	typeref:struct:win32op::win_fd_set	file:
extra	evbuffer-internal.h	/^	void *extra;$/;"	m	struct:evbuffer_chain_reference
fail_cb	test/regress.c	/^fail_cb(int fd, short events, void *arg)$/;"	f	file:
failed_times	evdns.c	/^	int failed_times;  \/* number of times which we have given this server a chance *\/$/;"	m	struct:nameserver	file:
fake_freeaddrinfo	http.c	/^fake_freeaddrinfo(struct addrinfo *ai)$/;"	f	file:
fake_getaddrinfo	http.c	/^fake_getaddrinfo(const char *hostname, struct addrinfo *ai)$/;"	f	file:
fake_getnameinfo	http.c	/^fake_getnameinfo(const struct sockaddr *sa, size_t salen, char *host,$/;"	f	file:
fd	buffer_iocp.c	/^	evutil_socket_t fd;$/;"	m	struct:evbuffer_overlapped	file:
fd	bufferevent-internal.h	/^	evutil_socket_t fd;$/;"	m	union:bufferevent_ctrl_data
fd	evbuffer-internal.h	/^	int fd;	\/**< the fd associated with this chain *\/$/;"	m	struct:evbuffer_chain_fd
fd	evmap.c	/^	evutil_socket_t fd;$/;"	m	struct:event_map_entry	file:
fd	http-internal.h	/^	evutil_socket_t fd;$/;"	m	struct:evhttp_connection
fd_array	WIN32-Code/win32.c	/^	SOCKET fd_array[1];$/;"	m	struct:win_fd_set	file:
fd_count	WIN32-Code/win32.c	/^	u_int fd_count;$/;"	m	struct:win_fd_set	file:
fd_info	evport.c	/^struct fd_info {$/;"	s	file:
fd_set_copy	WIN32-Code/win32.c	/^fd_set_copy(struct win_fd_set *out, const struct win_fd_set *in)$/;"	f	file:
fd_setsz	WIN32-Code/win32.c	/^	int fd_setsz;$/;"	m	struct:win32op	file:
fdi_what	evport.c	/^	short fdi_what;		\/* combinations of EV_READ and EV_WRITE *\/$/;"	m	struct:fd_info	file:
fdinfo_len	event-internal.h	/^	size_t fdinfo_len;$/;"	m	struct:eventop
features	event-internal.h	/^	enum event_method_feature features;$/;"	m	struct:eventop	typeref:enum:eventop::event_method_feature
fifo_read	sample/event-test.c	/^fifo_read(int fd, short event, void *arg)$/;"	f	file:
fired	test/bench.c	/^static int count, writes, fired;$/;"	v	file:
fired	test/bench_cascade.c	/^static int fired;$/;"	v	file:
first	evbuffer-internal.h	/^	struct evbuffer_chain *first;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::evbuffer_chain
first_pinned	buffer_iocp.c	/^	struct evbuffer_chain *first_pinned;$/;"	m	struct:buffer_overlapped	typeref:struct:buffer_overlapped::evbuffer_chain	file:
fixed_bytes_assign	test/regress.gen.h	/^  int (*fixed_bytes_assign)(struct run *, const ev_uint8_t *);$/;"	m	struct:run_access_
fixed_bytes_data	test/regress.gen.h	/^  ev_uint8_t fixed_bytes_data[24];$/;"	m	struct:run
fixed_bytes_get	test/regress.gen.h	/^  int (*fixed_bytes_get)(struct run *, ev_uint8_t **);$/;"	m	struct:run_access_
fixed_bytes_set	test/regress.gen.h	/^  ev_uint8_t fixed_bytes_set;$/;"	m	struct:run
flags	evbuffer-internal.h	/^	ev_uint32_t flags;$/;"	m	struct:evbuffer_cb_entry
flags	evbuffer-internal.h	/^	unsigned flags;$/;"	m	struct:evbuffer_chain
flags	event-internal.h	/^        enum event_base_config_flag flags;$/;"	m	struct:event_config	typeref:enum:event_config::event_base_config_flag
flags	http-internal.h	/^	int flags;$/;"	m	struct:evhttp_connection
flags	include/event2/dns_struct.h	/^	int flags;$/;"	m	struct:evdns_server_request
flags	include/event2/http_struct.h	/^	int flags;$/;"	m	struct:evhttp_request
flags	listener.c	/^	unsigned flags;$/;"	m	struct:evconnlistener	file:
flags	test/tinytest.h	/^	unsigned long flags; \/**< Bitfield of TT_* flags. *\/$/;"	m	struct:testcase_t
flush	bufferevent-internal.h	/^        int (*flush)(struct bufferevent *, short, enum bufferevent_flush_mode);$/;"	m	struct:bufferevent_ops
fn	test/tinytest.h	/^	testcase_fn fn; \/**< The function to run to implement this case. *\/$/;"	m	struct:testcase_t
free_context	bufferevent_filter.c	/^	void (*free_context)(void *);$/;"	m	struct:bufferevent_filtered	file:
freeze_end	evbuffer-internal.h	/^	unsigned freeze_end : 1;$/;"	m	struct:evbuffer
freeze_start	evbuffer-internal.h	/^	unsigned freeze_start : 1;$/;"	m	struct:evbuffer
frob_socket	test/bench_httpclient.c	/^frob_socket(int sock)$/;"	f	file:
from_name_assign	test/regress.gen.h	/^  int (*from_name_assign)(struct msg *, const char *);$/;"	m	struct:msg_access_
from_name_data	test/regress.gen.h	/^  char *from_name_data;$/;"	m	struct:msg
from_name_get	test/regress.gen.h	/^  int (*from_name_get)(struct msg *, char * *);$/;"	m	struct:msg_access_
from_name_set	test/regress.gen.h	/^  ev_uint8_t from_name_set;$/;"	m	struct:msg
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
gencb	http-internal.h	/^	void (*gencb)(struct evhttp_request *req, void *);$/;"	m	struct:evhttp
gencbarg	http-internal.h	/^	void *gencbarg;$/;"	m	struct:evhttp
getstate	test/regress_zlib.c	/^getstate(enum bufferevent_flush_mode state)$/;"	f	file:
gettime	event.c	/^gettime(struct event_base *base, struct timeval *tp)$/;"	f	file:
global_base	test/regress.c	/^struct event_base *global_base;$/;"	v	typeref:struct:event_base
global_good_nameservers	evdns.c	/^	int global_good_nameservers;$/;"	m	struct:evdns_base	file:
global_max_nameserver_timeout	evdns.c	/^	int global_max_nameserver_timeout;$/;"	m	struct:evdns_base	file:
global_max_reissues	evdns.c	/^	int global_max_reissues;  \/* a reissue occurs when we get some errors from the server *\/$/;"	m	struct:evdns_base	file:
global_max_requests_inflight	evdns.c	/^	int global_max_requests_inflight;$/;"	m	struct:evdns_base	file:
global_max_retransmits	evdns.c	/^	int global_max_retransmits;  \/* number of times we'll retransmit a request which timed out *\/$/;"	m	struct:evdns_base	file:
global_nameserver_timeouts	evdns.c	/^static const struct timeval global_nameserver_timeouts[] = {{10, 0}, {60, 0}, {300, 0}, {900, 0}, {3600, 0}};$/;"	v	typeref:struct:timeval	file:
global_nameserver_timeouts_length	evdns.c	/^static const int global_nameserver_timeouts_length = sizeof(global_nameserver_timeouts)\/sizeof(struct timeval);$/;"	v	file:
global_outgoing_address	evdns.c	/^	struct sockaddr_storage global_outgoing_address;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::sockaddr_storage	file:
global_outgoing_addrlen	evdns.c	/^	socklen_t global_outgoing_addrlen;$/;"	m	struct:evdns_base	file:
global_randomize_case	evdns.c	/^	int global_randomize_case;$/;"	m	struct:evdns_base	file:
global_requests_inflight	evdns.c	/^	int global_requests_inflight;$/;"	m	struct:evdns_base	file:
global_requests_waiting	evdns.c	/^	int global_requests_waiting;$/;"	m	struct:evdns_base	file:
global_search_state	evdns.c	/^	struct search_state *global_search_state;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::search_state	file:
global_timeout	evdns.c	/^	struct timeval global_timeout;	\/* 5 seconds *\/$/;"	m	struct:evdns_base	typeref:struct:evdns_base::timeval	file:
got_eof	bufferevent_filter.c	/^	unsigned got_eof;$/;"	m	struct:bufferevent_filtered	file:
grow	evport.c	/^grow(struct evport_data *epdp, int factor)$/;"	f	file:
handle_entry	event_iocp.c	/^handle_entry(OVERLAPPED *o, ULONG_PTR completion_key, DWORD nBytes)$/;"	f	file:
hashsocket	evmap.c	/^hashsocket(struct event_map_entry *e)$/;"	f	file:
have_answer	evdns.c	/^	unsigned int have_answer;$/;"	m	struct:reply	file:
have_reply	evdns.c	/^	u8 have_reply;$/;"	m	struct:deferred_reply_callback	file:
head	evdns.c	/^	struct search_domain *head;$/;"	m	struct:search_state	typeref:struct:search_state::search_domain	file:
high	include/event2/bufferevent_struct.h	/^	size_t high;$/;"	m	struct:event_watermark
hook_meta	evrpc-internal.h	/^	struct evrpc_hook_meta *hook_meta;$/;"	m	struct:evrpc_req_generic	typeref:struct:evrpc_req_generic::evrpc_hook_meta
hook_meta	evrpc-internal.h	/^	struct evrpc_hook_meta *hook_meta;$/;"	m	struct:evrpc_request_wrapper	typeref:struct:evrpc_request_wrapper::evrpc_hook_meta
hook_pause_cb_called	test/regress_rpc.c	/^static int hook_pause_cb_called=0;$/;"	v	file:
host	Makefile	/^host = mipsel-unknown-linux-gnu$/;"	m
host	include/Makefile	/^host = mipsel-unknown-linux-gnu$/;"	m
host	sample/Makefile	/^host = mipsel-unknown-linux-gnu$/;"	m
host	test/Makefile	/^host = mipsel-unknown-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = mipsel-linux$/;"	m
host_alias	include/Makefile	/^host_alias = mipsel-linux$/;"	m
host_alias	sample/Makefile	/^host_alias = mipsel-linux$/;"	m
host_alias	test/Makefile	/^host_alias = mipsel-linux$/;"	m
host_cpu	Makefile	/^host_cpu = mipsel$/;"	m
host_cpu	include/Makefile	/^host_cpu = mipsel$/;"	m
host_cpu	sample/Makefile	/^host_cpu = mipsel$/;"	m
host_cpu	test/Makefile	/^host_cpu = mipsel$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_os	include/Makefile	/^host_os = linux-gnu$/;"	m
host_os	sample/Makefile	/^host_os = linux-gnu$/;"	m
host_os	test/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = mipsel-unknown-linux-gnu$/;"	m
host_triplet	include/Makefile	/^host_triplet = mipsel-unknown-linux-gnu$/;"	m
host_triplet	sample/Makefile	/^host_triplet = mipsel-unknown-linux-gnu$/;"	m
host_triplet	test/Makefile	/^host_triplet = mipsel-unknown-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = unknown$/;"	m
host_vendor	include/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	sample/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	test/Makefile	/^host_vendor = unknown$/;"	m
how_assign	test/regress.gen.h	/^  int (*how_assign)(struct run *, const char *);$/;"	m	struct:run_access_
how_data	test/regress.gen.h	/^  char *how_data;$/;"	m	struct:run
how_get	test/regress.gen.h	/^  int (*how_get)(struct run *, char * *);$/;"	m	struct:run_access_
how_often_add	test/regress.gen.h	/^  ev_uint32_t * (*how_often_add)(struct kill *msg, const ev_uint32_t value);$/;"	m	struct:kill_access_
how_often_assign	test/regress.gen.h	/^  int (*how_often_assign)(struct kill *, int, const ev_uint32_t);$/;"	m	struct:kill_access_
how_often_data	test/regress.gen.h	/^  ev_uint32_t *how_often_data;$/;"	m	struct:kill
how_often_get	test/regress.gen.h	/^  int (*how_often_get)(struct kill *, int, ev_uint32_t *);$/;"	m	struct:kill_access_
how_often_length	test/regress.gen.h	/^  int how_often_length;$/;"	m	struct:kill
how_often_num_allocated	test/regress.gen.h	/^  int how_often_num_allocated;$/;"	m	struct:kill
how_often_set	test/regress.gen.h	/^  ev_uint8_t how_often_set;$/;"	m	struct:kill
how_set	test/regress.gen.h	/^  ev_uint8_t how_set;$/;"	m	struct:run
howmany	select.c	57;"	d	file:
ht_improve_hash	ht-internal.h	/^ht_improve_hash(unsigned h)$/;"	f
ht_string_hash	ht-internal.h	/^ht_string_hash(const char *s)$/;"	f
html_replace	http.c	/^html_replace(char ch, char *buf)$/;"	f	file:
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	include/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	sample/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	test/Makefile	/^htmldir = ${docdir}$/;"	m
http	test/regress_http.c	/^static struct evhttp *http;$/;"	v	typeref:struct:evhttp	file:
http_bad_header_test	test/regress_http.c	/^http_bad_header_test(void *ptr)$/;"	f	file:
http_base_test	test/regress_http.c	/^http_base_test(void)$/;"	f	file:
http_basic_cb	test/bench_http.c	/^http_basic_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_basic_cb	test/regress_http.c	/^http_basic_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_basic_test	test/regress_http.c	/^http_basic_test(void)$/;"	f	file:
http_cancel_test	test/regress_http.c	/^http_cancel_test(void)$/;"	f	file:
http_chunk_out_test	test/regress_http.c	/^http_chunk_out_test(void)$/;"	f	file:
http_chunked_cb	test/regress_http.c	/^http_chunked_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_chunked_errorcb	test/regress_http.c	/^http_chunked_errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
http_chunked_readcb	test/regress_http.c	/^http_chunked_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_chunked_request_done	test/regress_http.c	/^http_chunked_request_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_chunked_trickle_cb	test/regress_http.c	/^http_chunked_trickle_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
http_chunked_writecb	test/regress_http.c	/^http_chunked_writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_close_detection_delay_test	test/regress_http.c	/^http_close_detection_delay_test(void)$/;"	f	file:
http_close_detection_test	test/regress_http.c	/^http_close_detection_test(void)$/;"	f	file:
http_complete_write	test/regress_http.c	/^http_complete_write(int fd, short what, void *arg)$/;"	f	file:
http_connect	test/regress_http.c	/^http_connect(const char *address, u_short port)$/;"	f	file:
http_connection_retry_done	test/regress_http.c	/^http_connection_retry_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_connection_retry_test	test/regress_http.c	/^http_connection_retry_test(void)$/;"	f	file:
http_connection_test	test/regress_http.c	/^http_connection_test(void)$/;"	f	file:
http_delay_cb	test/regress_http.c	/^http_delay_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_delay_reply	test/regress_http.c	/^http_delay_reply(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
http_delete_cb	test/regress_http.c	/^http_delete_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_delete_test	test/regress_http.c	/^http_delete_test(void)$/;"	f	file:
http_dispatcher_cb	test/regress_http.c	/^http_dispatcher_cb(struct evhttp_request *req, void *arg)$/;"	f
http_dispatcher_test	test/regress_http.c	/^http_dispatcher_test(void)$/;"	f	file:
http_dispatcher_test_done	test/regress_http.c	/^http_dispatcher_test_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_do_cancel	test/regress_http.c	/^http_do_cancel(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
http_errorcb	test/regress_http.c	/^http_errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
http_failure_readcb	test/regress_http.c	/^http_failure_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_failure_test	test/regress_http.c	/^http_failure_test(void)$/;"	f	file:
http_highport_test	test/regress_http.c	/^http_highport_test(void)$/;"	f	file:
http_incomplete_errorcb	test/regress_http.c	/^http_incomplete_errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
http_incomplete_readcb	test/regress_http.c	/^http_incomplete_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_incomplete_test	test/regress_http.c	/^http_incomplete_test(void)$/;"	f	file:
http_incomplete_timeout_test	test/regress_http.c	/^http_incomplete_timeout_test(void)$/;"	f	file:
http_incomplete_writecb	test/regress_http.c	/^http_incomplete_writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_large_delay_cb	test/regress_http.c	/^http_large_delay_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_make_web_server	test/regress_http.c	/^http_make_web_server(int fd, short what, void *arg)$/;"	f	file:
http_multi_line_header_test	test/regress_http.c	/^http_multi_line_header_test(void)$/;"	f	file:
http_negative_content_length_test	test/regress_http.c	/^http_negative_content_length_test(void)$/;"	f	file:
http_parse_query_test	test/regress_http.c	/^http_parse_query_test(void *ptr)$/;"	f	file:
http_persist_connection_test	test/regress_http.c	/^http_persist_connection_test(void)$/;"	f	file:
http_post_cb	test/regress_http.c	/^http_post_cb(struct evhttp_request *req, void *arg)$/;"	f
http_post_test	test/regress_http.c	/^http_post_test(void)$/;"	f	file:
http_postrequest_done	test/regress_http.c	/^http_postrequest_done(struct evhttp_request *req, void *arg)$/;"	f
http_primitives	test/regress_http.c	/^http_primitives(void *ptr)$/;"	f	file:
http_put_cb	test/regress_http.c	/^http_put_cb(struct evhttp_request *req, void *arg)$/;"	f
http_put_test	test/regress_http.c	/^http_put_test(void)$/;"	f	file:
http_putrequest_done	test/regress_http.c	/^http_putrequest_done(struct evhttp_request *req, void *arg)$/;"	f
http_readcb	test/regress_http.c	/^http_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_ref_cb	test/bench_http.c	/^http_ref_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_req	evrpc-internal.h	/^	struct evhttp_request* http_req;$/;"	m	struct:evrpc_req_generic	typeref:struct:evrpc_req_generic::evhttp_request
http_req	include/event2/rpc_struct.h	/^	struct evhttp_request *http_req;$/;"	m	struct:evrpc_status	typeref:struct:evrpc_status::evhttp_request
http_request_bad	test/regress_http.c	/^http_request_bad(struct evhttp_request *req, void *arg)$/;"	f	file:
http_request_done	test/regress_http.c	/^http_request_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_request_empty_done	test/regress_http.c	/^http_request_empty_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_request_expect_error	test/regress_http.c	/^http_request_expect_error(struct evhttp_request *req, void *arg)$/;"	f	file:
http_request_never_call	test/regress_http.c	/^http_request_never_call(struct evhttp_request *req, void *arg)$/;"	f	file:
http_server	evrpc-internal.h	/^	struct evhttp* http_server;$/;"	m	struct:evrpc_base	typeref:struct:evrpc_base::evhttp
http_server	http-internal.h	/^	struct evhttp *http_server;$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::evhttp
http_setup	test/regress_http.c	/^http_setup(short *pport, struct event_base *base)$/;"	f	file:
http_setup	test/regress_rpc.c	/^http_setup(short *pport)$/;"	f	file:
http_stream_in_cancel_chunk	test/regress_http.c	/^http_stream_in_cancel_chunk(struct evhttp_request *req, void *arg)$/;"	f	file:
http_stream_in_cancel_done	test/regress_http.c	/^http_stream_in_cancel_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_stream_in_cancel_test	test/regress_http.c	/^http_stream_in_cancel_test(void)$/;"	f	file:
http_stream_in_chunk	test/regress_http.c	/^http_stream_in_chunk(struct evhttp_request *req, void *arg)$/;"	f	file:
http_stream_in_done	test/regress_http.c	/^http_stream_in_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_stream_in_test	test/regress_http.c	/^http_stream_in_test(void)$/;"	f	file:
http_stream_out_test	test/regress_http.c	/^http_stream_out_test(void)$/;"	f	file:
http_testcases	test/regress_http.c	/^struct testcase_t http_testcases[] = {$/;"	v	typeref:struct:testcase_t
http_virtual_host_test	test/regress_http.c	/^http_virtual_host_test(void)$/;"	f	file:
http_writecb	test/regress_http.c	/^http_writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
hz	compat/sys/_time.h	/^	int	hz;		\/* clock frequency *\/$/;"	m	struct:clockinfo
i	test/regress_http.c	/^	int i;$/;"	m	struct:chunk_req_state	file:
idx_info	WIN32-Code/win32.c	/^struct idx_info {$/;"	s	file:
idxplus1	poll.c	/^	int idxplus1;$/;"	m	struct:pollidx	file:
in6_addr	ipv6-internal.h	/^struct in6_addr {$/;"	s
in_hooks	evrpc-internal.h	/^	struct evrpc_hook_list in_hooks;$/;"	m	struct:_evrpc_hooks	typeref:struct:_evrpc_hooks::evrpc_hook_list
in_legacy_test_wrapper	test/regress_main.c	/^int in_legacy_test_wrapper = 0;$/;"	v
in_tinytest_main	test/tinytest.c	/^static int in_tinytest_main = 0; \/**< true if we're in tinytest_main().*\/$/;"	v	file:
includeHEADERS_INSTALL	Makefile	/^includeHEADERS_INSTALL = $(INSTALL_HEADER)$/;"	m
include_HEADERS	Makefile	/^include_HEADERS = event.h evhttp.h evdns.h evrpc.h evutil.h$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	include/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	sample/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	test/Makefile	/^includedir = ${prefix}\/include$/;"	m
incref_and_lock	bufferevent_pair.c	/^incref_and_lock(struct bufferevent *b)$/;"	f	file:
infilter_calls	test/regress_zlib.c	/^static int infilter_calls;$/;"	v	file:
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	include/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	sample/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	test/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init	event-internal.h	/^	void *(*init)(struct event_base *);$/;"	m	struct:eventop
inline	WIN32-Code/config.h	221;"	d
inline	util-internal.h	38;"	d
input	include/event2/bufferevent_struct.h	/^	struct evbuffer *input;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::evbuffer
input_buffer	include/event2/http_struct.h	/^	struct evbuffer *input_buffer;	\/* read data *\/$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evbuffer
input_headers	include/event2/http_struct.h	/^	struct evkeyvalq *input_headers;$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evkeyvalq
input_hooks	evrpc-internal.h	67;"	d
install_sh	Makefile	/^install_sh = $(SHELL) \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/install-sh$/;"	m
install_sh	include/Makefile	/^install_sh = $(SHELL) \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/install-sh$/;"	m
install_sh	sample/Makefile	/^install_sh = $(SHELL) \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/install-sh$/;"	m
install_sh	test/Makefile	/^install_sh = $(SHELL) \/home\/steven\/cvs\/RT288x_SDK\/source\/lib\/libevent-2.0.2-alpha\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	include/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	sample/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	test/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	include/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	sample/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	test/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	include/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	sample/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	test/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
io	event-internal.h	/^	struct event_io_map io;$/;"	m	struct:event_base	typeref:struct:event_base::event_io_map
iocp	event-internal.h	/^	struct event_iocp_port *iocp;$/;"	m	struct:event_base	typeref:struct:event_base::event_iocp_port
iocp_callback	iocp-internal.h	/^typedef void (*iocp_callback)(struct event_overlapped *, uintptr_t, ev_ssize_t);$/;"	t
iocp_testcases	test/regress_iocp.c	/^struct testcase_t iocp_testcases[] = {$/;"	v	typeref:struct:testcase_t
iov_base	include/event2/buffer.h	/^	void *iov_base;$/;"	m	struct:evbuffer_iovec
iov_len	include/event2/buffer.h	/^	size_t iov_len;$/;"	m	struct:evbuffer_iovec
ipv4_entries	test/regress_util.c	/^} ipv4_entries[] = {$/;"	v	typeref:struct:ipv4_entry	file:
ipv4_entry	test/regress_util.c	/^static struct ipv4_entry {$/;"	s	file:
ipv6_entries	test/regress_util.c	/^} ipv6_entries[] = {$/;"	v	typeref:struct:ipv6_entry	file:
ipv6_entry	test/regress_util.c	/^static struct ipv6_entry {$/;"	s	file:
is_name	evdns.c	/^	char is_name; \/* True iff data is a label *\/$/;"	m	struct:server_reply_item	file:
is_overlapped	evbuffer-internal.h	/^	unsigned is_overlapped : 1;$/;"	m	struct:evbuffer
it_interval	compat/sys/_time.h	/^	struct	timeval it_interval;	\/* timer interval *\/$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval
it_value	compat/sys/_time.h	/^	struct	timeval it_value;	\/* current value *\/$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval
itimerval	compat/sys/_time.h	/^struct	itimerval {$/;"	s
key	evrpc-internal.h	/^	char *key;$/;"	m	struct:evrpc_meta
key	include/event2/event_struct.h	/^	char *key;$/;"	m	struct:evkeyval
keys	test/regress_iocp.c	/^	uintptr_t keys[MAX_CALLS];$/;"	m	struct:dummy_overlapped	file:
kill	test/regress.gen.h	/^struct kill {$/;"	s
kill_	test/regress.gen.h	/^enum kill_ {$/;"	g
kill_access_	test/regress.gen.h	/^struct kill_access_ {$/;"	s
kill_action_assign	test/regress.gen.c	/^kill_action_assign(struct kill *msg,$/;"	f
kill_action_get	test/regress.gen.c	/^kill_action_get(struct kill *msg, char * *value)$/;"	f
kill_clear	test/regress.gen.c	/^kill_clear(struct kill *tmp)$/;"	f
kill_complete	test/regress.gen.c	/^kill_complete(struct kill *msg)$/;"	f
kill_free	test/regress.gen.c	/^kill_free(struct kill *tmp)$/;"	f
kill_how_often_add	test/regress.gen.c	/^kill_how_often_add(struct kill *msg, const ev_uint32_t value)$/;"	f
kill_how_often_assign	test/regress.gen.c	/^kill_how_often_assign(struct kill *msg, int off,$/;"	f
kill_how_often_get	test/regress.gen.c	/^kill_how_often_get(struct kill *msg, int offset,$/;"	f
kill_marshal	test/regress.gen.c	/^kill_marshal(struct evbuffer *evbuf, const struct kill *tmp){$/;"	f
kill_new	test/regress.gen.c	/^kill_new(void)$/;"	f
kill_unmarshal	test/regress.gen.c	/^kill_unmarshal(struct kill *tmp,  struct evbuffer *evbuf)$/;"	f
kill_weapon_assign	test/regress.gen.c	/^kill_weapon_assign(struct kill *msg,$/;"	f
kill_weapon_get	test/regress.gen.c	/^kill_weapon_get(struct kill *msg, char * *value)$/;"	f
kind	include/event2/http_struct.h	/^	enum evhttp_request_kind kind;$/;"	m	struct:evhttp_request	typeref:enum:evhttp_request::evhttp_request_kind
kq	kqueue.c	/^	int kq;$/;"	m	struct:kqop	file:
kq_add	kqueue.c	/^kq_add(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
kq_dealloc	kqueue.c	/^kq_dealloc(struct event_base *base)$/;"	f	file:
kq_del	kqueue.c	/^kq_del(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
kq_dispatch	kqueue.c	/^kq_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
kq_init	kqueue.c	/^kq_init(struct event_base *base)$/;"	f	file:
kq_insert	kqueue.c	/^kq_insert(struct kqop *kqop, struct kevent *kev)$/;"	f	file:
kq_sig_add	kqueue.c	/^kq_sig_add(struct event_base *base, int nsignal, short old, short events, void *p)$/;"	f	file:
kq_sig_del	kqueue.c	/^kq_sig_del(struct event_base *base, int nsignal, short old, short events, void *p)$/;"	f	file:
kq_sighandler	kqueue.c	/^kq_sighandler(int sig)$/;"	f	file:
kqop	kqueue.c	/^struct kqop {$/;"	s	file:
kqops	kqueue.c	/^const struct eventop kqops = {$/;"	v	typeref:struct:eventop
kqsigops	kqueue.c	/^static const struct eventop kqsigops = {$/;"	v	typeref:struct:eventop	file:
labels	evdns.c	/^	struct dnslabel_entry labels[MAX_LABELS];$/;"	m	struct:dnslabel_table	typeref:struct:dnslabel_table::dnslabel_entry	file:
large_number_assign	test/regress.gen.h	/^  int (*large_number_assign)(struct run *, const ev_uint64_t);$/;"	m	struct:run_access_
large_number_data	test/regress.gen.h	/^  ev_uint64_t large_number_data;$/;"	m	struct:run
large_number_get	test/regress.gen.h	/^  int (*large_number_get)(struct run *, ev_uint64_t *);$/;"	m	struct:run_access_
large_number_set	test/regress.gen.h	/^  ev_uint8_t large_number_set;$/;"	m	struct:run
last	evbuffer-internal.h	/^	struct evbuffer_chain *last;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::evbuffer_chain
lasttime	sample/time-test.c	/^int lasttime;$/;"	v
launch_request	test/bench_httpclient.c	/^launch_request(void)$/;"	f	file:
legacy_setup	test/regress_main.c	/^const struct testcase_setup_t legacy_setup = {$/;"	v	typeref:struct:testcase_setup_t
legacy_test_cleanup	test/regress_main.c	/^legacy_test_cleanup(const struct testcase_t *testcase, void *ptr)$/;"	f	file:
legacy_test_fn	test/regress.h	/^	void (*legacy_test_fn)(void);$/;"	m	struct:basic_test_data
legacy_test_setup	test/regress_main.c	/^legacy_test_setup(const struct testcase_t *testcase)$/;"	f	file:
len	evdns.c	/^	int len;$/;"	m	struct:search_domain	file:
libLTLIBRARIES_INSTALL	Makefile	/^libLTLIBRARIES_INSTALL = $(INSTALL)$/;"	m
lib_LTLIBRARIES	Makefile	/^lib_LTLIBRARIES = libevent.la libevent_core.la libevent_extra.la \\$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	include/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	sample/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	test/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libevent_core_la_DEPENDENCIES	Makefile	/^libevent_core_la_DEPENDENCIES =  ${LIBOBJDIR}select$U.lo ${LIBOBJDIR}poll$U.lo ${LIBOBJDIR}epoll$U.lo ${LIBOBJDIR}signal$U.lo $(am__DEPENDENCIES_1)$/;"	m
libevent_core_la_LDFLAGS	Makefile	/^libevent_core_la_LDFLAGS = -version-info $(VERSION_INFO)$/;"	m
libevent_core_la_LIBADD	Makefile	/^libevent_core_la_LIBADD =  ${LIBOBJDIR}select$U.lo ${LIBOBJDIR}poll$U.lo ${LIBOBJDIR}epoll$U.lo ${LIBOBJDIR}signal$U.lo $(SYS_LIBS)$/;"	m
libevent_core_la_LINK	Makefile	/^libevent_core_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libevent_core_la_OBJECTS	Makefile	/^libevent_core_la_OBJECTS = $(am_libevent_core_la_OBJECTS)$/;"	m
libevent_core_la_SOURCES	Makefile	/^libevent_core_la_SOURCES = $(CORE_SRC)$/;"	m
libevent_extra_la_DEPENDENCIES	Makefile	/^libevent_extra_la_DEPENDENCIES =$/;"	m
libevent_extra_la_LDFLAGS	Makefile	/^libevent_extra_la_LDFLAGS = -version-info $(VERSION_INFO)$/;"	m
libevent_extra_la_LIBADD	Makefile	/^libevent_extra_la_LIBADD = $/;"	m
libevent_extra_la_LINK	Makefile	/^libevent_extra_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libevent_extra_la_OBJECTS	Makefile	/^libevent_extra_la_OBJECTS = $(am_libevent_extra_la_OBJECTS)$/;"	m
libevent_extra_la_SOURCES	Makefile	/^libevent_extra_la_SOURCES = $(EXTRA_SRC)$/;"	m
libevent_la_DEPENDENCIES	Makefile	/^libevent_la_DEPENDENCIES =  ${LIBOBJDIR}select$U.lo ${LIBOBJDIR}poll$U.lo ${LIBOBJDIR}epoll$U.lo ${LIBOBJDIR}signal$U.lo $(am__DEPENDENCIES_1)$/;"	m
libevent_la_LDFLAGS	Makefile	/^libevent_la_LDFLAGS = -version-info $(VERSION_INFO)$/;"	m
libevent_la_LIBADD	Makefile	/^libevent_la_LIBADD =  ${LIBOBJDIR}select$U.lo ${LIBOBJDIR}poll$U.lo ${LIBOBJDIR}epoll$U.lo ${LIBOBJDIR}signal$U.lo $(SYS_LIBS)$/;"	m
libevent_la_LINK	Makefile	/^libevent_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libevent_la_OBJECTS	Makefile	/^libevent_la_OBJECTS = $(am_libevent_la_OBJECTS)$/;"	m
libevent_la_SOURCES	Makefile	/^libevent_la_SOURCES = $(CORE_SRC) $(EXTRA_SRC)$/;"	m
libevent_pthreads_la_LIBADD	Makefile	/^libevent_pthreads_la_LIBADD =$/;"	m
libevent_pthreads_la_OBJECTS	Makefile	/^libevent_pthreads_la_OBJECTS = $(am_libevent_pthreads_la_OBJECTS)$/;"	m
libevent_pthreads_la_SOURCES	Makefile	/^libevent_pthreads_la_SOURCES = evthread_pthread.c$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	include/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	sample/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	test/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
list	Makefile	/^	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \\$/;"	m
listen_cb	test/regress_bufferevent.c	/^listen_cb(struct evconnlistener *listener, evutil_socket_t fd,$/;"	f	file:
listener	listener.c	/^	struct event listener;$/;"	m	struct:evconnlistener	typeref:struct:evconnlistener::event	file:
listener_read_cb	listener.c	/^listener_read_cb(evutil_socket_t fd, short what, void *p)$/;"	f	file:
load_nameservers_from_registry	evdns.c	/^load_nameservers_from_registry(struct evdns_base *base)$/;"	f	file:
load_nameservers_with_getnetworkparams	evdns.c	/^load_nameservers_with_getnetworkparams(struct evdns_base *base)$/;"	f	file:
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	include/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	sample/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	test/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	include/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	sample/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	test/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
lock	bufferevent-internal.h	/^	void *lock;$/;"	m	struct:bufferevent_private
lock	evbuffer-internal.h	/^        void *lock;$/;"	m	struct:evbuffer
lock	evdns.c	/^	void *lock;$/;"	m	struct:evdns_base	file:
lock	evdns.c	/^	void *lock;$/;"	m	struct:evdns_server_port	file:
lock	iocp-internal.h	/^	CRITICAL_SECTION lock;$/;"	m	struct:event_iocp_port
lock	test/regress_iocp.c	/^	void *lock;$/;"	m	struct:dummy_overlapped	file:
lock	test/regress_pthread.c	/^	pthread_mutex_t lock;$/;"	m	struct:cond_wait	file:
lock_count	evbuffer-internal.h	/^        int lock_count;$/;"	m	struct:evbuffer
lock_count	evdns.c	/^	int lock_count;$/;"	m	struct:evdns_base	file:
lock_count	evdns.c	/^	int lock_count;$/;"	m	struct:evdns_server_port	file:
log	evdns.c	510;"	d	file:
log_change_callback	test/regress_buffer.c	/^log_change_callback(struct evbuffer *buffer,$/;"	f	file:
log_fn	log.c	/^static event_log_cb log_fn = NULL;$/;"	v	file:
logfn	evdns.c	/^logfn(int is_warn, const char *msg) {$/;"	f
loop	event_iocp.c	/^loop(void *_port)$/;"	f	file:
low	include/event2/bufferevent_struct.h	/^	size_t low;$/;"	m	struct:event_watermark
lseek	buffer.c	2245;"	d	file:
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
main	evdns.c	/^main(int c, char **v) {$/;"	f
main	sample/event-test.c	/^main (int argc, char **argv)$/;"	f
main	sample/signal-test.c	/^main (int argc, char **argv)$/;"	f
main	sample/time-test.c	/^main (int argc, char **argv)$/;"	f
main	test/bench.c	/^main (int argc, char **argv)$/;"	f
main	test/bench_cascade.c	/^main (int argc, char **argv)$/;"	f
main	test/bench_http.c	/^main (int argc, char **argv)$/;"	f
main	test/bench_httpclient.c	/^main(int argc, char **argv)$/;"	f
main	test/regress_main.c	/^main(int argc, const char **argv)$/;"	f
main	test/test-eof.c	/^main (int argc, char **argv)$/;"	f
main	test/test-init.c	/^main(int argc, char **argv)$/;"	f
main	test/test-time.c	/^main (int argc, char **argv)$/;"	f
main	test/test-weof.c	/^main (int argc, char **argv)$/;"	f
main_callback	evdns.c	/^main_callback(int result, char type, int count, int ttl,$/;"	f
main_testcases	test/regress.c	/^struct testcase_t main_testcases[] = {$/;"	v	typeref:struct:testcase_t
major	include/event2/http_struct.h	/^	char major;			\/* HTTP Major number *\/$/;"	m	struct:evhttp_request
make_addrinfo	http.c	/^make_addrinfo(const char *address, ev_uint16_t port)$/;"	f	file:
man3dir	Makefile	/^man3dir = $(mandir)\/man3$/;"	m
man_MANS	Makefile	/^man_MANS = event.3 evdns.3$/;"	m
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	include/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	sample/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	test/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mem_offset	bufferevent-internal.h	/^	off_t mem_offset;$/;"	m	struct:bufferevent_ops
message_read_status	http-internal.h	/^enum message_read_status {$/;"	g
meta_data	evrpc-internal.h	/^	struct evrpc_meta_list meta_data;$/;"	m	struct:evrpc_hook_meta	typeref:struct:evrpc_hook_meta::evrpc_meta_list
methodname_to_envvar	test/regress.c	/^methodname_to_envvar(const char *mname, char *buf, size_t buflen)$/;"	f	file:
min_heap	minheap-internal.h	/^typedef struct min_heap$/;"	s
min_heap_ctor	minheap-internal.h	/^void min_heap_ctor(min_heap_t* s) { s->p = 0; s->n = 0; s->a = 0; }$/;"	f
min_heap_dtor	minheap-internal.h	/^void min_heap_dtor(min_heap_t* s) { free(s->p); }$/;"	f
min_heap_elem_greater	minheap-internal.h	/^int min_heap_elem_greater(struct event *a, struct event *b)$/;"	f
min_heap_elem_init	minheap-internal.h	/^void min_heap_elem_init(struct event* e) { e->min_heap_idx = -1; }$/;"	f
min_heap_empty	minheap-internal.h	/^int min_heap_empty(min_heap_t* s) { return 0u == s->n; }$/;"	f
min_heap_erase	minheap-internal.h	/^int min_heap_erase(min_heap_t* s, struct event* e)$/;"	f
min_heap_idx	include/event2/event_struct.h	/^	int min_heap_idx;	\/* for managing timeouts *\/$/;"	m	struct:event
min_heap_pop	minheap-internal.h	/^struct event* min_heap_pop(min_heap_t* s)$/;"	f
min_heap_push	minheap-internal.h	/^int min_heap_push(min_heap_t* s, struct event* e)$/;"	f
min_heap_reserve	minheap-internal.h	/^int min_heap_reserve(min_heap_t* s, unsigned n)$/;"	f
min_heap_shift_down_	minheap-internal.h	/^void min_heap_shift_down_(min_heap_t* s, unsigned hole_index, struct event* e)$/;"	f
min_heap_shift_up_	minheap-internal.h	/^void min_heap_shift_up_(min_heap_t* s, unsigned hole_index, struct event* e)$/;"	f
min_heap_size	minheap-internal.h	/^unsigned min_heap_size(min_heap_t* s) { return s->n; }$/;"	f
min_heap_t	minheap-internal.h	/^} min_heap_t;$/;"	t	typeref:struct:min_heap
min_heap_top	minheap-internal.h	/^struct event* min_heap_top(min_heap_t* s) { return s->n ? *s->p : 0; }$/;"	f
minheap_testcases	test/regress_minheap.c	/^struct testcase_t minheap_testcases[] = {$/;"	v	typeref:struct:testcase_t
minor	include/event2/http_struct.h	/^	char minor;			\/* HTTP Minor number *\/$/;"	m	struct:evhttp_request
misalign	evbuffer-internal.h	/^	off_t misalign;$/;"	m	struct:evbuffer_chain
mkdir_p	Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	include/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	sample/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	test/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
mkinstalldirs	include/Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
mkinstalldirs	sample/Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
mkinstalldirs	test/Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
mm_calloc	event.c	/^mm_calloc(size_t count, size_t size)$/;"	f
mm_calloc	mm-internal.h	44;"	d
mm_free	event.c	/^mm_free(void *ptr)$/;"	f
mm_free	mm-internal.h	47;"	d
mm_malloc	event.c	/^mm_malloc(size_t sz)$/;"	f
mm_malloc	mm-internal.h	43;"	d
mm_realloc	event.c	/^mm_realloc(void *ptr, size_t sz)$/;"	f
mm_realloc	mm-internal.h	46;"	d
mm_strdup	event.c	/^mm_strdup(const char *str)$/;"	f
mm_strdup	mm-internal.h	45;"	d
ms	iocp-internal.h	/^	long ms;$/;"	m	struct:event_iocp_port
msg	evutil.c	/^static struct { int code; const char *msg; } windows_socket_errors[] = {$/;"	m	struct:__anon1	file:
msg	test/regress.gen.h	/^struct msg {$/;"	s
msg_	test/regress.gen.h	/^enum msg_ {$/;"	g
msg_access_	test/regress.gen.h	/^struct msg_access_ {$/;"	s
msg_attack_assign	test/regress.gen.c	/^msg_attack_assign(struct msg *msg,$/;"	f
msg_attack_get	test/regress.gen.c	/^msg_attack_get(struct msg *msg, struct kill* *value)$/;"	f
msg_clear	test/regress.gen.c	/^msg_clear(struct msg *tmp)$/;"	f
msg_complete	test/regress.gen.c	/^msg_complete(struct msg *msg)$/;"	f
msg_free	test/regress.gen.c	/^msg_free(struct msg *tmp)$/;"	f
msg_from_name_assign	test/regress.gen.c	/^msg_from_name_assign(struct msg *msg,$/;"	f
msg_from_name_get	test/regress.gen.c	/^msg_from_name_get(struct msg *msg, char * *value)$/;"	f
msg_marshal	test/regress.gen.c	/^msg_marshal(struct evbuffer *evbuf, const struct msg *tmp){$/;"	f
msg_new	test/regress.gen.c	/^msg_new(void)$/;"	f
msg_run_add	test/regress.gen.c	/^msg_run_add(struct msg *msg)$/;"	f
msg_run_assign	test/regress.gen.c	/^msg_run_assign(struct msg *msg, int off,$/;"	f
msg_run_get	test/regress.gen.c	/^msg_run_get(struct msg *msg, int offset,$/;"	f
msg_to_name_assign	test/regress.gen.c	/^msg_to_name_assign(struct msg *msg,$/;"	f
msg_to_name_get	test/regress.gen.c	/^msg_to_name_get(struct msg *msg, char * *value)$/;"	f
msg_unmarshal	test/regress.gen.c	/^msg_unmarshal(struct msg *tmp,  struct evbuffer *evbuf)$/;"	f
multiple_read_cb	test/regress.c	/^multiple_read_cb(int fd, short event, void *arg)$/;"	f	file:
multiple_write_cb	test/regress.c	/^multiple_write_cb(int fd, short event, void *arg)$/;"	f	file:
n	minheap-internal.h	/^    unsigned n, a;$/;"	m	struct:min_heap
n_add_for_cb	evbuffer-internal.h	/^        size_t n_add_for_cb;$/;"	m	struct:evbuffer
n_added	include/event2/buffer.h	/^        size_t n_added;$/;"	m	struct:evbuffer_cb_info
n_additional	evdns.c	/^	int n_additional; \/* how many additional RRs have been set? *\/$/;"	m	struct:server_request	file:
n_answer	evdns.c	/^	int n_answer; \/* how many answer RRs have been set? *\/$/;"	m	struct:server_request	file:
n_authority	evdns.c	/^	int n_authority; \/* how many authority RRs have been set? *\/$/;"	m	struct:server_request	file:
n_bad	test/tinytest.c	/^static int n_bad = 0; \/**< Number of tests that have failed. *\/$/;"	v	file:
n_buffers	buffer_iocp.c	/^	int n_buffers;$/;"	m	struct:buffer_overlapped	file:
n_del_for_cb	evbuffer-internal.h	/^        size_t n_del_for_cb;$/;"	m	struct:evbuffer
n_deleted	include/event2/buffer.h	/^        size_t n_deleted;$/;"	m	struct:evbuffer_cb_info
n_errors	test/bench_httpclient.c	/^int n_errors = 0;$/;"	v
n_labels	evdns.c	/^	int n_labels; \/* number of current entries *\/$/;"	m	struct:dnslabel_table	file:
n_live_threads	iocp-internal.h	/^	short n_live_threads;$/;"	m	struct:event_iocp_port
n_ok	test/tinytest.c	/^static int n_ok = 0; \/**< Number of tests that have passed *\/$/;"	v	file:
n_read	test/bench_httpclient.c	/^	size_t n_read;$/;"	m	struct:request_info	file:
n_req_heads	evdns.c	/^	int n_req_heads;$/;"	m	struct:evdns_base	file:
n_server_responses	test/regress_dns.c	/^static int n_server_responses = 0;$/;"	v	file:
n_skipped	test/tinytest.c	/^static int n_skipped = 0; \/**< Number of tests that have been skipped. *\/$/;"	v	file:
n_strings_read	test/regress_bufferevent.c	/^static int n_strings_read = 0;$/;"	v	file:
n_threads	iocp-internal.h	/^	short n_threads;$/;"	m	struct:event_iocp_port
nactivequeues	event-internal.h	/^	int nactivequeues;$/;"	m	struct:event_base
name	evdns.c	/^			char name[HOST_NAME_MAX];$/;"	m	struct:reply::__anon7::__anon10	file:
name	evdns.c	/^	char *name; \/* name part of the RR *\/$/;"	m	struct:server_reply_item	file:
name	event-internal.h	/^	const char *name;$/;"	m	struct:eventop
name	evrpc-internal.h	/^	char *name;$/;"	m	struct:evrpc_request_wrapper
name	include/event2/dns_struct.h	/^	char name[1];$/;"	m	struct:evdns_server_question
name	test/tinytest.h	/^	const char *name; \/**< An identifier for this case. *\/$/;"	m	struct:testcase_t
name_from_addr	http.c	/^name_from_addr(struct sockaddr *sa, socklen_t salen,$/;"	f	file:
name_parse	evdns.c	/^name_parse(u8 *packet, int length, int *idx, char *name_out, int name_out_len) {$/;"	f	file:
nameserver	evdns.c	/^struct nameserver {$/;"	s	file:
nameserver_failed	evdns.c	/^nameserver_failed(struct nameserver *const ns, const char *msg) {$/;"	f	file:
nameserver_pick	evdns.c	/^nameserver_pick(struct evdns_base *base) {$/;"	f	file:
nameserver_probe_callback	evdns.c	/^nameserver_probe_callback(int result, char type, int count, int ttl, void *addresses, void *arg) {$/;"	f	file:
nameserver_probe_failed	evdns.c	/^nameserver_probe_failed(struct nameserver *const ns) {$/;"	f	file:
nameserver_prod_callback	evdns.c	/^nameserver_prod_callback(evutil_socket_t fd, short events, void *arg) {$/;"	f	file:
nameserver_read	evdns.c	/^nameserver_read(struct nameserver *ns) {$/;"	f	file:
nameserver_ready_callback	evdns.c	/^nameserver_ready_callback(evutil_socket_t fd, short events, void *arg) {$/;"	f	file:
nameserver_send_probe	evdns.c	/^nameserver_send_probe(struct nameserver *const ns) {$/;"	f	file:
nameserver_up	evdns.c	/^nameserver_up(struct nameserver *const ns) {$/;"	f	file:
nameserver_write_waiting	evdns.c	/^nameserver_write_waiting(struct nameserver *ns, char waiting) {$/;"	f	file:
nchanges	devpoll.c	/^	int nchanges;$/;"	m	struct:devpollop	file:
nchanges	kqueue.c	/^	int nchanges;$/;"	m	struct:kqop	file:
ndots	evdns.c	/^	int ndots;$/;"	m	struct:search_state	file:
need_input_hook	test/regress_rpc.c	/^static int need_input_hook = 0;$/;"	v	file:
need_output_hook	test/regress_rpc.c	/^static int need_output_hook = 0;$/;"	v	file:
need_reinit	event-internal.h	/^	int need_reinit;$/;"	m	struct:eventop
nentries	event-internal.h	/^	int nentries;$/;"	m	struct:event_signal_map
nevents	devpoll.c	/^	int nevents;$/;"	m	struct:devpollop	file:
nevents	epoll.c	/^	int nevents;$/;"	m	struct:epollop	file:
nevents	kqueue.c	/^	int nevents;$/;"	m	struct:kqop	file:
next	evbuffer-internal.h	/^	TAILQ_ENTRY(evbuffer_cb_entry) next;$/;"	m	struct:evbuffer_cb_entry
next	evbuffer-internal.h	/^	struct evbuffer_chain *next;$/;"	m	struct:evbuffer_chain	typeref:struct:evbuffer_chain::evbuffer_chain
next	evdns.c	/^	struct evdns_request *next, *prev;$/;"	m	struct:evdns_request	typeref:struct:evdns_request::evdns_request	file:
next	evdns.c	/^	struct nameserver *next, *prev;$/;"	m	struct:nameserver	typeref:struct:nameserver::nameserver	file:
next	evdns.c	/^	struct search_domain *next;$/;"	m	struct:search_domain	typeref:struct:search_domain::search_domain	file:
next	evdns.c	/^	struct server_reply_item *next; \/* next item in sequence. *\/$/;"	m	struct:server_reply_item	typeref:struct:server_reply_item::server_reply_item	file:
next	evrpc-internal.h	/^	TAILQ_ENTRY(evrpc_request_wrapper) next;$/;"	m	struct:evrpc_request_wrapper
next	http-internal.h	/^	TAILQ_ENTRY(evhttp) next;$/;"	m	struct:evhttp
next	http-internal.h	/^	TAILQ_ENTRY(evhttp_cb) next;$/;"	m	struct:evhttp_cb
next	include/event2/event_struct.h	/^	TAILQ_ENTRY(evkeyval) next;$/;"	m	struct:evkeyval
next	include/event2/http_struct.h	/^	TAILQ_ENTRY(evhttp_request) next;$/;"	m	struct:evhttp_request
next	include/event2/rpc_struct.h	/^	TAILQ_ENTRY(evrpc) next;$/;"	m	struct:evrpc
next_pending	evdns.c	/^	struct server_request *next_pending;$/;"	m	struct:server_request	typeref:struct:server_request::server_request	file:
nfds	poll.c	/^	int nfds;                       \/* Size of event_* *\/$/;"	m	struct:pollop	file:
nil_setup	test/regress_buffer.c	/^static const struct testcase_setup_t nil_setup = {$/;"	v	typeref:struct:testcase_setup_t	file:
nobase_includeHEADERS_INSTALL	include/Makefile	/^nobase_includeHEADERS_INSTALL = $(install_sh_DATA)$/;"	m
nobase_include_HEADERS	include/Makefile	/^nobase_include_HEADERS = \\$/;"	m
nodist_includeHEADERS_INSTALL	Makefile	/^nodist_includeHEADERS_INSTALL = $(INSTALL_HEADER)$/;"	m
nodist_include_HEADERS	Makefile	/^nodist_include_HEADERS = event-config.h$/;"	m
noinst_HEADERS	Makefile	/^noinst_HEADERS = util-internal.h mm-internal.h ipv6-internal.h \\$/;"	m
noinst_HEADERS	test/Makefile	/^noinst_HEADERS = tinytest.h tinytest_macros.h regress.h$/;"	m
noinst_PROGRAMS	sample/Makefile	/^noinst_PROGRAMS = event-test$(EXEEXT) time-test$(EXEEXT) \\$/;"	m
noinst_PROGRAMS	test/Makefile	/^noinst_PROGRAMS = test-init$(EXEEXT) test-eof$(EXEEXT) \\$/;"	m
notes_add	test/regress.gen.h	/^  char * * (*notes_add)(struct run *msg, const char * value);$/;"	m	struct:run_access_
notes_assign	test/regress.gen.h	/^  int (*notes_assign)(struct run *, int, const char *);$/;"	m	struct:run_access_
notes_data	test/regress.gen.h	/^  char * *notes_data;$/;"	m	struct:run
notes_get	test/regress.gen.h	/^  int (*notes_get)(struct run *, int, char * *);$/;"	m	struct:run_access_
notes_length	test/regress.gen.h	/^  int notes_length;$/;"	m	struct:run
notes_num_allocated	test/regress.gen.h	/^  int notes_num_allocated;$/;"	m	struct:run
notes_set	test/regress.gen.h	/^  ev_uint8_t notes_set;$/;"	m	struct:run
nquestions	include/event2/dns_struct.h	/^	int nquestions;$/;"	m	struct:evdns_server_request
nread	evmap.c	/^	unsigned int nread;$/;"	m	struct:evmap_io	file:
nread	test/regress.c	/^	int nread;$/;"	m	struct:both	file:
ns	evdns.c	/^	struct nameserver *ns;	\/* the server which we last sent it *\/$/;"	m	struct:evdns_request	typeref:struct:evdns_request::nameserver	file:
ntoread	include/event2/http_struct.h	/^	ev_int64_t ntoread;$/;"	m	struct:evhttp_request
num_active	test/bench.c	/^static int num_pipes, num_active, num_writes;$/;"	v	file:
num_domains	evdns.c	/^	int num_domains;$/;"	m	struct:search_state	file:
num_pipes	test/bench.c	/^static int num_pipes, num_active, num_writes;$/;"	v	file:
num_writes	test/bench.c	/^static int num_pipes, num_active, num_writes;$/;"	v	file:
nwrite	evmap.c	/^	unsigned int nwrite;$/;"	m	struct:evmap_io	file:
off	buffer.c	/^	int off;$/;"	m	struct:evbuffer_iterator	file:
off	evbuffer-internal.h	/^	size_t off;$/;"	m	struct:evbuffer_chain
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	include/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	sample/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	test/Makefile	/^oldincludedir = \/usr\/include$/;"	m
open	evdns.c	160;"	d	file:
opt_forked	test/tinytest.c	/^static int opt_forked = 0; \/**< True iff we're called from inside a win32 fork*\/$/;"	v	file:
opt_nofork	test/tinytest.c	/^static int opt_nofork = 0; \/**< Suppress calls to fork() for debugging. *\/$/;"	v	file:
opt_verbosity	test/tinytest.c	/^static int opt_verbosity = 1; \/**< -==quiet,0==terse,1==normal,2==verbose *\/$/;"	v	file:
options	bufferevent-internal.h	/^	enum bufferevent_options options;$/;"	m	struct:bufferevent_private	typeref:enum:bufferevent_private::bufferevent_options
orig_size	include/event2/buffer.h	/^        size_t orig_size;$/;"	m	struct:evbuffer_cb_info
other_numbers_add	test/regress.gen.h	/^  ev_uint32_t * (*other_numbers_add)(struct run *msg, const ev_uint32_t value);$/;"	m	struct:run_access_
other_numbers_assign	test/regress.gen.h	/^  int (*other_numbers_assign)(struct run *, int, const ev_uint32_t);$/;"	m	struct:run_access_
other_numbers_data	test/regress.gen.h	/^  ev_uint32_t *other_numbers_data;$/;"	m	struct:run
other_numbers_get	test/regress.gen.h	/^  int (*other_numbers_get)(struct run *, int, ev_uint32_t *);$/;"	m	struct:run_access_
other_numbers_length	test/regress.gen.h	/^  int other_numbers_length;$/;"	m	struct:run
other_numbers_num_allocated	test/regress.gen.h	/^  int other_numbers_num_allocated;$/;"	m	struct:run
other_numbers_set	test/regress.gen.h	/^  ev_uint8_t other_numbers_set;$/;"	m	struct:run
out_hooks	evrpc-internal.h	/^	struct evrpc_hook_list out_hooks;$/;"	m	struct:_evrpc_hooks	typeref:struct:_evrpc_hooks::evrpc_hook_list
outbuf_cb	bufferevent_filter.c	/^	struct evbuffer_cb_entry *outbuf_cb;$/;"	m	struct:bufferevent_filtered	typeref:struct:bufferevent_filtered::evbuffer_cb_entry	file:
outcome	test/tinytest.c	/^enum outcome { SKIP=2, OK=1, FAIL=0 };$/;"	g	file:
outfilter_calls	test/regress_zlib.c	/^static int outfilter_calls;$/;"	v	file:
output	include/event2/bufferevent_struct.h	/^	struct evbuffer *output;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::evbuffer
output_buffer	include/event2/http_struct.h	/^	struct evbuffer *output_buffer;	\/* outgoing post or data *\/$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evbuffer
output_headers	include/event2/http_struct.h	/^	struct evkeyvalq *output_headers;$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evkeyvalq
output_hooks	evrpc-internal.h	68;"	d
overlapped	iocp-internal.h	/^	OVERLAPPED overlapped;$/;"	m	struct:event_overlapped
own_lock	bufferevent-internal.h	/^	unsigned own_lock : 1;$/;"	m	struct:bufferevent_private
own_lock	evbuffer-internal.h	/^	unsigned own_lock : 1;$/;"	m	struct:evbuffer
p	minheap-internal.h	/^    struct event** p;$/;"	m	struct:min_heap	typeref:struct:min_heap::event
pair	test/regress.c	/^int pair[2];$/;"	v
pair	test/regress.h	/^	int pair[2];$/;"	m	struct:basic_test_data
pair	test/test-weof.c	/^int pair[2];$/;"	v
pair_is_in	test/regress_iocp.c	/^pair_is_in(struct dummy_overlapped *o, uintptr_t key, ev_ssize_t n)$/;"	f	file:
parse	test/regress_util.c	/^	const char *parse;$/;"	m	struct:sa_port_ent	file:
partner	bufferevent_pair.c	/^	struct bufferevent_pair *partner;$/;"	m	struct:bufferevent_pair	typeref:struct:bufferevent_pair::bufferevent_pair	file:
pause_requests	evrpc-internal.h	/^	struct evrpc_pause_list pause_requests;$/;"	m	struct:_evrpc_hooks	typeref:struct:_evrpc_hooks::evrpc_pause_list
paused_requests	evrpc-internal.h	69;"	d
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	include/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	sample/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	test/Makefile	/^pdfdir = ${docdir}$/;"	m
pending_replies	evdns.c	/^	struct server_request *pending_replies;$/;"	m	struct:evdns_server_port	typeref:struct:evdns_server_port::server_request	file:
periodic_timeout_cb	test/regress.c	/^periodic_timeout_cb(int fd, short event, void *arg)$/;"	f	file:
pid	kqueue.c	/^	pid_t pid;$/;"	m	struct:kqop	file:
pin_release	buffer_iocp.c	/^pin_release(struct event_overlapped *eo, unsigned flag)$/;"	f	file:
pipes	test/bench.c	/^static int *pipes;$/;"	v	file:
pipes	test/bench_cascade.c	/^static int *pipes;$/;"	v	file:
pkgconfigDATA_INSTALL	Makefile	/^pkgconfigDATA_INSTALL = $(INSTALL_DATA)$/;"	m
pkgconfig_DATA	Makefile	/^pkgconfig_DATA = libevent.pc$/;"	m
pkgconfigdir	Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/libevent$/;"	m
pkgdatadir	include/Makefile	/^pkgdatadir = $(datadir)\/libevent$/;"	m
pkgdatadir	sample/Makefile	/^pkgdatadir = $(datadir)\/libevent$/;"	m
pkgdatadir	test/Makefile	/^pkgdatadir = $(datadir)\/libevent$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/libevent$/;"	m
pkgincludedir	include/Makefile	/^pkgincludedir = $(includedir)\/libevent$/;"	m
pkgincludedir	sample/Makefile	/^pkgincludedir = $(includedir)\/libevent$/;"	m
pkgincludedir	test/Makefile	/^pkgincludedir = $(includedir)\/libevent$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/libevent$/;"	m
pkglibdir	include/Makefile	/^pkglibdir = $(libdir)\/libevent$/;"	m
pkglibdir	sample/Makefile	/^pkglibdir = $(libdir)\/libevent$/;"	m
pkglibdir	test/Makefile	/^pkglibdir = $(libdir)\/libevent$/;"	m
poll_add	poll.c	/^poll_add(struct event_base *base, int fd, short old, short events, void *_idx)$/;"	f	file:
poll_check_ok	poll.c	/^poll_check_ok(struct pollop *pop)$/;"	f	file:
poll_check_ok	poll.c	114;"	d	file:
poll_dealloc	poll.c	/^poll_dealloc(struct event_base *base)$/;"	f	file:
poll_del	poll.c	/^poll_del(struct event_base *base, int fd, short old, short events, void *_idx)$/;"	f	file:
poll_dispatch	poll.c	/^poll_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
poll_init	poll.c	/^poll_init(struct event_base *base)$/;"	f	file:
pollidx	poll.c	/^struct pollidx {$/;"	s	file:
pollop	poll.c	/^struct pollop {$/;"	s	file:
pollops	poll.c	/^const struct eventop pollops = {$/;"	v	typeref:struct:eventop
pool	evrpc-internal.h	/^        struct evrpc_pool *pool;$/;"	m	struct:evrpc_request_wrapper	typeref:struct:evrpc_request_wrapper::evrpc_pool
port	evdns.c	/^	struct evdns_server_port *port; \/* Which port received this request on? *\/$/;"	m	struct:server_request	typeref:struct:server_request::evdns_server_port	file:
port	http-internal.h	/^	u_short port;$/;"	m	struct:evhttp_connection
port	iocp-internal.h	/^	HANDLE port;$/;"	m	struct:event_iocp_port
port	test/regress_util.c	/^	int port;$/;"	m	struct:sa_port_ent	file:
pos	evdns.c	/^struct dnslabel_entry { char *v; off_t pos; };$/;"	m	struct:dnslabel_entry	file:
pos	include/event2/buffer.h	/^	ev_ssize_t pos;$/;"	m	struct:evbuffer_ptr
pos_in_chain	include/event2/buffer.h	/^		size_t pos_in_chain;$/;"	m	struct:evbuffer_ptr::__anon6
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	include/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	sample/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	test/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	test/tinytest.h	/^	const char *prefix; \/**< Prefix to prepend to testnames. *\/$/;"	m	struct:testgroup_t
prefix_suffix_match	http.c	/^prefix_suffix_match(const char *pattern, const char *name, int ignorecase)$/;"	f	file:
prev	evdns.c	/^	struct evdns_request *next, *prev;$/;"	m	struct:evdns_request	typeref:struct:evdns_request::	file:
prev	evdns.c	/^	struct nameserver *next, *prev;$/;"	m	struct:nameserver	typeref:struct:nameserver::	file:
prev_pending	evdns.c	/^	struct server_request *prev_pending;$/;"	m	struct:server_request	typeref:struct:server_request::server_request	file:
previous_to_last	evbuffer-internal.h	/^	struct evbuffer_chain *previous_to_last;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::evbuffer_chain
probe_request	evdns.c	/^	struct evdns_request *probe_request;$/;"	m	struct:nameserver	typeref:struct:nameserver::evdns_request	file:
process	evrpc-internal.h	/^	int (*process)(void *, struct evhttp_request *,$/;"	m	struct:evrpc_hook
process_arg	evrpc-internal.h	/^	void *process_arg;$/;"	m	struct:evrpc_hook
process_in	bufferevent_filter.c	/^	bufferevent_filter_cb process_in;$/;"	m	struct:bufferevent_filtered	file:
process_out	bufferevent_filter.c	/^	bufferevent_filter_cb process_out;$/;"	m	struct:bufferevent_filtered	file:
profhz	compat/sys/_time.h	/^	int	profhz;		\/* profiling clock frequency *\/$/;"	m	struct:clockinfo
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	include/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	sample/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	test/Makefile	/^program_transform_name = s,x,x,$/;"	m
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	include/Makefile	/^psdir = ${docdir}$/;"	m
psdir	sample/Makefile	/^psdir = ${docdir}$/;"	m
psdir	test/Makefile	/^psdir = ${docdir}$/;"	m
pthread_basic	test/regress_pthread.c	/^pthread_basic(struct event_base *base)$/;"	f	file:
ptr	bufferevent-internal.h	/^	void *ptr;$/;"	m	union:bufferevent_ctrl_data
ptr	evdns.c	/^		} ptr;$/;"	m	union:reply::__anon7	typeref:struct:reply::__anon7::__anon10	file:
questions	include/event2/dns_struct.h	/^	struct evdns_server_question **questions;$/;"	m	struct:evdns_server_request	typeref:struct:evdns_server_request::evdns_server_question
queued	defer-internal.h	/^	unsigned queued : 1;$/;"	m	struct:deferred_cb
rand_bytes_function	evdns.c	/^static void (*rand_bytes_function)(char *buf, size_t n) =$/;"	v	file:
rand_int	test/test-time.c	/^rand_int(int n)$/;"	f	file:
rbuf	test/regress.c	/^static char rbuf[4096];$/;"	v	file:
rcsid	strlcpy.c	/^static char *rcsid = "$OpenBSD: strlcpy.c,v 1.5 2001\/05\/13 15:40:16 deraadt Exp $";$/;"	v	file:
re_add_read_cb	test/regress.c	/^re_add_read_cb(int fd, short event, void *arg)$/;"	f	file:
read	evdns.c	161;"	d	file:
read	test/regress.c	99;"	d	file:
read_called_once_cb	test/regress.c	/^read_called_once_cb(int fd, short event, void *arg)$/;"	f	file:
read_cb	test/bench.c	/^read_cb(int fd, short which, void *arg)$/;"	f	file:
read_cb	test/bench_cascade.c	/^read_cb(int fd, short which, void *arg)$/;"	f	file:
read_cb	test/regress_et.c	/^read_cb(int fd, short event, void *arg)$/;"	f	file:
read_cb	test/test-eof.c	/^read_cb(int fd, short event, void *arg)$/;"	f	file:
read_completed	buffer_iocp.c	/^read_completed(struct event_overlapped *eo, uintptr_t _, ev_ssize_t nBytes)$/;"	f	file:
read_in_progress	buffer_iocp.c	/^	unsigned read_in_progress : 1;$/;"	m	struct:evbuffer_overlapped	file:
read_in_progress	bufferevent_async.c	/^	unsigned read_in_progress : 1;$/;"	m	struct:bufferevent_async	file:
read_info	buffer_iocp.c	/^	struct buffer_overlapped read_info;$/;"	m	struct:evbuffer_overlapped	typeref:struct:evbuffer_overlapped::buffer_overlapped	file:
read_once_cb	test/regress.c	/^read_once_cb(int fd, short event, void *arg)$/;"	f	file:
read_pos_plus1	WIN32-Code/win32.c	/^	int read_pos_plus1;$/;"	m	struct:idx_info	file:
read_suspended	bufferevent-internal.h	/^	unsigned read_suspended : 1;$/;"	m	struct:bufferevent_private
read_watermarks_cb	bufferevent-internal.h	/^	struct evbuffer_cb_entry *read_watermarks_cb;$/;"	m	struct:bufferevent_private	typeref:struct:bufferevent_private::evbuffer_cb_entry
readcb	include/event2/bufferevent_struct.h	/^	bufferevent_data_cb readcb;$/;"	m	struct:bufferevent
readcb	test/bench_httpclient.c	/^readcb(struct bufferevent *b, void *arg)$/;"	f	file:
readcb	test/regress_bufferevent.c	/^readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
readcb	test/regress_zlib.c	/^readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
readcb_finished	test/regress_zlib.c	/^static int readcb_finished;$/;"	v	file:
readcb_pending	bufferevent-internal.h	/^	unsigned readcb_pending : 1;$/;"	m	struct:bufferevent_private
readd_test_event_last_added	test/regress.c	/^static struct event *readd_test_event_last_added = NULL;$/;"	v	typeref:struct:event	file:
reader_eventcb	test/regress_bufferevent.c	/^reader_eventcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
readset_in	WIN32-Code/win32.c	/^	struct win_fd_set *readset_in;$/;"	m	struct:win32op	typeref:struct:win32op::win_fd_set	file:
readset_out	WIN32-Code/win32.c	/^	struct win_fd_set *readset_out;$/;"	m	struct:win32op	typeref:struct:win32op::win_fd_set	file:
realloc_fd_sets	WIN32-Code/win32.c	/^realloc_fd_sets(struct win32op *op, size_t new_size)$/;"	f	file:
reassociate	evport.c	/^reassociate(struct evport_data *epdp, struct fd_info *fdip, int fd)$/;"	f	file:
ref_done_cb	test/regress_buffer.c	/^static void ref_done_cb(const void *data, size_t len, void *info)$/;"	f	file:
ref_done_cb_called_count	test/regress_buffer.c	/^static int ref_done_cb_called_count = 0;$/;"	v	file:
ref_done_cb_called_with	test/regress_buffer.c	/^static void *ref_done_cb_called_with = NULL;$/;"	v	file:
ref_done_cb_called_with_data	test/regress_buffer.c	/^static const void *ref_done_cb_called_with_data = NULL;$/;"	v	file:
ref_done_cb_called_with_len	test/regress_buffer.c	/^static size_t ref_done_cb_called_with_len = 0;$/;"	v	file:
refcnt	bufferevent-internal.h	/^	int refcnt;$/;"	m	struct:bufferevent_private
refcnt	evbuffer-internal.h	/^	int refcnt;$/;"	m	struct:evbuffer
refcnt	evdns.c	/^	int refcnt; \/* reference count. *\/$/;"	m	struct:evdns_server_port	file:
refcount	evdns.c	/^	int refcount;$/;"	m	struct:search_state	file:
reference_cb	test/regress_buffer.c	/^reference_cb(const void *data, size_t len, void *extra)$/;"	f	file:
reference_cb_called	test/regress_buffer.c	/^static int reference_cb_called;$/;"	v	file:
registered_rpcs	evrpc-internal.h	/^	TAILQ_HEAD(evrpc_list, evrpc) registered_rpcs;$/;"	m	struct:evrpc_base
regress_CFLAGS	test/Makefile	/^regress_CFLAGS = -I$(top_srcdir) -I$(top_srcdir)\/compat \\$/;"	m
regress_DEPENDENCIES	test/Makefile	/^regress_DEPENDENCIES = ..\/libevent.la $(am__DEPENDENCIES_1) \\$/;"	m
regress_LDADD	test/Makefile	/^regress_LDADD = ..\/libevent.la $(PTHREAD_LIBS) $(ZLIB_LIBS)$/;"	m
regress_LDFLAGS	test/Makefile	/^regress_LDFLAGS = $(PTHREAD_CFLAGS)$/;"	m
regress_LINK	test/Makefile	/^regress_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
regress_OBJECTS	test/Makefile	/^regress_OBJECTS = $(am_regress_OBJECTS)$/;"	m
regress_SOURCES	test/Makefile	/^regress_SOURCES = regress.c regress_buffer.c regress_http.c \\$/;"	m
regress_ipv4_parse	test/regress_util.c	/^regress_ipv4_parse(void *ptr)$/;"	f	file:
regress_ipv6_parse	test/regress_util.c	/^regress_ipv6_parse(void *ptr)$/;"	f	file:
regress_make_tmpfile	test/regress_main.c	/^regress_make_tmpfile(const void *data, size_t datalen)$/;"	f
regress_pthread_SOURCES	test/Makefile	/^regress_pthread_SOURCES = regress_pthread.c$/;"	m
regress_sockaddr_port_parse	test/regress_util.c	/^regress_sockaddr_port_parse(void *ptr)$/;"	f	file:
regress_threads	test/regress_pthread.c	/^regress_threads(void *arg)$/;"	f
reissue_count	evdns.c	/^	int reissue_count;$/;"	m	struct:evdns_request	file:
remote_host	include/event2/http_struct.h	/^	char *remote_host;$/;"	m	struct:evhttp_request
remote_port	include/event2/http_struct.h	/^	ev_uint16_t remote_port;$/;"	m	struct:evhttp_request
reply	evdns.c	/^	struct reply reply;$/;"	m	struct:deferred_reply_callback	typeref:struct:deferred_reply_callback::reply	file:
reply	evdns.c	/^struct reply {$/;"	s	file:
reply	evrpc-internal.h	/^	void *reply;$/;"	m	struct:evrpc_req_generic
reply	evrpc-internal.h	/^	void *reply;$/;"	m	struct:evrpc_request_wrapper
reply_clear	evrpc-internal.h	/^	void (*reply_clear)(void *);$/;"	m	struct:evrpc_request_wrapper
reply_complete	include/event2/rpc_struct.h	/^	int (*reply_complete)(void *);$/;"	m	struct:evrpc
reply_free	include/event2/rpc_struct.h	/^	void (*reply_free)(void *);$/;"	m	struct:evrpc
reply_handle	evdns.c	/^reply_handle(struct evdns_request *const req, u16 flags, u32 ttl, struct reply *reply) {$/;"	f	file:
reply_marshal	include/event2/rpc_struct.h	/^	void (*reply_marshal)(struct evbuffer*, void *);$/;"	m	struct:evrpc
reply_new	include/event2/rpc_struct.h	/^	void *(*reply_new)(void);$/;"	m	struct:evrpc
reply_parse	evdns.c	/^reply_parse(struct evdns_base *base, u8 *packet, int length) {$/;"	f	file:
reply_run_callback	evdns.c	/^reply_run_callback(struct deferred_cb *d, void *user_pointer)$/;"	f	file:
reply_schedule_callback	evdns.c	/^reply_schedule_callback(struct evdns_request *const req, u32 ttl, u32 err, struct reply *reply)$/;"	f	file:
reply_unmarshal	evrpc-internal.h	/^	int (*reply_unmarshal)(void *, struct evbuffer*);$/;"	m	struct:evrpc_request_wrapper
req	evrpc-internal.h	/^	struct evhttp_request *req;$/;"	m	struct:evrpc_request_wrapper	typeref:struct:evrpc_request_wrapper::evhttp_request
req	test/regress_http.c	/^	struct evhttp_request *req;$/;"	m	struct:chunk_req_state	typeref:struct:chunk_req_state::evhttp_request	file:
req_heads	evdns.c	/^	struct evdns_request **req_heads;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::evdns_request	file:
req_waiting_head	evdns.c	/^	struct evdns_request *req_waiting_head;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::evdns_request	file:
request	evdns.c	/^	u8 *request;  \/* the dns packet data *\/$/;"	m	struct:evdns_request	file:
request	evrpc-internal.h	/^	void *request;$/;"	m	struct:evrpc_req_generic
request	evrpc-internal.h	/^	void *request;$/;"	m	struct:evrpc_request_wrapper
request_appended	evdns.c	/^	char request_appended;	\/* true if the request pointer is data which follows this struct *\/$/;"	m	struct:evdns_request	file:
request_find_from_trans_id	evdns.c	/^request_find_from_trans_id(struct evdns_base *base, u16 trans_id) {$/;"	f	file:
request_finished	evdns.c	/^request_finished(struct evdns_request *const req, struct evdns_request **head) {$/;"	f	file:
request_free	include/event2/rpc_struct.h	/^	void (*request_free)(void *);$/;"	m	struct:evrpc
request_info	test/bench_httpclient.c	/^struct request_info {$/;"	s	file:
request_len	evdns.c	/^	unsigned int request_len;$/;"	m	struct:evdns_request	file:
request_marshal	evrpc-internal.h	/^	void (*request_marshal)(struct evbuffer *, void *);$/;"	m	struct:evrpc_request_wrapper
request_new	evdns.c	/^request_new(struct evdns_base *base, int type, const char *name, int flags,$/;"	f	file:
request_new	include/event2/rpc_struct.h	/^	void *(*request_new)(void);$/;"	m	struct:evrpc
request_parse	evdns.c	/^request_parse(u8 *packet, int length, struct evdns_server_port *port, struct sockaddr *addr, socklen_t addrlen)$/;"	f	file:
request_reissue	evdns.c	/^request_reissue(struct evdns_request *req) {$/;"	f	file:
request_submit	evdns.c	/^request_submit(struct evdns_request *const req) {$/;"	f	file:
request_trans_id_set	evdns.c	/^request_trans_id_set(struct evdns_request *const req, const u16 trans_id) {$/;"	f	file:
request_type	evdns.c	/^	u8 request_type;$/;"	m	struct:deferred_reply_callback	file:
request_type	evdns.c	/^	unsigned int request_type; \/* TYPE_PTR or TYPE_A *\/$/;"	m	struct:evdns_request	file:
request_unmarshal	include/event2/rpc_struct.h	/^	int (*request_unmarshal)(void *, struct evbuffer *);$/;"	m	struct:evrpc
requests	http-internal.h	/^	TAILQ_HEAD(evcon_requestq, evhttp_request) requests;$/;"	m	struct:evhttp_connection
require_features	event-internal.h	/^	enum event_method_feature require_features;$/;"	m	struct:event_config	typeref:enum:event_config::event_method_feature
res	test/regress_util.c	/^	ev_uint32_t res;$/;"	m	struct:ipv4_entry	file:
res	test/regress_util.c	/^	ev_uint32_t res[4];$/;"	m	struct:ipv6_entry	file:
resolv_conf_parse_line	evdns.c	/^resolv_conf_parse_line(struct evdns_base *base, char *const start, int flags) {$/;"	f	file:
resource	test/bench_httpclient.c	/^const char *resource = NULL;$/;"	v
response	evdns.c	/^	char *response;$/;"	m	struct:server_request	file:
response_code	include/event2/http_struct.h	/^	int response_code;		\/* HTTP Response code *\/$/;"	m	struct:evhttp_request
response_code_line	include/event2/http_struct.h	/^	char *response_code_line;	\/* Readable response *\/$/;"	m	struct:evhttp_request
response_len	evdns.c	/^	size_t response_len;$/;"	m	struct:server_request	file:
retry_cnt	http-internal.h	/^	int retry_cnt;			\/* retry count *\/$/;"	m	struct:evhttp_connection
retry_ev	http-internal.h	/^	struct event retry_ev;		\/* for retrying connects *\/$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::event
retry_max	http-internal.h	/^	int retry_max;			\/* maximum number of retries *\/$/;"	m	struct:evhttp_connection
roff	test/regress.c	/^static int roff;$/;"	v	file:
rpc	evrpc-internal.h	/^	struct evrpc *rpc;$/;"	m	struct:evrpc_req_generic	typeref:struct:evrpc_req_generic::evrpc
rpc_basic_client	test/regress_rpc.c	/^rpc_basic_client(void)$/;"	f	file:
rpc_basic_client_with_pause	test/regress_rpc.c	/^rpc_basic_client_with_pause(void)$/;"	f	file:
rpc_basic_message	test/regress_rpc.c	/^rpc_basic_message(void)$/;"	f	file:
rpc_basic_queued_client	test/regress_rpc.c	/^rpc_basic_queued_client(void)$/;"	f	file:
rpc_basic_test	test/regress_rpc.c	/^rpc_basic_test(void)$/;"	f	file:
rpc_client_timeout	test/regress_rpc.c	/^rpc_client_timeout(void)$/;"	f	file:
rpc_data	evrpc-internal.h	/^	struct evbuffer* rpc_data;$/;"	m	struct:evrpc_req_generic	typeref:struct:evrpc_req_generic::evbuffer
rpc_hook_add_header	test/regress_rpc.c	/^rpc_hook_add_header(void *ctx, struct evhttp_request *req,$/;"	f	file:
rpc_hook_add_meta	test/regress_rpc.c	/^rpc_hook_add_meta(void *ctx, struct evhttp_request *req,$/;"	f	file:
rpc_hook_pause	test/regress_rpc.c	/^rpc_hook_pause(void *ctx, struct evhttp_request *req, struct evbuffer *evbuf,$/;"	f	file:
rpc_hook_pause_cb	test/regress_rpc.c	/^rpc_hook_pause_cb(int fd, short what, void *arg)$/;"	f	file:
rpc_hook_remove_header	test/regress_rpc.c	/^rpc_hook_remove_header(void *ctx, struct evhttp_request *req,$/;"	f	file:
rpc_pool_with_connection	test/regress_rpc.c	/^rpc_pool_with_connection(short port)$/;"	f	file:
rpc_postrequest_done	test/regress_rpc.c	/^rpc_postrequest_done(struct evhttp_request *req, void *arg)$/;"	f	file:
rpc_postrequest_failure	test/regress_rpc.c	/^rpc_postrequest_failure(struct evhttp_request *req, void *arg)$/;"	f	file:
rpc_setup	test/regress_rpc.c	/^rpc_setup(struct evhttp **phttp, short *pport, struct evrpc_base **pbase)$/;"	f	file:
rpc_teardown	test/regress_rpc.c	/^rpc_teardown(struct evrpc_base *base)$/;"	f	file:
rpc_test	test/regress_rpc.c	/^rpc_test(void)$/;"	f	file:
rpc_testcases	test/regress_rpc.c	/^struct testcase_t rpc_testcases[] = {$/;"	v	typeref:struct:testcase_t
run	event_rpcgen.py	/^    def run(self):$/;"	m	class:CommandLine
run	test/regress.gen.h	/^struct run {$/;"	s
run_	test/regress.gen.h	/^enum run_ {$/;"	g
run_access_	test/regress.gen.h	/^struct run_access_ {$/;"	s
run_add	test/regress.gen.h	/^  struct run*  (*run_add)(struct msg *msg);$/;"	m	struct:msg_access_	typeref:struct:msg_access_::run_add
run_assign	test/regress.gen.h	/^  int (*run_assign)(struct msg *, int, const struct run*);$/;"	m	struct:msg_access_
run_clear	test/regress.gen.c	/^run_clear(struct run *tmp)$/;"	f
run_complete	test/regress.gen.c	/^run_complete(struct run *msg)$/;"	f
run_data	test/regress.gen.h	/^  struct run* *run_data;$/;"	m	struct:msg	typeref:struct:msg::run
run_fixed_bytes_assign	test/regress.gen.c	/^run_fixed_bytes_assign(struct run *msg, const ev_uint8_t *value)$/;"	f
run_fixed_bytes_get	test/regress.gen.c	/^run_fixed_bytes_get(struct run *msg, ev_uint8_t **value)$/;"	f
run_free	test/regress.gen.c	/^run_free(struct run *tmp)$/;"	f
run_get	test/regress.gen.h	/^  int (*run_get)(struct msg *, int, struct run* *);$/;"	m	struct:msg_access_
run_how_assign	test/regress.gen.c	/^run_how_assign(struct run *msg,$/;"	f
run_how_get	test/regress.gen.c	/^run_how_get(struct run *msg, char * *value)$/;"	f
run_large_number_assign	test/regress.gen.c	/^run_large_number_assign(struct run *msg, const ev_uint64_t value)$/;"	f
run_large_number_get	test/regress.gen.c	/^run_large_number_get(struct run *msg, ev_uint64_t *value)$/;"	f
run_legacy_test_fn	test/regress_main.c	/^run_legacy_test_fn(void *ptr)$/;"	f
run_length	test/regress.gen.h	/^  int run_length;$/;"	m	struct:msg
run_marshal	test/regress.gen.c	/^run_marshal(struct evbuffer *evbuf, const struct run *tmp){$/;"	f
run_new	test/regress.gen.c	/^run_new(void)$/;"	f
run_notes_add	test/regress.gen.c	/^run_notes_add(struct run *msg, const char * value)$/;"	f
run_notes_assign	test/regress.gen.c	/^run_notes_assign(struct run *msg, int off,$/;"	f
run_notes_get	test/regress.gen.c	/^run_notes_get(struct run *msg, int offset,$/;"	f
run_num_allocated	test/regress.gen.h	/^  int run_num_allocated;$/;"	m	struct:msg
run_once	test/bench.c	/^run_once(void)$/;"	f	file:
run_once	test/bench_cascade.c	/^run_once(int num_pipes)$/;"	f	file:
run_other_numbers_add	test/regress.gen.c	/^run_other_numbers_add(struct run *msg, const ev_uint32_t value)$/;"	f
run_other_numbers_assign	test/regress.gen.c	/^run_other_numbers_assign(struct run *msg, int off,$/;"	f
run_other_numbers_get	test/regress.gen.c	/^run_other_numbers_get(struct run *msg, int offset,$/;"	f
run_set	test/regress.gen.h	/^  ev_uint8_t run_set;$/;"	m	struct:msg
run_some_bytes_assign	test/regress.gen.c	/^run_some_bytes_assign(struct run *msg, const ev_uint8_t * value, ev_uint32_t len)$/;"	f
run_some_bytes_get	test/regress.gen.c	/^run_some_bytes_get(struct run *msg, ev_uint8_t * *value, ev_uint32_t *plen)$/;"	f
run_unmarshal	test/regress.gen.c	/^run_unmarshal(struct run *tmp,  struct evbuffer *evbuf)$/;"	f
s6_addr	ipv6-internal.h	/^	ev_uint8_t s6_addr[16];$/;"	m	struct:in6_addr
sa_family	test/regress_util.c	/^	int sa_family;$/;"	m	struct:sa_port_ent	file:
sa_family_t	ipv6-internal.h	/^typedef int sa_family_t;$/;"	t
sa_port_ent	test/regress_util.c	/^static struct sa_port_ent {$/;"	s	file:
sa_port_ents	test/regress_util.c	/^} sa_port_ents[] = {$/;"	v	typeref:struct:sa_port_ent	file:
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	include/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	sample/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	test/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
search_domain	evdns.c	/^struct search_domain {$/;"	s	file:
search_flags	evdns.c	/^	int search_flags;$/;"	m	struct:evdns_request	file:
search_index	evdns.c	/^	int search_index;$/;"	m	struct:evdns_request	file:
search_make_new	evdns.c	/^search_make_new(const struct search_state *const state, int n, const char *const base_name) {$/;"	f	file:
search_origname	evdns.c	/^	char *search_origname;	\/* needs to be free()ed *\/$/;"	m	struct:evdns_request	file:
search_postfix_add	evdns.c	/^search_postfix_add(struct evdns_base *base, const char *domain) {$/;"	f	file:
search_postfix_clear	evdns.c	/^search_postfix_clear(struct evdns_base *base) {$/;"	f	file:
search_request_finished	evdns.c	/^search_request_finished(struct evdns_request *const req) {$/;"	f	file:
search_request_new	evdns.c	/^search_request_new(struct evdns_base *base, int type, const char *const name, int flags, evdns_callback_type user_callback, void *user_arg) {$/;"	f	file:
search_reverse	evdns.c	/^search_reverse(struct evdns_base *base) {$/;"	f	file:
search_set_from_hostname	evdns.c	/^search_set_from_hostname(struct evdns_base *base) {$/;"	f	file:
search_state	evdns.c	/^	struct search_state *search_state;$/;"	m	struct:evdns_request	typeref:struct:evdns_request::search_state	file:
search_state	evdns.c	/^struct search_state {$/;"	s	file:
search_state_decref	evdns.c	/^search_state_decref(struct search_state *const state) {$/;"	f	file:
search_state_new	evdns.c	/^search_state_new(void) {$/;"	f	file:
search_try_next	evdns.c	/^search_try_next(struct evdns_request *const req) {$/;"	f	file:
select_add	select.c	/^select_add(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
select_dealloc	select.c	/^select_dealloc(struct event_base *base)$/;"	f	file:
select_del	select.c	/^select_del(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
select_dispatch	select.c	/^select_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
select_init	select.c	/^select_init(struct event_base *base)$/;"	f	file:
select_resize	select.c	/^select_resize(struct selectop *sop, int fdsz)$/;"	f	file:
selectop	select.c	/^struct selectop {$/;"	s	file:
selectops	select.c	/^const struct eventop selectops = {$/;"	v	typeref:struct:eventop
self_draining_callback	test/regress_buffer.c	/^self_draining_callback(struct evbuffer *evbuffer, size_t old_len,$/;"	f	file:
sender_errorcb	test/regress_bufferevent.c	/^sender_errorcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
sender_writecb	test/regress_bufferevent.c	/^sender_writecb(struct bufferevent *bev, void *ctx)$/;"	f	file:
server_head	evdns.c	/^	struct nameserver *server_head;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::nameserver	file:
server_port_flush	evdns.c	/^server_port_flush(struct evdns_server_port *port)$/;"	f	file:
server_port_free	evdns.c	/^server_port_free(struct evdns_server_port *port)$/;"	f	file:
server_port_read	evdns.c	/^server_port_read(struct evdns_server_port *s) {$/;"	f	file:
server_port_ready_callback	evdns.c	/^server_port_ready_callback(evutil_socket_t fd, short events, void *arg) {$/;"	f	file:
server_reply_item	evdns.c	/^struct server_reply_item {$/;"	s	file:
server_request	evdns.c	/^struct server_request {$/;"	s	file:
server_request_free	evdns.c	/^server_request_free(struct server_request *req)$/;"	f	file:
server_request_free_answers	evdns.c	/^server_request_free_answers(struct server_request *req)$/;"	f	file:
set_random_timeout	test/regress_minheap.c	/^set_random_timeout(struct event *ev)$/;"	f	file:
setenv	test/regress.c	/^static void setenv(const char *k, const char *v, int _o)$/;"	f	file:
setup	test/test.sh	/^setup () {$/;"	f
setup	test/tinytest.h	/^	const struct testcase_setup_t *setup; \/**< Optional setup\/cleanup fns*\/$/;"	m	struct:testcase_t	typeref:struct:testcase_t::testcase_setup_t
setup_data	test/regress.h	/^	void *setup_data;$/;"	m	struct:basic_test_data
setup_data	test/tinytest.h	/^	void *setup_data; \/**< Extra data usable by setup function *\/$/;"	m	struct:testcase_t
setup_fn	test/tinytest.h	/^	void *(*setup_fn)(const struct testcase_t *);$/;"	m	struct:testcase_setup_t
setup_passthrough	test/regress_buffer.c	/^setup_passthrough(const struct testcase_t *testcase)$/;"	f	file:
setup_test	test/regress.c	/^setup_test(const char *name)$/;"	f	file:
sh_old	evsignal-internal.h	/^	ev_sighandler_t **sh_old;$/;"	m	struct:evsig_info
sh_old	evsignal-internal.h	/^	struct sigaction **sh_old;$/;"	m	struct:evsig_info	typeref:struct:evsig_info::sigaction
sh_old_max	evsignal-internal.h	/^	int sh_old_max;$/;"	m	struct:evsig_info
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	include/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	sample/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	test/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shutdown	iocp-internal.h	/^	short shutdown;$/;"	m	struct:event_iocp_port
shutdownSemaphore	iocp-internal.h	/^	HANDLE *shutdownSemaphore;$/;"	m	struct:event_iocp_port
sig	event-internal.h	/^	struct evsig_info sig;$/;"	m	struct:event_base	typeref:struct:event_base::evsig_info
sigmap	event-internal.h	/^	struct event_signal_map sigmap;$/;"	m	struct:event_base	typeref:struct:event_base::event_signal_map
signal_add	include/event2/event_compat.h	297;"	d
signal_assign	include/event2/event_compat.h	308;"	d
signal_cb	sample/signal-test.c	/^signal_cb(int fd, short event, void *arg)$/;"	f	file:
signal_cb	test/regress.c	/^signal_cb(int fd, short event, void *arg)$/;"	f	file:
signal_cb_sa	test/regress.c	/^signal_cb_sa(int sig)$/;"	f	file:
signal_cb_swp	test/regress.c	/^signal_cb_swp(int sig, short event, void *arg)$/;"	f	file:
signal_del	include/event2/event_compat.h	320;"	d
signal_initialized	include/event2/event_compat.h	330;"	d
signal_new	include/event2/event_compat.h	314;"	d
signal_pending	include/event2/event_compat.h	325;"	d
signal_set	include/event2/event_compat.h	302;"	d
signal_test_DEPENDENCIES	sample/Makefile	/^signal_test_DEPENDENCIES = ..\/libevent.la$/;"	m
signal_test_LDADD	sample/Makefile	/^signal_test_LDADD = $(LDADD)$/;"	m
signal_test_OBJECTS	sample/Makefile	/^signal_test_OBJECTS = signal-test.$(OBJEXT)$/;"	m
signal_test_SOURCES	sample/Makefile	/^signal_test_SOURCES = signal-test.c$/;"	m
signal_test_sources	sample/Makefile	/^signal_test_sources = signal-test.c$/;"	m
signal_testcases	test/regress.c	/^struct testcase_t signal_testcases[] = {$/;"	v	typeref:struct:testcase_t
signals_are_broken	WIN32-Code/win32.c	/^	unsigned signals_are_broken : 1;$/;"	m	struct:win32op	file:
simple_read_cb	test/regress.c	/^simple_read_cb(int fd, short event, void *arg)$/;"	f	file:
simple_write_cb	test/regress.c	/^simple_write_cb(int fd, short event, void *arg)$/;"	f	file:
simpleread_multiple_cb	test/regress.c	/^simpleread_multiple_cb(int fd, short event, void *arg)$/;"	f	file:
sin6_addr	ipv6-internal.h	/^	struct in6_addr sin6_addr;$/;"	m	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr
sin6_family	ipv6-internal.h	/^	sa_family_t sin6_family;$/;"	m	struct:sockaddr_in6
sin6_port	ipv6-internal.h	/^	ev_uint16_t sin6_port;$/;"	m	struct:sockaddr_in6
sizes	test/regress_iocp.c	/^	ev_ssize_t sizes[MAX_CALLS];$/;"	m	struct:dummy_overlapped	file:
sockaddr_eq	evdns.c	/^sockaddr_eq(const struct sockaddr *sa1, const struct sockaddr *sa2,$/;"	f	file:
sockaddr_in6	ipv6-internal.h	/^struct sockaddr_in6 {$/;"	s
socket	evdns.c	/^	evutil_socket_t socket;	 \/* a connected UDP socket *\/$/;"	m	struct:nameserver	file:
socket	evdns.c	/^	evutil_socket_t socket; \/* socket we use to read queries and write replies. *\/$/;"	m	struct:evdns_server_port	file:
socket_connect	http.c	/^socket_connect(evutil_socket_t fd, const char *address, unsigned short port)$/;"	f	file:
sockets	http-internal.h	/^	TAILQ_HEAD(boundq, evhttp_bound_socket) sockets;$/;"	m	struct:evhttp
socklen_t	WIN32-Code/config.h	231;"	d
socklen_t	util-internal.h	85;"	d
some_bytes_assign	test/regress.gen.h	/^  int (*some_bytes_assign)(struct run *, const ev_uint8_t *, ev_uint32_t);$/;"	m	struct:run_access_
some_bytes_data	test/regress.gen.h	/^  ev_uint8_t *some_bytes_data;$/;"	m	struct:run
some_bytes_get	test/regress.gen.h	/^  int (*some_bytes_get)(struct run *, ev_uint8_t * *, ev_uint32_t *);$/;"	m	struct:run_access_
some_bytes_length	test/regress.gen.h	/^  ev_uint32_t some_bytes_length;$/;"	m	struct:run
some_bytes_set	test/regress.gen.h	/^  ev_uint8_t some_bytes_set;$/;"	m	struct:run
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	include/Makefile	/^srcdir = .$/;"	m
srcdir	sample/Makefile	/^srcdir = .$/;"	m
srcdir	test/Makefile	/^srcdir = .$/;"	m
started	test/bench_httpclient.c	/^	struct timeval started;$/;"	m	struct:request_info	typeref:struct:request_info::timeval	file:
state	evdns.c	/^	char state;  \/* zero if we think that this server is down *\/$/;"	m	struct:nameserver	file:
state	http-internal.h	/^	enum evhttp_connection_state state;$/;"	m	struct:evhttp_connection	typeref:enum:evhttp_connection::evhttp_connection_state
stathz	compat/sys/_time.h	/^	int	stathz;		\/* statistics clock frequency *\/$/;"	m	struct:clockinfo
status	test/regress_util.c	/^	enum entry_status status;$/;"	m	struct:ipv4_entry	typeref:enum:ipv4_entry::entry_status	file:
status	test/regress_util.c	/^	enum entry_status status;$/;"	m	struct:ipv6_entry	typeref:enum:ipv6_entry::entry_status	file:
string_num_dots	evdns.c	/^string_num_dots(const char *s) {$/;"	f	file:
strlcpy	strlcpy-internal.h	15;"	d
strsep	http.c	/^strsep(char **s, const char *del)$/;"	f	file:
strtoint	evdns.c	/^strtoint(const char *const str) {$/;"	f	file:
strtoint_clipped	evdns.c	/^strtoint_clipped(const char *const str, int min, int max)$/;"	f	file:
strtok_r	evdns.c	/^strtok_r(char *s, const char *delim, char **state) {$/;"	f	file:
subdir	Makefile	/^subdir = .$/;"	m
subdir	include/Makefile	/^subdir = include$/;"	m
subdir	sample/Makefile	/^subdir = sample$/;"	m
subdir	test/Makefile	/^subdir = test$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	include/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	sample/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	test/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	include/Makefile	/^target_alias = $/;"	m
target_alias	sample/Makefile	/^target_alias = $/;"	m
target_alias	test/Makefile	/^target_alias = $/;"	m
tcalled	test/regress.c	/^static struct timeval tcalled;$/;"	v	typeref:struct:timeval	file:
test	test/test.sh	/^test () {$/;"	f
test_base_environ	test/regress.c	/^test_base_environ(void *arg)$/;"	f	file:
test_base_features	test/regress.c	/^test_base_features(void *arg)$/;"	f	file:
test_bufferevent	test/regress_bufferevent.c	/^test_bufferevent(void)$/;"	f	file:
test_bufferevent_connect	test/regress_bufferevent.c	/^test_bufferevent_connect(void *arg)$/;"	f	file:
test_bufferevent_filters	test/regress_bufferevent.c	/^test_bufferevent_filters(void)$/;"	f	file:
test_bufferevent_filters_impl	test/regress_bufferevent.c	/^test_bufferevent_filters_impl(int use_pair)$/;"	f	file:
test_bufferevent_impl	test/regress_bufferevent.c	/^test_bufferevent_impl(int use_pair)$/;"	f	file:
test_bufferevent_pair	test/regress_bufferevent.c	/^test_bufferevent_pair(void)$/;"	f	file:
test_bufferevent_pair_filters	test/regress_bufferevent.c	/^test_bufferevent_pair_filters(void)$/;"	f	file:
test_bufferevent_pair_watermarks	test/regress_bufferevent.c	/^test_bufferevent_pair_watermarks(void)$/;"	f	file:
test_bufferevent_watermarks	test/regress_bufferevent.c	/^test_bufferevent_watermarks(void)$/;"	f	file:
test_bufferevent_watermarks_impl	test/regress_bufferevent.c	/^test_bufferevent_watermarks_impl(int use_pair)$/;"	f	file:
test_bufferevent_zlib	test/regress_zlib.c	/^test_bufferevent_zlib(void *arg)$/;"	f
test_combined	test/regress.c	/^test_combined(void)$/;"	f	file:
test_edgetriggered	test/regress_et.c	/^test_edgetriggered(void *et)$/;"	f	file:
test_eof_DEPENDENCIES	test/Makefile	/^test_eof_DEPENDENCIES = ..\/libevent_core.la$/;"	m
test_eof_LDADD	test/Makefile	/^test_eof_LDADD = ..\/libevent_core.la$/;"	m
test_eof_OBJECTS	test/Makefile	/^test_eof_OBJECTS = $(am_test_eof_OBJECTS)$/;"	m
test_eof_SOURCES	test/Makefile	/^test_eof_SOURCES = test-eof.c$/;"	m
test_evbuffer	test/regress_buffer.c	/^test_evbuffer(void *ptr)$/;"	f	file:
test_evbuffer_add_file	test/regress_buffer.c	/^test_evbuffer_add_file(void *ptr)$/;"	f	file:
test_evbuffer_add_reference	test/regress_buffer.c	/^test_evbuffer_add_reference(void *ptr)$/;"	f	file:
test_evbuffer_callbacks	test/regress_buffer.c	/^test_evbuffer_callbacks(void *ptr)$/;"	f	file:
test_evbuffer_find	test/regress_buffer.c	/^test_evbuffer_find(void *ptr)$/;"	f	file:
test_evbuffer_freeze	test/regress_buffer.c	/^test_evbuffer_freeze(void *ptr)$/;"	f	file:
test_evbuffer_iterative	test/regress_buffer.c	/^test_evbuffer_iterative(void *ptr)$/;"	f	file:
test_evbuffer_peek	test/regress_buffer.c	/^test_evbuffer_peek(void *info)$/;"	f	file:
test_evbuffer_prepend	test/regress_buffer.c	/^test_evbuffer_prepend(void *ptr)$/;"	f	file:
test_evbuffer_ptr_set	test/regress_buffer.c	/^test_evbuffer_ptr_set(void *ptr)$/;"	f	file:
test_evbuffer_readln	test/regress_buffer.c	/^test_evbuffer_readln(void *ptr)$/;"	f	file:
test_evbuffer_reference	test/regress_buffer.c	/^test_evbuffer_reference(void *ptr)$/;"	f	file:
test_evbuffer_reserve2	test/regress_buffer.c	/^test_evbuffer_reserve2(void *ptr)$/;"	f	file:
test_evbuffer_search	test/regress_buffer.c	/^test_evbuffer_search(void *ptr)$/;"	f	file:
test_event_base_new	test/regress.c	/^test_event_base_new(void *ptr)$/;"	f	file:
test_event_once	test/regress.c	/^test_event_once(void *ptr)$/;"	f	file:
test_event_pending	test/regress.c	/^test_event_pending(void *ptr)$/;"	f	file:
test_evutil_casecmp	test/regress_util.c	/^test_evutil_casecmp(void *ptr)$/;"	f	file:
test_evutil_snprintf	test/regress_util.c	/^test_evutil_snprintf(void *ptr)$/;"	f	file:
test_evutil_strtoll	test/regress_util.c	/^test_evutil_strtoll(void *ptr)$/;"	f	file:
test_fork	test/regress.c	/^test_fork(void)$/;"	f	file:
test_free_active_base	test/regress.c	/^test_free_active_base(void *ptr)$/;"	f	file:
test_heap_randomized	test/regress_minheap.c	/^test_heap_randomized(void *ptr)$/;"	f	file:
test_immediatesignal	test/regress.c	/^test_immediatesignal(void)$/;"	f	file:
test_init_DEPENDENCIES	test/Makefile	/^test_init_DEPENDENCIES = ..\/libevent_core.la$/;"	m
test_init_LDADD	test/Makefile	/^test_init_LDADD = ..\/libevent_core.la$/;"	m
test_init_OBJECTS	test/Makefile	/^test_init_OBJECTS = $(am_test_init_OBJECTS)$/;"	m
test_init_SOURCES	test/Makefile	/^test_init_SOURCES = test-init.c$/;"	m
test_iocp_bufferevent_async	test/regress_iocp.c	/^test_iocp_bufferevent_async(void *ptr)$/;"	f	file:
test_iocp_evbuffer	test/regress_iocp.c	/^test_iocp_evbuffer(void *ptr)$/;"	f	file:
test_iocp_port	test/regress_iocp.c	/^test_iocp_port(void *ptr)$/;"	f	file:
test_loopbreak	test/regress.c	/^test_loopbreak(void)$/;"	f	file:
test_loopexit	test/regress.c	/^test_loopexit(void)$/;"	f	file:
test_loopexit_multiple	test/regress.c	/^test_loopexit_multiple(void)$/;"	f	file:
test_manipulate_active_events	test/regress.c	/^test_manipulate_active_events(void *ptr)$/;"	f	file:
test_methods	test/regress.c	/^test_methods(void *ptr)$/;"	f	file:
test_mm_functions	test/regress.c	/^test_mm_functions(void *arg)$/;"	f	file:
test_multiple	test/regress.c	/^test_multiple(void)$/;"	f	file:
test_multiple_cb	test/regress.c	/^test_multiple_cb(int fd, short event, void *arg)$/;"	f	file:
test_multiple_events_for_same_fd	test/regress.c	/^test_multiple_events_for_same_fd(void)$/;"	f	file:
test_multiplesignal	test/regress.c	/^test_multiplesignal(void)$/;"	f	file:
test_nonpersist_readd	test/regress.c	/^test_nonpersist_readd(void)$/;"	f	file:
test_ok	test/regress.c	/^int test_ok;$/;"	v
test_okay	test/test-eof.c	/^int test_okay = 1;$/;"	v
test_okay	test/test-weof.c	/^int test_okay = 1;$/;"	v
test_persistent	test/regress.c	/^test_persistent(void)$/;"	f	file:
test_persistent_timeout	test/regress.c	/^test_persistent_timeout(void)$/;"	f	file:
test_pri_event	test/regress.c	/^struct test_pri_event {$/;"	s	file:
test_priorities	test/regress.c	/^test_priorities(void)$/;"	f	file:
test_priorities_cb	test/regress.c	/^test_priorities_cb(int fd, short what, void *arg)$/;"	f	file:
test_priorities_impl	test/regress.c	/^test_priorities_impl(int npriorities)$/;"	f	file:
test_signal_assert	test/regress.c	/^test_signal_assert(void)$/;"	f	file:
test_signal_dealloc	test/regress.c	/^test_signal_dealloc(void)$/;"	f	file:
test_signal_pipeloss	test/regress.c	/^test_signal_pipeloss(void)$/;"	f	file:
test_signal_restore	test/regress.c	/^test_signal_restore(void)$/;"	f	file:
test_signal_switchbase	test/regress.c	/^test_signal_switchbase(void)$/;"	f	file:
test_signal_while_processing	test/regress.c	/^test_signal_while_processing(void)$/;"	f	file:
test_simpleread	test/regress.c	/^test_simpleread(void)$/;"	f	file:
test_simpleread_multiple	test/regress.c	/^test_simpleread_multiple(void)$/;"	f	file:
test_simplesignal	test/regress.c	/^test_simplesignal(void)$/;"	f	file:
test_simpletimeout	test/regress.c	/^test_simpletimeout(void)$/;"	f	file:
test_simplewrite	test/regress.c	/^test_simplewrite(void)$/;"	f	file:
test_time_DEPENDENCIES	test/Makefile	/^test_time_DEPENDENCIES = ..\/libevent_core.la$/;"	m
test_time_LDADD	test/Makefile	/^test_time_LDADD = ..\/libevent_core.la$/;"	m
test_time_OBJECTS	test/Makefile	/^test_time_OBJECTS = $(am_test_time_OBJECTS)$/;"	m
test_time_SOURCES	test/Makefile	/^test_time_SOURCES = test-time.c$/;"	m
test_version	test/regress.c	/^test_version(void *arg)$/;"	f	file:
test_want_only_once	test/regress.c	/^test_want_only_once(void)$/;"	f	file:
test_weof_DEPENDENCIES	test/Makefile	/^test_weof_DEPENDENCIES = ..\/libevent_core.la$/;"	m
test_weof_LDADD	test/Makefile	/^test_weof_LDADD = ..\/libevent_core.la$/;"	m
test_weof_OBJECTS	test/Makefile	/^test_weof_OBJECTS = $(am_test_weof_OBJECTS)$/;"	m
test_weof_SOURCES	test/Makefile	/^test_weof_SOURCES = test-weof.c$/;"	m
testcase_fn	test/tinytest.h	/^typedef void (*testcase_fn)(void *);$/;"	t
testcase_run_one	test/tinytest.c	/^testcase_run_one(const struct testgroup_t *group,$/;"	f
testcase_setup_t	test/tinytest.h	/^struct testcase_setup_t {$/;"	s
testcase_t	test/tinytest.h	/^struct testcase_t {$/;"	s
testgroup_t	test/tinytest.h	/^struct testgroup_t {$/;"	s
testgroups	test/regress_main.c	/^struct testgroup_t testgroups[] = {$/;"	v	typeref:struct:testgroup_t
th_base_lock	event-internal.h	/^	void *th_base_lock;$/;"	m	struct:event_base
th_notify	event-internal.h	/^	struct event th_notify;$/;"	m	struct:event_base	typeref:struct:event_base::event
th_notify_fd	event-internal.h	/^	int th_notify_fd[2];$/;"	m	struct:event_base
th_notify_fn	event-internal.h	/^	int (*th_notify_fn)(struct event_base *base);$/;"	m	struct:event_base
th_owner_id	event-internal.h	/^	unsigned long th_owner_id;$/;"	m	struct:event_base
thread_testcases	test/regress_main.c	/^struct testcase_t thread_testcases[] = {$/;"	v	typeref:struct:testcase_t
threads	iocp-internal.h	/^	HANDLE *threads;$/;"	m	struct:event_iocp_port
tick	compat/sys/_time.h	/^	int	tick;		\/* micro-seconds per hz tick *\/$/;"	m	struct:clockinfo
tickadj	compat/sys/_time.h	/^	int	tickadj;	\/* clock skew rate for adjtime() *\/$/;"	m	struct:clockinfo
time_cb	test/test-time.c	/^time_cb(int fd, short event, void *arg)$/;"	f	file:
time_test_DEPENDENCIES	sample/Makefile	/^time_test_DEPENDENCIES = ..\/libevent.la$/;"	m
time_test_LDADD	sample/Makefile	/^time_test_LDADD = $(LDADD)$/;"	m
time_test_OBJECTS	sample/Makefile	/^time_test_OBJECTS = time-test.$(OBJEXT)$/;"	m
time_test_SOURCES	sample/Makefile	/^time_test_SOURCES = time-test.c$/;"	m
time_test_sources	sample/Makefile	/^time_test_sources = time-test.c$/;"	m
timedout	evdns.c	/^	int timedout;  \/* number of times in a row a request has timed out *\/$/;"	m	struct:nameserver	file:
timeheap	event-internal.h	/^	struct min_heap timeheap;$/;"	m	struct:event_base	typeref:struct:event_base::min_heap
timeout	evrpc-internal.h	/^	int timeout;$/;"	m	struct:evrpc_pool
timeout	http-internal.h	/^	int timeout;			\/* timeout in seconds for events *\/$/;"	m	struct:evhttp_connection
timeout	http-internal.h	/^        int timeout;$/;"	m	struct:evhttp
timeout_add	include/event2/event_compat.h	257;"	d
timeout_called_once_cb	test/regress.c	/^timeout_called_once_cb(int fd, short event, void *arg)$/;"	f	file:
timeout_cb	sample/time-test.c	/^timeout_cb(int fd, short event, void *arg)$/;"	f	file:
timeout_cb	test/regress.c	/^timeout_cb(int fd, short event, void *arg)$/;"	f	file:
timeout_cb_swp	test/regress.c	/^timeout_cb_swp(int fd, short event, void *arg)$/;"	f	file:
timeout_correct	event.c	/^timeout_correct(struct event_base *base, struct timeval *tv)$/;"	f	file:
timeout_del	include/event2/event_compat.h	280;"	d
timeout_event	evdns.c	/^	struct event timeout_event;  \/* used to keep the timeout for *\/$/;"	m	struct:nameserver	typeref:struct:nameserver::event	file:
timeout_event	evdns.c	/^	struct event timeout_event;$/;"	m	struct:evdns_request	typeref:struct:evdns_request::event	file:
timeout_initialized	http.c	83;"	d	file:
timeout_initialized	include/event2/event_compat.h	291;"	d
timeout_next	event.c	/^timeout_next(struct event_base *base, struct timeval **tv_p)$/;"	f	file:
timeout_pending	http.c	82;"	d	file:
timeout_pending	include/event2/event_compat.h	286;"	d
timeout_process	event.c	/^timeout_process(struct event_base *base)$/;"	f	file:
timeout_read	include/event2/bufferevent_struct.h	/^	struct timeval timeout_read;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::timeval
timeout_set	include/event2/event_compat.h	270;"	d
timeout_write	include/event2/bufferevent_struct.h	/^	struct timeval timeout_write;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::timeval
timeradd	compat/sys/_time.h	85;"	d
timerclear	compat/sys/_time.h	79;"	d
timercmp	compat/sys/_time.h	81;"	d
timerisset	compat/sys/_time.h	80;"	d
timersub	compat/sys/_time.h	94;"	d
timespec	compat/sys/_time.h	/^struct timespec {$/;"	s
timespecadd	compat/sys/_time.h	111;"	d
timespecclear	compat/sys/_time.h	105;"	d
timespeccmp	compat/sys/_time.h	107;"	d
timespecisset	compat/sys/_time.h	106;"	d
timespecsub	compat/sys/_time.h	120;"	d
timeval	compat/sys/_time.h	/^struct timeval {$/;"	s
timeval_to_ms	WIN32-Code/win32.c	/^timeval_to_ms(struct timeval *tv)$/;"	f	file:
timezone	compat/sys/_time.h	/^struct timezone {$/;"	s
tinytest_main	test/tinytest.c	/^tinytest_main(int c, const char **v, struct testgroup_t *groups)$/;"	f
tinytest_skip	test/tinytest.h	78;"	d
to_name_assign	test/regress.gen.h	/^  int (*to_name_assign)(struct msg *, const char *);$/;"	m	struct:msg_access_
to_name_data	test/regress.gen.h	/^  char *to_name_data;$/;"	m	struct:msg
to_name_get	test/regress.gen.h	/^  int (*to_name_get)(struct msg *, char * *);$/;"	m	struct:msg_access_
to_name_set	test/regress.gen.h	/^  ev_uint8_t to_name_set;$/;"	m	struct:msg
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	include/Makefile	/^top_builddir = ..$/;"	m
top_builddir	sample/Makefile	/^top_builddir = ..$/;"	m
top_builddir	test/Makefile	/^top_builddir = ..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	include/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	sample/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	test/Makefile	/^top_srcdir = ..$/;"	m
total_len	evbuffer-internal.h	/^	size_t total_len;$/;"	m	struct:evbuffer
total_n_bytes	test/bench_httpclient.c	/^size_t total_n_bytes = 0;$/;"	v
total_n_errors	test/bench_httpclient.c	/^int total_n_errors = 0;$/;"	v
total_n_handled	test/bench_httpclient.c	/^int total_n_handled = 0;$/;"	v
total_n_launched	test/bench_httpclient.c	/^int total_n_launched = 0;$/;"	v
total_time	test/bench_httpclient.c	/^struct timeval total_time = {0,0};$/;"	v	typeref:struct:timeval
trans_id	evdns.c	/^	u16 trans_id;  \/* the transaction id *\/$/;"	m	struct:evdns_request	file:
trans_id	evdns.c	/^	u16 trans_id; \/* Transaction id. *\/$/;"	m	struct:server_request	file:
trans_id_from_random_bytes_fn	evdns.c	/^trans_id_from_random_bytes_fn(void)$/;"	f	file:
trans_id_function	evdns.c	/^static ev_uint16_t (*trans_id_function)(void) = default_transaction_id_fn;$/;"	v	file:
transaction_id_pick	evdns.c	/^transaction_id_pick(struct evdns_base *base) {$/;"	f	file:
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	include/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	sample/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	test/Makefile	/^transform = $(program_transform_name)$/;"	m
transmit_me	evdns.c	/^	char transmit_me;  \/* needs to be transmitted *\/$/;"	m	struct:evdns_request	file:
tset	test/regress.c	/^static struct timeval tset;$/;"	v	typeref:struct:timeval	file:
tt_abort	test/tinytest_macros.h	74;"	d
tt_abort_msg	test/tinytest_macros.h	73;"	d
tt_abort_perror	test/tinytest_macros.h	72;"	d
tt_abort_printf	test/tinytest_macros.h	71;"	d
tt_assert	test/tinytest_macros.h	111;"	d
tt_assert_msg	test/tinytest_macros.h	105;"	d
tt_assert_op_type	test/tinytest_macros.h	128;"	d
tt_assert_test_type	test/tinytest_macros.h	113;"	d
tt_fail	test/tinytest_macros.h	80;"	d
tt_fail_msg	test/tinytest_macros.h	79;"	d
tt_fail_perror	test/tinytest_macros.h	78;"	d
tt_fail_printf	test/tinytest_macros.h	77;"	d
tt_int_op	test/tinytest_macros.h	131;"	d
tt_iov_eq	test/regress_buffer.c	986;"	d	file:
tt_line_eq	test/regress_buffer.c	415;"	d	file:
tt_ptr_op	test/tinytest_macros.h	137;"	d
tt_skip	test/tinytest_macros.h	83;"	d
tt_str_op	test/tinytest_macros.h	141;"	d
tt_uint_op	test/tinytest_macros.h	134;"	d
tt_want	test/tinytest_macros.h	109;"	d
tt_want_msg	test/tinytest_macros.h	101;"	d
ttl	evdns.c	/^	u32 ttl; \/* The RR TTL *\/$/;"	m	struct:server_reply_item	file:
ttl	evdns.c	/^	u32 ttl;$/;"	m	struct:deferred_reply_callback	file:
tv_cache	event-internal.h	/^	struct timeval tv_cache;$/;"	m	struct:event_base	typeref:struct:event_base::timeval
tv_nsec	compat/sys/_time.h	/^	long	tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec
tv_sec	compat/sys/_time.h	/^	long	tv_sec;		\/* seconds *\/$/;"	m	struct:timeval
tv_sec	compat/sys/_time.h	/^	time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec
tv_usec	compat/sys/_time.h	/^	long	tv_usec;	\/* and microseconds *\/$/;"	m	struct:timeval
tx_count	evdns.c	/^	int tx_count;  \/* the number of times that this packet has been sent *\/$/;"	m	struct:evdns_request	file:
type	bufferevent-internal.h	/^	const char *type;$/;"	m	struct:bufferevent_ops
type	evdns.c	/^	u16 type; \/* The RR type *\/$/;"	m	struct:server_reply_item	file:
type	evdns.c	/^	unsigned int type;$/;"	m	struct:reply	file:
type	include/event2/dns_struct.h	/^	int type;$/;"	m	struct:evdns_server_question
type	include/event2/http_struct.h	/^	enum evhttp_cmd_type type;$/;"	m	struct:evhttp_request	typeref:enum:evhttp_request::evhttp_cmd_type
tz_dsttime	compat/sys/_time.h	/^	int	tz_dsttime;	\/* type of dst correction *\/$/;"	m	struct:timezone
tz_minuteswest	compat/sys/_time.h	/^	int	tz_minuteswest;	\/* minutes west of Greenwich *\/$/;"	m	struct:timezone
u16	evdns.c	156;"	d	file:
u32	evdns.c	155;"	d	file:
u64	evdns.c	154;"	d	file:
u8	evdns.c	157;"	d	file:
u_char	event.h	/^typedef unsigned char u_char;$/;"	t
u_short	event.h	/^typedef unsigned short u_short;$/;"	t
uint	evdns.c	/^typedef unsigned int uint;$/;"	t	file:
uint16_t	WIN32-Code/config.h	234;"	d
uint32_t	WIN32-Code/config.h	237;"	d
uint64_t	WIN32-Code/config.h	240;"	d
uint8_t	WIN32-Code/config.h	243;"	d
underlying	bufferevent_filter.c	/^	struct bufferevent *underlying;$/;"	m	struct:bufferevent_filtered	typeref:struct:bufferevent_filtered::bufferevent	file:
unsetenv	test/regress.c	/^static void unsetenv(const char *k)$/;"	f	file:
upcast	bufferevent_async.c	/^upcast(struct bufferevent *bev)$/;"	f	file:
upcast	bufferevent_filter.c	/^upcast(struct bufferevent *bev)$/;"	f	file:
upcast	bufferevent_pair.c	/^upcast(struct bufferevent *bev)$/;"	f	file:
upcast_evbuffer	buffer_iocp.c	/^upcast_evbuffer(struct evbuffer *buf)$/;"	f	file:
upcast_overlapped	buffer_iocp.c	/^upcast_overlapped(struct event_overlapped *o)$/;"	f	file:
uri	include/event2/http_struct.h	/^	char *uri;			\/* uri after HTTP request was parsed *\/$/;"	m	struct:evhttp_request
uri	include/event2/rpc_struct.h	/^	const char* uri;$/;"	m	struct:evrpc
uri_chars	http.c	/^static const char uri_chars[256] = {$/;"	v	file:
usage	test/tinytest.c	/^usage(struct testgroup_t *groups, int list_groups)$/;"	f	file:
use_mmap	buffer.c	/^static int use_mmap = 1;$/;"	v	file:
use_monotonic	event.c	/^static int use_monotonic;$/;"	v	file:
use_sendfile	buffer.c	/^static int use_sendfile = 1;$/;"	v	file:
usepersist	test/regress.c	/^static int usepersist;$/;"	v	file:
user_callback	evdns.c	/^	evdns_callback_type user_callback;$/;"	m	struct:deferred_reply_callback	file:
user_callback	evdns.c	/^	evdns_callback_type user_callback;$/;"	m	struct:evdns_request	file:
user_callback	evdns.c	/^	evdns_request_callback_fn_type user_callback; \/* Fn to handle requests *\/$/;"	m	struct:evdns_server_port	file:
user_data	evdns.c	/^	void *user_data; \/* Opaque pointer passed to user_callback *\/$/;"	m	struct:evdns_server_port	file:
user_data	listener.c	/^	void *user_data;$/;"	m	struct:evconnlistener	file:
user_pointer	evdns.c	/^	void *user_pointer;  \/* the pointer given to us for this request *\/$/;"	m	struct:evdns_request	file:
util_testcases	test/regress_util.c	/^struct testcase_t util_testcases[] = {$/;"	v	typeref:struct:testcase_t
v	evdns.c	/^struct dnslabel_entry { char *v; off_t pos; };$/;"	m	struct:dnslabel_entry	file:
va_copy	buffer.c	2058;"	d	file:
validate_header	test/regress_http.c	/^static int validate_header($/;"	f	file:
value	include/event2/event_struct.h	/^	char *value;$/;"	m	struct:evkeyval
vbase	test/regress_rpc.c	/^	void *vbase;$/;"	m	struct:_rpc_hook_ctx	file:
verbosity_flag	test/tinytest.c	/^const char *verbosity_flag = "";$/;"	v
vhost_pattern	http-internal.h	/^        char *vhost_pattern;$/;"	m	struct:evhttp
virtualhosts	http-internal.h	/^	TAILQ_HEAD(vhostsq, evhttp) virtualhosts;$/;"	m	struct:evhttp
was_et	test/regress_et.c	/^static int was_et = 0;$/;"	v	file:
wbuf	test/regress.c	/^static char wbuf[4096];$/;"	v	file:
weapon_assign	test/regress.gen.h	/^  int (*weapon_assign)(struct kill *, const char *);$/;"	m	struct:kill_access_
weapon_data	test/regress.gen.h	/^  char *weapon_data;$/;"	m	struct:kill
weapon_get	test/regress.gen.h	/^  int (*weapon_get)(struct kill *, char * *);$/;"	m	struct:kill_access_
weapon_set	test/regress.gen.h	/^  ev_uint8_t weapon_set;$/;"	m	struct:kill
what	http-internal.h	/^	char *what;$/;"	m	struct:evhttp_cb
win32_add	WIN32-Code/win32.c	/^win32_add(struct event_base *base, evutil_socket_t fd,$/;"	f
win32_dealloc	WIN32-Code/win32.c	/^win32_dealloc(struct event_base *_base)$/;"	f
win32_del	WIN32-Code/win32.c	/^win32_del(struct event_base *base, evutil_socket_t fd, short old, short events,$/;"	f
win32_dispatch	WIN32-Code/win32.c	/^win32_dispatch(struct event_base *base, struct timeval *tv)$/;"	f
win32_init	WIN32-Code/win32.c	/^win32_init(struct event_base *_base)$/;"	f
win32op	WIN32-Code/win32.c	/^struct win32op {$/;"	s	file:
win32ops	WIN32-Code/win32.c	/^struct eventop win32ops = {$/;"	v	typeref:struct:eventop
win_fd_set	WIN32-Code/win32.c	/^struct win_fd_set {$/;"	s	file:
windows_socket_errors	evutil.c	/^static struct { int code; const char *msg; } windows_socket_errors[] = {$/;"	v	typeref:struct:__anon1	file:
wm_errorcb	test/regress_bufferevent.c	/^wm_errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
wm_read	include/event2/bufferevent_struct.h	/^	struct event_watermark wm_read;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event_watermark
wm_readcb	test/regress_bufferevent.c	/^wm_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
wm_write	include/event2/bufferevent_struct.h	/^	struct event_watermark wm_write;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event_watermark
wm_writecb	test/regress_bufferevent.c	/^wm_writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
woff	test/regress.c	/^static int woff;$/;"	v	file:
write	test/regress.c	98;"	d	file:
write_cb	test/test-weof.c	/^write_cb(int fd, short event, void *arg)$/;"	f	file:
write_completed	buffer_iocp.c	/^write_completed(struct event_overlapped *eo, uintptr_t _, ev_ssize_t nBytes)$/;"	f	file:
write_in_progress	buffer_iocp.c	/^	unsigned write_in_progress : 1;$/;"	m	struct:evbuffer_overlapped	file:
write_in_progress	bufferevent_async.c	/^	unsigned write_in_progress : 1;$/;"	m	struct:bufferevent_async	file:
write_info	buffer_iocp.c	/^	struct buffer_overlapped write_info;$/;"	m	struct:evbuffer_overlapped	typeref:struct:evbuffer_overlapped::buffer_overlapped	file:
write_pos_plus1	WIN32-Code/win32.c	/^	int write_pos_plus1;$/;"	m	struct:idx_info	file:
write_waiting	evdns.c	/^	char write_waiting;  \/* true if we are waiting for EV_WRITE events *\/$/;"	m	struct:nameserver	file:
writecb	include/event2/bufferevent_struct.h	/^	bufferevent_data_cb writecb;$/;"	m	struct:bufferevent
writecb	test/regress_bufferevent.c	/^writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
writecb	test/regress_zlib.c	/^writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
writecb_finished	test/regress_zlib.c	/^static int writecb_finished;$/;"	v	file:
writecb_pending	bufferevent-internal.h	/^	unsigned writecb_pending : 1;$/;"	m	struct:bufferevent_private
writes	test/bench.c	/^static int count, writes, fired;$/;"	v	file:
writeset_in	WIN32-Code/win32.c	/^	struct win_fd_set *writeset_in;$/;"	m	struct:win32op	typeref:struct:win32op::win_fd_set	file:
writeset_out	WIN32-Code/win32.c	/^	struct win_fd_set *writeset_out;$/;"	m	struct:win32op	typeref:struct:win32op::win_fd_set	file:
zlib_deflate_free	test/regress_zlib.c	/^zlib_deflate_free(void *ctx)$/;"	f	file:
zlib_inflate_free	test/regress_zlib.c	/^zlib_inflate_free(void *ctx)$/;"	f	file:
zlib_input_filter	test/regress_zlib.c	/^zlib_input_filter(struct evbuffer *src, struct evbuffer *dst,$/;"	f	file:
zlib_output_filter	test/regress_zlib.c	/^zlib_output_filter(struct evbuffer *src, struct evbuffer *dst,$/;"	f	file:
